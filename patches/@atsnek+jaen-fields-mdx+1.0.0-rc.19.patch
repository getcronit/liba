diff --git a/node_modules/@atsnek/jaen-fields-mdx/dist/Editor-2144fe7f.js b/node_modules/@atsnek/jaen-fields-mdx/dist/Editor-2144fe7f.js
deleted file mode 100644
index 4993645..0000000
--- a/node_modules/@atsnek/jaen-fields-mdx/dist/Editor-2144fe7f.js
+++ /dev/null
@@ -1,2 +0,0 @@
-var e=require("./index-c7899b5b.js"),r=require("react/jsx-runtime"),t=require("@chakra-ui/icons"),n=require("@chakra-ui/react"),i=require("@codemirror/lang-markdown"),a=require("@codemirror/language-data"),o=require("@uiw/react-codemirror"),s=require("react"),u=require("react-error-boundary"),c=require("vfile-statistics");function l(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}require("@atsnek/jaen"),require("@mdx-js/mdx"),require("ahooks"),require("mdast-util-frontmatter"),require("mdast-util-gfm"),require("mdast-util-math"),require("mdast-util-mdx"),require("rehype-slug-custom-id"),require("rehype-mdx-code-props"),require("rehype-mathjax/svg"),require("mdast-util-directive"),require("remark-directive"),require("remark-frontmatter"),require("remark-gfm"),require("remark-math"),require("vfile"),require("vfile-message"),require("mdast-util-to-markdown"),require("deepmerge"),require("react-syntax-highlighter"),require("gatsby");var d=/*#__PURE__*/l(o),m=/*#__PURE__*/l(s),f=function(e){var i=e.items;return r.jsxs(n.Menu,{children:[r.jsx(n.MenuButton,{as:n.Button,leftIcon:r.jsx(t.AddIcon,{}),size:"sm",variant:"link",mx:"2",children:"Components"}),r.jsx(n.MenuList,{children:i.map(function(e){return r.jsx(n.MenuItem,{onClick:e.onClick,children:e.label},e.label)})})]})},p=function(e){var t=s.useState(e.selectedTab),i=t[1];return r.jsx(n.Box,{position:"relative",children:r.jsxs(n.Tabs,{index:t[0],onChange:function(e){i(e)},pos:"relative",size:"sm",children:[r.jsxs(n.TabList,{pos:"sticky",top:"0",zIndex:"1",children:[e.tabs.map(function(e,t){return r.jsx(n.Tab,{children:e.label},t)}),r.jsx(n.Spacer,{}),r.jsx(f,{items:e.componentsInfo||[]})]}),r.jsx(n.TabPanels,{children:e.tabs.map(function(e,t){return r.jsx(n.TabPanel,{p:"0",children:e.content},t)})})]})})},x=m.default.memo(function(t){return r.jsx(u.ErrorBoundary,{FallbackComponent:e.ErrorFallback,children:r.jsx(d.default,e._extends({},t))})}),h=function(u){var l,d=e.useMdx({gfm:!0,frontmatter:!0,math:!0,directive:!0,mdast:u.mdast},!1,u.components),f=d[0],h=d[1],j=m.default.useState(null),g=j[0],v=j[1],b=Object.entries(u.components||{}).filter(function(e){var r,t=e[0];return t[0]===(null==(r=t[0])?void 0:r.toUpperCase())}),q=s.useMemo(function(){return f.file?c.statistics(f.file):{}},[f.file]),k=s.useCallback(function(r){if(r.docChanged){var t=String(r.state.doc);h(e._extends({},f,{value:t}))}},[h]);return s.useEffect(function(){null==u.onUpdateValue||u.onUpdateValue(f.file.data.mdast)},[null==(l=f.file.data)?void 0:l.mdast]),r.jsx(p,{tabs:[{label:r.jsxs(n.HStack,{spacing:2,children:[r.jsx(t.ViewIcon,{}),r.jsx(n.Box,{children:"Preview"}),q.fatal?r.jsx(n.Badge,{colorScheme:"red",children:"Error"}):q.warn?r.jsx(n.Badge,{colorScheme:"yellow",children:"Warning"}):null]}),content:r.jsx(e.PreviewComponent,{state:f,stats:q,components:u.components})},{label:r.jsxs(n.HStack,{spacing:2,children:[r.jsx(t.EditIcon,{}),r.jsx(n.Box,{children:"Editor"})]}),content:r.jsxs(r.Fragment,{children:[r.jsx("noscript",{children:"Enable JavaScript for the rendered result."}),r.jsx(x,{value:f.value,extensions:[i.markdown({base:i.markdownLanguage,codeLanguages:a.languages}),o.EditorView.lineWrapping],onCreateEditor:function(e){v(e)},onUpdate:k,theme:"dark"})]})}],componentsInfo:b.map(function(e){var r=e[0],t=e[1];return{label:t.displayName||r,onClick:function(){var e,n=Object.entries(t.defaultProps||{}).reduce(function(e,r){var t=r[0],n=r[1];if("children"===t)return e;if("function"==typeof n){var a=n();e[t]=i(a)}else e[t]=i(n);return e},{});function i(e){return"string"==typeof e?'"'+e+'"':"number"==typeof e||"boolean"==typeof e?e:"object"==typeof e?"{"+JSON.stringify(e)+"}":e}var a=Object.entries(n).map(function(e){return e[0]+"="+e[1]}).join(" ");!function(e){if(g){var r=g.state.selection.ranges[g.state.selection.mainIndex],t=r.from,n=r.to;if(t!==n){var i={from:t,to:n,insert:e},a=g.state.update({changes:{from:i.from,to:i.to,insert:i.insert}});g.dispatch(a)}else if(0===t&&0===n){var o={from:g.state.doc.length,to:g.state.doc.length,insert:"\n"+e+"\n"},s=g.state.update({changes:{from:o.from,to:o.to,insert:o.insert}});g.dispatch(s)}else{var u=g.state.selection.main.head,c={from:u,to:u,insert:e+(""===g.state.doc.lineAt(u).text.trim()?"\n":"")},l=g.state.update({changes:{from:c.from,to:c.to,insert:c.insert}});g.dispatch(l)}}}("<"+r+(a&&" "+a)+">"+((null==(e=t.defaultProps)?void 0:e.children)||"")+"</"+r+">")}}}),selectedTab:0})};exports.Editor=h,exports.default=h;
-//# sourceMappingURL=Editor-2144fe7f.js.map
diff --git a/node_modules/@atsnek/jaen-fields-mdx/dist/Editor-2144fe7f.js.map b/node_modules/@atsnek/jaen-fields-mdx/dist/Editor-2144fe7f.js.map
deleted file mode 100644
index b85267c..0000000
--- a/node_modules/@atsnek/jaen-fields-mdx/dist/Editor-2144fe7f.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"Editor-2144fe7f.js","sources":["../src/MdxField/components/TabsTemplate.tsx","../src/MdxField/components/Editor.tsx"],"sourcesContent":["import {AddIcon} from '@chakra-ui/icons'\nimport {\n  Box,\n  Button,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Spacer,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs\n} from '@chakra-ui/react'\nimport React, {useState} from 'react'\n\ninterface ComponentInfoProps {\n  items: Array<{\n    label: string\n    onClick: () => void\n  }>\n}\n\nexport const ComponentInfo: React.FC<ComponentInfoProps> = ({items}) => (\n  <Menu>\n    <MenuButton\n      as={Button}\n      leftIcon={<AddIcon />}\n      size=\"sm\"\n      variant=\"link\"\n      mx=\"2\">\n      Components\n    </MenuButton>\n\n    <MenuList>\n      {items.map(item => (\n        <MenuItem key={item.label} onClick={item.onClick}>\n          {item.label}\n        </MenuItem>\n      ))}\n    </MenuList>\n  </Menu>\n)\n\nexport interface TabsProps {\n  tabs: Array<{\n    label: React.ReactNode\n    content: React.ReactNode\n  }>\n  selectedTab: number\n  componentsInfo?: ComponentInfoProps['items']\n}\n\nconst TabsTemplate: React.FC<TabsProps> = props => {\n  const [selectedTab, setSelectedTab] = useState(props.selectedTab)\n\n  const handleTabChange = (index: number) => {\n    setSelectedTab(index)\n  }\n\n  return (\n    <Box position=\"relative\">\n      <Tabs\n        index={selectedTab}\n        onChange={handleTabChange}\n        pos=\"relative\"\n        size=\"sm\">\n        <TabList pos=\"sticky\" top=\"0\" zIndex=\"1\">\n          {props.tabs.map((tab, i) => (\n            <Tab key={i}>{tab.label}</Tab>\n          ))}\n          <Spacer />\n          <ComponentInfo items={props.componentsInfo || []} />\n        </TabList>\n\n        <TabPanels>\n          {props.tabs.map((tab, i) => (\n            <TabPanel key={i} p=\"0\">\n              {tab.content}\n            </TabPanel>\n          ))}\n        </TabPanels>\n      </Tabs>\n    </Box>\n  )\n}\n\nexport default TabsTemplate\n","import {EditIcon, ViewIcon} from '@chakra-ui/icons'\nimport {Badge, Box, HStack} from '@chakra-ui/react'\nimport {markdown, markdownLanguage} from '@codemirror/lang-markdown'\nimport {languages} from '@codemirror/language-data'\n\nimport CodeMirror, {\n  ReactCodeMirrorProps,\n  EditorView\n} from '@uiw/react-codemirror'\n\nimport React, {useCallback, useEffect, useMemo} from 'react'\nimport {ErrorBoundary} from 'react-error-boundary'\nimport {statistics, Statistics} from 'vfile-statistics'\n\nimport {ErrorFallback} from './ErrorFallback.js'\nimport {PreviewComponent} from './PreviewComponent.js'\nimport TabsTemplate from './TabsTemplate.js'\n\nimport {useMdx} from '../use-mdx.js'\nimport {BaseEditorProps} from './types.js'\n\nconst MemoizedCodeMirror = React.memo<ReactCodeMirrorProps>(props => {\n  return (\n    <ErrorBoundary FallbackComponent={ErrorFallback}>\n      <CodeMirror {...props} />\n    </ErrorBoundary>\n  )\n})\n\nexport interface EditorProps extends BaseEditorProps {}\n\nexport const Editor: React.FC<EditorProps> = props => {\n  const [state, setConfig] = useMdx(\n    {\n      gfm: true,\n      frontmatter: true,\n      math: true,\n      directive: true,\n      mdast: props.mdast\n    },\n    false,\n    props.components\n  ) as any\n\n  const [view, setView] = React.useState<EditorView | null>(null)\n\n  const componentsInfo = Object.entries(props.components || {}).filter(\n    ([name]) => {\n      return name[0] === name[0]?.toUpperCase()\n    }\n  )\n\n  const stats = useMemo(\n    () => (state.file ? statistics(state.file) : ({} as Statistics)),\n    [state.file]\n  )\n\n  const onUpdate = useCallback(\n    (v: {docChanged: any; state: {doc: any}}) => {\n      if (v.docChanged) {\n        const value = String(v.state.doc)\n\n        setConfig({...state, value})\n      }\n    },\n    [setConfig]\n  )\n\n  // const onUpdate = useCallback(\n  //   (v: {docChanged: any; state: {doc: any}}) => {\n  //     if (v.docChanged) {\n  //       console.log('docChanged 2', v)\n\n  //       const value = String(v.state.doc)\n\n  //       setConfig({...state, value})\n  //     }\n  //   },\n  //   [setConfig]\n  // )\n\n  const insertSnippet = (snippet: string) => {\n    if (!view) return\n\n    // Get the current selection\n    const {from, to} =\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      view.state.selection.ranges[view.state.selection.mainIndex]!\n\n    // Check if there is a selection\n    if (from !== to) {\n      // Replace the selected text with the snippet\n      const changes = {from, to, insert: snippet}\n      const tr = view.state.update({\n        changes: {from: changes.from, to: changes.to, insert: changes.insert}\n      })\n      view.dispatch(tr)\n    } else if (from === 0 && to === 0) {\n      // Insert the snippet at the end of the file\n      const changes = {\n        from: view.state.doc.length,\n        to: view.state.doc.length,\n        insert: `\\n${snippet}\\n`\n      }\n      const tr = view.state.update({\n        changes: {from: changes.from, to: changes.to, insert: changes.insert}\n      })\n      view.dispatch(tr)\n    } else {\n      // Get the cursor position\n      const cursor = view.state.selection.main.head\n\n      // Get the current line content\n      const lineContent = view.state.doc.lineAt(cursor).text\n\n      // Check if the line is empty\n      const isEmptyLine = lineContent.trim() === ''\n\n      // Insert the snippet with or without a newline depending on the line content\n      const changes = {\n        from: cursor,\n        to: cursor,\n        insert: snippet + (isEmptyLine ? '\\n' : '')\n      }\n      const tr = view.state.update({\n        changes: {from: changes.from, to: changes.to, insert: changes.insert}\n      })\n      view.dispatch(tr)\n    }\n  }\n\n  useEffect(() => {\n    props.onUpdateValue?.(state.file.data.mdast)\n  }, [state.file.data?.mdast])\n\n  return (\n    <TabsTemplate\n      tabs={[\n        {\n          label: (\n            <HStack spacing={2}>\n              <ViewIcon />\n              <Box>Preview</Box>\n              {stats.fatal ? (\n                <Badge colorScheme=\"red\">Error</Badge>\n              ) : stats.warn ? (\n                <Badge colorScheme=\"yellow\">Warning</Badge>\n              ) : null}\n            </HStack>\n          ),\n          content: (\n            <PreviewComponent\n              state={state}\n              stats={stats}\n              components={props.components}\n            />\n          )\n        },\n        {\n          label: (\n            <HStack spacing={2}>\n              <EditIcon />\n              <Box>Editor</Box>\n            </HStack>\n          ),\n          content: (\n            <>\n              <noscript>Enable JavaScript for the rendered result.</noscript>\n\n              <MemoizedCodeMirror\n                value={state.value}\n                extensions={[\n                  markdown({base: markdownLanguage, codeLanguages: languages}),\n                  EditorView.lineWrapping\n                ]}\n                onCreateEditor={editorView => {\n                  setView(editorView)\n                }}\n                onUpdate={onUpdate}\n                theme=\"dark\"\n              />\n            </>\n          )\n        }\n      ]}\n      componentsInfo={componentsInfo.map(([name, component]) => ({\n        label: component.displayName || name,\n        onClick: () => {\n          const props = Object.entries(\n            component.defaultProps || {}\n          ).reduce<any>((acc, [name, value]) => {\n            // skip if children\n            if (name === 'children') return acc\n\n            if (typeof value === 'function') {\n              const result = value()\n              acc[name] = processValue(result)\n            } else {\n              acc[name] = processValue(value)\n            }\n\n            return acc\n          }, {})\n\n          function processValue(value: any) {\n            if (typeof value === 'string') {\n              return `\"${value}\"`\n            } else if (typeof value === 'number') {\n              return value\n            } else if (typeof value === 'boolean') {\n              return value\n            } else if (typeof value === 'object') {\n              return `{${JSON.stringify(value)}}`\n            } else {\n              return value\n            }\n          }\n\n          // Generate a usage snippet with filled-in placeholder props.\n          const propsChain = Object.entries(props)\n            .map(([name, value]) => `${name}=${value}`)\n            .join(' ')\n\n          const snippet = `<${name}${propsChain && ' ' + propsChain}>${\n            component.defaultProps?.children || ''\n          }</${name}>`\n\n          // Insert the snippet into the editor at the current cursor position.\n          insertSnippet(snippet)\n        }\n      }))}\n      selectedTab={0}\n    />\n  )\n}\n\nexport default Editor\n"],"names":["ComponentInfo","_ref","items","_jsxs","Menu","_jsx","MenuButton","as","Button","leftIcon","AddIcon","size","variant","mx","jsx","MenuList","children","map","item","MenuItem","onClick","label","TabsTemplate","props","_useState","useState","selectedTab","setSelectedTab","Box","position","Tabs","index","onChange","pos","TabList","top","zIndex","tabs","tab","i","Tab","Spacer","componentsInfo","TabPanels","TabPanel","p","content","MemoizedCodeMirror","React","memo","ErrorBoundary","FallbackComponent","ErrorFallback","CodeMirror","_extends","Editor","_state$file$data","_useMdx","useMdx","gfm","frontmatter","math","directive","mdast","components","state","setConfig","_React$useState","view","setView","Object","entries","filter","_name$","name","toUpperCase","stats","useMemo","file","statistics","onUpdate","useCallback","v","docChanged","value","String","doc","useEffect","onUpdateValue","data","HStack","spacing","ViewIcon","fatal","Badge","colorScheme","warn","PreviewComponent","jsxs","EditIcon","_Fragment","extensions","markdown","base","markdownLanguage","codeLanguages","languages","EditorView","lineWrapping","onCreateEditor","editorView","theme","_ref2","component","displayName","_component$defaultPro","defaultProps","reduce","acc","_ref3","result","processValue","JSON","stringify","propsChain","_ref4","join","snippet","_view$state$selection","selection","ranges","mainIndex","from","to","changes","insert","tr","update","dispatch","length","cursor","main","head","lineAt","text","trim","insertSnippet"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@atsnek/jaen-fields-mdx/dist/Editor-554e9024.js b/node_modules/@atsnek/jaen-fields-mdx/dist/Editor-554e9024.js
deleted file mode 100644
index e82e224..0000000
--- a/node_modules/@atsnek/jaen-fields-mdx/dist/Editor-554e9024.js
+++ /dev/null
@@ -1,2 +0,0 @@
-import{E as t,_ as e,u as r,P as n}from"./index-d9e23d28.js";import{jsx as o,jsxs as i,Fragment as a}from"react/jsx-runtime";import{AddIcon as m,ViewIcon as s,EditIcon as c}from"@chakra-ui/icons";import{Box as l,Tabs as d,TabList as p,Tab as f,Spacer as u,TabPanels as h,TabPanel as v,Menu as g,MenuButton as b,Button as k,MenuList as x,MenuItem as y,HStack as j,Badge as C}from"@chakra-ui/react";import{markdown as w,markdownLanguage as S}from"@codemirror/lang-markdown";import{languages as E}from"@codemirror/language-data";import I,{EditorView as O}from"@uiw/react-codemirror";import P,{useState as U,useMemo as z,useCallback as J,useEffect as N}from"react";import{ErrorBoundary as T}from"react-error-boundary";import{statistics as V}from"vfile-statistics";import"@atsnek/jaen";import"@mdx-js/mdx";import"ahooks";import"mdast-util-frontmatter";import"mdast-util-gfm";import"mdast-util-math";import"mdast-util-mdx";import"rehype-slug-custom-id";import"rehype-mdx-code-props";import"rehype-mathjax/svg";import"mdast-util-directive";import"remark-directive";import"remark-frontmatter";import"remark-gfm";import"remark-math";import"vfile";import"vfile-message";import"mdast-util-to-markdown";import"deepmerge";import"react-syntax-highlighter";import"gatsby";var W=function(t){var e=t.items;return i(g,{children:[o(b,{as:k,leftIcon:o(m,{}),size:"sm",variant:"link",mx:"2",children:"Components"}),o(x,{children:e.map(function(t){return o(y,{onClick:t.onClick,children:t.label},t.label)})})]})},A=function(t){var e=U(t.selectedTab),r=e[1];return o(l,{position:"relative",children:i(d,{index:e[0],onChange:function(t){r(t)},pos:"relative",size:"sm",children:[i(p,{pos:"sticky",top:"0",zIndex:"1",children:[t.tabs.map(function(t,e){return o(f,{children:t.label},e)}),o(u,{}),o(W,{items:t.componentsInfo||[]})]}),o(h,{children:t.tabs.map(function(t,e){return o(v,{p:"0",children:t.content},e)})})]})})},F=P.memo(function(r){return o(T,{FallbackComponent:t,children:o(I,e({},r))})}),L=function(t){var m,d=r({gfm:!0,frontmatter:!0,math:!0,directive:!0,mdast:t.mdast},!1,t.components),p=d[0],f=d[1],u=P.useState(null),h=u[0],v=u[1],g=Object.entries(t.components||{}).filter(function(t){var e,r=t[0];return r[0]===(null==(e=r[0])?void 0:e.toUpperCase())}),b=z(function(){return p.file?V(p.file):{}},[p.file]),k=J(function(t){if(t.docChanged){var r=String(t.state.doc);f(e({},p,{value:r}))}},[f]);return N(function(){null==t.onUpdateValue||t.onUpdateValue(p.file.data.mdast)},[null==(m=p.file.data)?void 0:m.mdast]),o(A,{tabs:[{label:i(j,{spacing:2,children:[o(s,{}),o(l,{children:"Preview"}),b.fatal?o(C,{colorScheme:"red",children:"Error"}):b.warn?o(C,{colorScheme:"yellow",children:"Warning"}):null]}),content:o(n,{state:p,stats:b,components:t.components})},{label:i(j,{spacing:2,children:[o(c,{}),o(l,{children:"Editor"})]}),content:i(a,{children:[o("noscript",{children:"Enable JavaScript for the rendered result."}),o(F,{value:p.value,extensions:[w({base:S,codeLanguages:E}),O.lineWrapping],onCreateEditor:function(t){v(t)},onUpdate:k,theme:"dark"})]})}],componentsInfo:g.map(function(t){var e=t[0],r=t[1];return{label:r.displayName||e,onClick:function(){var t,n=Object.entries(r.defaultProps||{}).reduce(function(t,e){var r=e[0],n=e[1];if("children"===r)return t;if("function"==typeof n){var i=n();t[r]=o(i)}else t[r]=o(n);return t},{});function o(t){return"string"==typeof t?'"'+t+'"':"number"==typeof t||"boolean"==typeof t?t:"object"==typeof t?"{"+JSON.stringify(t)+"}":t}var i=Object.entries(n).map(function(t){return t[0]+"="+t[1]}).join(" ");!function(t){if(h){var e=h.state.selection.ranges[h.state.selection.mainIndex],r=e.from,n=e.to;if(r!==n){var o={from:r,to:n,insert:t},i=h.state.update({changes:{from:o.from,to:o.to,insert:o.insert}});h.dispatch(i)}else if(0===r&&0===n){var a={from:h.state.doc.length,to:h.state.doc.length,insert:"\n"+t+"\n"},m=h.state.update({changes:{from:a.from,to:a.to,insert:a.insert}});h.dispatch(m)}else{var s=h.state.selection.main.head,c={from:s,to:s,insert:t+(""===h.state.doc.lineAt(s).text.trim()?"\n":"")},l=h.state.update({changes:{from:c.from,to:c.to,insert:c.insert}});h.dispatch(l)}}}("<"+e+(i&&" "+i)+">"+((null==(t=r.defaultProps)?void 0:t.children)||"")+"</"+e+">")}}}),selectedTab:0})};export{L as Editor,L as default};
-//# sourceMappingURL=Editor-554e9024.js.map
diff --git a/node_modules/@atsnek/jaen-fields-mdx/dist/Editor-554e9024.js.map b/node_modules/@atsnek/jaen-fields-mdx/dist/Editor-554e9024.js.map
deleted file mode 100644
index 716759f..0000000
--- a/node_modules/@atsnek/jaen-fields-mdx/dist/Editor-554e9024.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"Editor-554e9024.js","sources":["../src/MdxField/components/TabsTemplate.tsx","../src/MdxField/components/Editor.tsx"],"sourcesContent":["import {AddIcon} from '@chakra-ui/icons'\nimport {\n  Box,\n  Button,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Spacer,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs\n} from '@chakra-ui/react'\nimport React, {useState} from 'react'\n\ninterface ComponentInfoProps {\n  items: Array<{\n    label: string\n    onClick: () => void\n  }>\n}\n\nexport const ComponentInfo: React.FC<ComponentInfoProps> = ({items}) => (\n  <Menu>\n    <MenuButton\n      as={Button}\n      leftIcon={<AddIcon />}\n      size=\"sm\"\n      variant=\"link\"\n      mx=\"2\">\n      Components\n    </MenuButton>\n\n    <MenuList>\n      {items.map(item => (\n        <MenuItem key={item.label} onClick={item.onClick}>\n          {item.label}\n        </MenuItem>\n      ))}\n    </MenuList>\n  </Menu>\n)\n\nexport interface TabsProps {\n  tabs: Array<{\n    label: React.ReactNode\n    content: React.ReactNode\n  }>\n  selectedTab: number\n  componentsInfo?: ComponentInfoProps['items']\n}\n\nconst TabsTemplate: React.FC<TabsProps> = props => {\n  const [selectedTab, setSelectedTab] = useState(props.selectedTab)\n\n  const handleTabChange = (index: number) => {\n    setSelectedTab(index)\n  }\n\n  return (\n    <Box position=\"relative\">\n      <Tabs\n        index={selectedTab}\n        onChange={handleTabChange}\n        pos=\"relative\"\n        size=\"sm\">\n        <TabList pos=\"sticky\" top=\"0\" zIndex=\"1\">\n          {props.tabs.map((tab, i) => (\n            <Tab key={i}>{tab.label}</Tab>\n          ))}\n          <Spacer />\n          <ComponentInfo items={props.componentsInfo || []} />\n        </TabList>\n\n        <TabPanels>\n          {props.tabs.map((tab, i) => (\n            <TabPanel key={i} p=\"0\">\n              {tab.content}\n            </TabPanel>\n          ))}\n        </TabPanels>\n      </Tabs>\n    </Box>\n  )\n}\n\nexport default TabsTemplate\n","import {EditIcon, ViewIcon} from '@chakra-ui/icons'\nimport {Badge, Box, HStack} from '@chakra-ui/react'\nimport {markdown, markdownLanguage} from '@codemirror/lang-markdown'\nimport {languages} from '@codemirror/language-data'\n\nimport CodeMirror, {\n  ReactCodeMirrorProps,\n  EditorView\n} from '@uiw/react-codemirror'\n\nimport React, {useCallback, useEffect, useMemo} from 'react'\nimport {ErrorBoundary} from 'react-error-boundary'\nimport {statistics, Statistics} from 'vfile-statistics'\n\nimport {ErrorFallback} from './ErrorFallback.js'\nimport {PreviewComponent} from './PreviewComponent.js'\nimport TabsTemplate from './TabsTemplate.js'\n\nimport {useMdx} from '../use-mdx.js'\nimport {BaseEditorProps} from './types.js'\n\nconst MemoizedCodeMirror = React.memo<ReactCodeMirrorProps>(props => {\n  return (\n    <ErrorBoundary FallbackComponent={ErrorFallback}>\n      <CodeMirror {...props} />\n    </ErrorBoundary>\n  )\n})\n\nexport interface EditorProps extends BaseEditorProps {}\n\nexport const Editor: React.FC<EditorProps> = props => {\n  const [state, setConfig] = useMdx(\n    {\n      gfm: true,\n      frontmatter: true,\n      math: true,\n      directive: true,\n      mdast: props.mdast\n    },\n    false,\n    props.components\n  ) as any\n\n  const [view, setView] = React.useState<EditorView | null>(null)\n\n  const componentsInfo = Object.entries(props.components || {}).filter(\n    ([name]) => {\n      return name[0] === name[0]?.toUpperCase()\n    }\n  )\n\n  const stats = useMemo(\n    () => (state.file ? statistics(state.file) : ({} as Statistics)),\n    [state.file]\n  )\n\n  const onUpdate = useCallback(\n    (v: {docChanged: any; state: {doc: any}}) => {\n      if (v.docChanged) {\n        const value = String(v.state.doc)\n\n        setConfig({...state, value})\n      }\n    },\n    [setConfig]\n  )\n\n  // const onUpdate = useCallback(\n  //   (v: {docChanged: any; state: {doc: any}}) => {\n  //     if (v.docChanged) {\n  //       console.log('docChanged 2', v)\n\n  //       const value = String(v.state.doc)\n\n  //       setConfig({...state, value})\n  //     }\n  //   },\n  //   [setConfig]\n  // )\n\n  const insertSnippet = (snippet: string) => {\n    if (!view) return\n\n    // Get the current selection\n    const {from, to} =\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      view.state.selection.ranges[view.state.selection.mainIndex]!\n\n    // Check if there is a selection\n    if (from !== to) {\n      // Replace the selected text with the snippet\n      const changes = {from, to, insert: snippet}\n      const tr = view.state.update({\n        changes: {from: changes.from, to: changes.to, insert: changes.insert}\n      })\n      view.dispatch(tr)\n    } else if (from === 0 && to === 0) {\n      // Insert the snippet at the end of the file\n      const changes = {\n        from: view.state.doc.length,\n        to: view.state.doc.length,\n        insert: `\\n${snippet}\\n`\n      }\n      const tr = view.state.update({\n        changes: {from: changes.from, to: changes.to, insert: changes.insert}\n      })\n      view.dispatch(tr)\n    } else {\n      // Get the cursor position\n      const cursor = view.state.selection.main.head\n\n      // Get the current line content\n      const lineContent = view.state.doc.lineAt(cursor).text\n\n      // Check if the line is empty\n      const isEmptyLine = lineContent.trim() === ''\n\n      // Insert the snippet with or without a newline depending on the line content\n      const changes = {\n        from: cursor,\n        to: cursor,\n        insert: snippet + (isEmptyLine ? '\\n' : '')\n      }\n      const tr = view.state.update({\n        changes: {from: changes.from, to: changes.to, insert: changes.insert}\n      })\n      view.dispatch(tr)\n    }\n  }\n\n  useEffect(() => {\n    props.onUpdateValue?.(state.file.data.mdast)\n  }, [state.file.data?.mdast])\n\n  return (\n    <TabsTemplate\n      tabs={[\n        {\n          label: (\n            <HStack spacing={2}>\n              <ViewIcon />\n              <Box>Preview</Box>\n              {stats.fatal ? (\n                <Badge colorScheme=\"red\">Error</Badge>\n              ) : stats.warn ? (\n                <Badge colorScheme=\"yellow\">Warning</Badge>\n              ) : null}\n            </HStack>\n          ),\n          content: (\n            <PreviewComponent\n              state={state}\n              stats={stats}\n              components={props.components}\n            />\n          )\n        },\n        {\n          label: (\n            <HStack spacing={2}>\n              <EditIcon />\n              <Box>Editor</Box>\n            </HStack>\n          ),\n          content: (\n            <>\n              <noscript>Enable JavaScript for the rendered result.</noscript>\n\n              <MemoizedCodeMirror\n                value={state.value}\n                extensions={[\n                  markdown({base: markdownLanguage, codeLanguages: languages}),\n                  EditorView.lineWrapping\n                ]}\n                onCreateEditor={editorView => {\n                  setView(editorView)\n                }}\n                onUpdate={onUpdate}\n                theme=\"dark\"\n              />\n            </>\n          )\n        }\n      ]}\n      componentsInfo={componentsInfo.map(([name, component]) => ({\n        label: component.displayName || name,\n        onClick: () => {\n          const props = Object.entries(\n            component.defaultProps || {}\n          ).reduce<any>((acc, [name, value]) => {\n            // skip if children\n            if (name === 'children') return acc\n\n            if (typeof value === 'function') {\n              const result = value()\n              acc[name] = processValue(result)\n            } else {\n              acc[name] = processValue(value)\n            }\n\n            return acc\n          }, {})\n\n          function processValue(value: any) {\n            if (typeof value === 'string') {\n              return `\"${value}\"`\n            } else if (typeof value === 'number') {\n              return value\n            } else if (typeof value === 'boolean') {\n              return value\n            } else if (typeof value === 'object') {\n              return `{${JSON.stringify(value)}}`\n            } else {\n              return value\n            }\n          }\n\n          // Generate a usage snippet with filled-in placeholder props.\n          const propsChain = Object.entries(props)\n            .map(([name, value]) => `${name}=${value}`)\n            .join(' ')\n\n          const snippet = `<${name}${propsChain && ' ' + propsChain}>${\n            component.defaultProps?.children || ''\n          }</${name}>`\n\n          // Insert the snippet into the editor at the current cursor position.\n          insertSnippet(snippet)\n        }\n      }))}\n      selectedTab={0}\n    />\n  )\n}\n\nexport default Editor\n"],"names":["ComponentInfo","_ref","items","_jsxs","Menu","_jsx","MenuButton","as","Button","leftIcon","AddIcon","size","variant","mx","MenuList","children","map","item","MenuItem","onClick","label","TabsTemplate","props","_useState","useState","selectedTab","setSelectedTab","Box","position","Tabs","index","onChange","pos","TabList","top","zIndex","tabs","tab","i","Tab","Spacer","componentsInfo","TabPanels","TabPanel","p","content","MemoizedCodeMirror","React","memo","ErrorBoundary","FallbackComponent","ErrorFallback","CodeMirror","_extends","Editor","_state$file$data","_useMdx","useMdx","gfm","frontmatter","math","directive","mdast","components","state","setConfig","_React$useState","view","setView","Object","entries","filter","_name$","name","toUpperCase","stats","useMemo","file","statistics","onUpdate","useCallback","v","docChanged","value","String","doc","useEffect","onUpdateValue","data","HStack","spacing","ViewIcon","fatal","Badge","colorScheme","warn","PreviewComponent","EditIcon","_Fragment","extensions","markdown","base","markdownLanguage","codeLanguages","languages","EditorView","lineWrapping","onCreateEditor","editorView","theme","_ref2","component","displayName","_component$defaultPro","defaultProps","reduce","acc","_ref3","result","processValue","JSON","stringify","propsChain","_ref4","join","snippet","_view$state$selection","selection","ranges","mainIndex","from","to","changes","insert","tr","update","dispatch","length","cursor","main","head","lineAt","text","trim","insertSnippet"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@atsnek/jaen-fields-mdx/dist/Editor-e30d9d26.js b/node_modules/@atsnek/jaen-fields-mdx/dist/Editor-e30d9d26.js
new file mode 100644
index 0000000..56e62a0
--- /dev/null
+++ b/node_modules/@atsnek/jaen-fields-mdx/dist/Editor-e30d9d26.js
@@ -0,0 +1,2 @@
+import{E as t,_ as e,u as r,P as n}from"./index-aa32301e.js";import{jsx as i,jsxs as o,Fragment as a}from"react/jsx-runtime";import{AddIcon as m,ViewIcon as s,EditIcon as c}from"@chakra-ui/icons";import{Box as l,Tabs as d,TabList as p,Tab as f,Spacer as u,TabPanels as h,TabPanel as v,Menu as g,MenuButton as b,Button as k,MenuList as x,MenuItem as y,HStack as j,Badge as C}from"@chakra-ui/react";import{markdown as w,markdownLanguage as S}from"@codemirror/lang-markdown";import{languages as E}from"@codemirror/language-data";import I,{EditorView as z}from"@uiw/react-codemirror";import O,{useState as P,useMemo as U,useCallback as T,useEffect as J}from"react";import{ErrorBoundary as N}from"react-error-boundary";import{statistics as V}from"vfile-statistics";import"@atsnek/jaen";import"@mdx-js/mdx";import"ahooks";import"mdast-util-frontmatter";import"mdast-util-gfm";import"mdast-util-math";import"mdast-util-mdx";import"rehype-slug-custom-id";import"rehype-mdx-code-props";import"rehype-mathjax/svg";import"mdast-util-directive";import"remark-directive";import"remark-frontmatter";import"remark-gfm";import"remark-math";import"vfile";import"vfile-message";import"mdast-util-to-markdown";import"deepmerge";import"hast-util-sanitize";import"react-syntax-highlighter";import"gatsby";var W=function(t){var e=t.items;return o(g,{children:[i(b,{as:k,leftIcon:i(m,{}),size:"sm",variant:"link",mx:"2",children:"Components"}),i(x,{children:e.map(function(t){return i(y,{onClick:t.onClick,children:t.label},t.label)})})]})},A=function(t){var e=P(t.selectedTab),r=e[1];return i(l,{position:"relative",children:o(d,{index:e[0],onChange:function(t){r(t)},pos:"relative",size:"sm",children:[o(p,{pos:"sticky",top:"0",zIndex:"1",children:[t.tabs.map(function(t,e){return i(f,{children:t.label},e)}),i(u,{}),i(W,{items:t.componentsInfo||[]})]}),i(h,{children:t.tabs.map(function(t,e){return i(v,{p:"0",children:t.content},e)})})]})})},F=O.memo(function(r){return i(N,{FallbackComponent:t,children:i(I,e({},r))})}),L=function(t){var m,d=P(t.mdast),p=r({gfm:!0,frontmatter:!0,math:!0,directive:!0,mdast:d[0]},!1,t.components),f=p[0],u=p[1],h=O.useState(null),v=h[0],g=h[1],b=Object.entries(t.components||{}).filter(function(t){var e,r=t[0];return r[0]===(null==(e=r[0])?void 0:e.toUpperCase())}),k=U(function(){return f.file?V(f.file):{}},[f.file]),x=T(function(t){if(t.docChanged){var r=String(t.state.doc);u(e({},f,{value:r}))}},[u]);return J(function(){null==t.onUpdateValue||t.onUpdateValue(f.file.data.mdast)},[null==(m=f.file.data)?void 0:m.mdast]),i(t.tabsTemplate||A,{tabs:[{label:o(j,{spacing:2,children:[i(s,{}),i(l,{children:"Preview"}),k.fatal?i(C,{colorScheme:"red",children:"Error"}):k.warn?i(C,{colorScheme:"yellow",children:"Warning"}):null]}),content:i(n,{state:f,stats:k,components:t.components})},{label:o(j,{spacing:2,children:[i(c,{}),i(l,{children:"Editor"})]}),content:o(a,{children:[i("noscript",{children:"Enable JavaScript for the rendered result."}),i(F,{value:f.value,extensions:[w({base:S,codeLanguages:E}),z.lineWrapping],onCreateEditor:function(t){g(t)},onUpdate:x,theme:"dark"})]})}],componentsInfo:b.map(function(t){var e=t[0],r=t[1];return{label:r.displayName||e,onClick:function(){var t,n=Object.entries(r.defaultProps||{}).reduce(function(t,e){var r=e[0],n=e[1];if("children"===r)return t;if("function"==typeof n){var o=n();t[r]=i(o)}else t[r]=i(n);return t},{});function i(t){return"string"==typeof t?'"'+t+'"':"number"==typeof t||"boolean"==typeof t?t:"object"==typeof t?"{"+JSON.stringify(t)+"}":t}var o=Object.entries(n).map(function(t){return t[0]+"="+t[1]}).join(" ");!function(t){if(v){var e=v.state.selection.ranges[v.state.selection.mainIndex],r=e.from,n=e.to;if(r!==n){var i={from:r,to:n,insert:t},o=v.state.update({changes:{from:i.from,to:i.to,insert:i.insert}});v.dispatch(o)}else if(0===r&&0===n){var a={from:v.state.doc.length,to:v.state.doc.length,insert:"\n"+t+"\n"},m=v.state.update({changes:{from:a.from,to:a.to,insert:a.insert}});v.dispatch(m)}else{var s=v.state.selection.main.head,c={from:s,to:s,insert:t+(""===v.state.doc.lineAt(s).text.trim()?"\n":"")},l=v.state.update({changes:{from:c.from,to:c.to,insert:c.insert}});v.dispatch(l)}}}("<"+e+(o&&" "+o)+">"+((null==(t=r.defaultProps)?void 0:t.children)||"")+"</"+e+">")}}}),selectedTab:0})};export{L as Editor,L as default};
+//# sourceMappingURL=Editor-e30d9d26.js.map
diff --git a/node_modules/@atsnek/jaen-fields-mdx/dist/Editor-e30d9d26.js.map b/node_modules/@atsnek/jaen-fields-mdx/dist/Editor-e30d9d26.js.map
new file mode 100644
index 0000000..ecc987a
--- /dev/null
+++ b/node_modules/@atsnek/jaen-fields-mdx/dist/Editor-e30d9d26.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"Editor-e30d9d26.js","sources":["../src/MdxField/components/TabsTemplate.tsx","../src/MdxField/components/Editor.tsx"],"sourcesContent":["import {AddIcon} from '@chakra-ui/icons'\nimport {\n  Box,\n  Button,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Spacer,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs\n} from '@chakra-ui/react'\nimport React, {useState} from 'react'\n\ninterface ComponentInfoProps {\n  items: Array<{\n    label: string\n    onClick: () => void\n  }>\n}\n\nexport const ComponentInfo: React.FC<ComponentInfoProps> = ({items}) => (\n  <Menu>\n    <MenuButton\n      as={Button}\n      leftIcon={<AddIcon />}\n      size=\"sm\"\n      variant=\"link\"\n      mx=\"2\">\n      Components\n    </MenuButton>\n\n    <MenuList>\n      {items.map(item => (\n        <MenuItem key={item.label} onClick={item.onClick}>\n          {item.label}\n        </MenuItem>\n      ))}\n    </MenuList>\n  </Menu>\n)\n\nexport interface TabsProps {\n  tabs: Array<{\n    label: React.ReactNode\n    content: React.ReactNode\n  }>\n  selectedTab: number\n  componentsInfo?: ComponentInfoProps['items']\n}\n\nconst TabsTemplate: React.FC<TabsProps> = props => {\n  const [selectedTab, setSelectedTab] = useState(props.selectedTab)\n\n  const handleTabChange = (index: number) => {\n    setSelectedTab(index)\n  }\n\n  return (\n    <Box position=\"relative\">\n      <Tabs\n        index={selectedTab}\n        onChange={handleTabChange}\n        pos=\"relative\"\n        size=\"sm\">\n        <TabList pos=\"sticky\" top=\"0\" zIndex=\"1\">\n          {props.tabs.map((tab, i) => (\n            <Tab key={i}>{tab.label}</Tab>\n          ))}\n          <Spacer />\n          <ComponentInfo items={props.componentsInfo || []} />\n        </TabList>\n\n        <TabPanels>\n          {props.tabs.map((tab, i) => (\n            <TabPanel key={i} p=\"0\">\n              {tab.content}\n            </TabPanel>\n          ))}\n        </TabPanels>\n      </Tabs>\n    </Box>\n  )\n}\n\nexport default TabsTemplate\n","import {EditIcon, ViewIcon} from '@chakra-ui/icons'\nimport {Badge, Box, HStack} from '@chakra-ui/react'\nimport {markdown, markdownLanguage} from '@codemirror/lang-markdown'\nimport {languages} from '@codemirror/language-data'\n\nimport CodeMirror, {\n  ReactCodeMirrorProps,\n  EditorView\n} from '@uiw/react-codemirror'\n\nimport React, {useCallback, useEffect, useMemo, useState} from 'react'\nimport {ErrorBoundary} from 'react-error-boundary'\nimport {statistics, Statistics} from 'vfile-statistics'\n\nimport {ErrorFallback} from './ErrorFallback.js'\nimport {PreviewComponent} from './PreviewComponent.js'\nimport TabsTemplate from './TabsTemplate.js'\n\nimport {useMdx} from '../use-mdx.js'\nimport {BaseEditorProps} from './types.js'\n\nconst MemoizedCodeMirror = React.memo<ReactCodeMirrorProps>(props => {\n  return (\n    <ErrorBoundary FallbackComponent={ErrorFallback}>\n      <CodeMirror {...props} />\n    </ErrorBoundary>\n  )\n})\n\nexport interface EditorProps extends BaseEditorProps {}\n\nexport const Editor: React.FC<EditorProps> = props => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [defaultValue, _] = useState(props.mdast)\n\n  const [state, setConfig] = useMdx(\n    {\n      gfm: true,\n      frontmatter: true,\n      math: true,\n      directive: true,\n      mdast: defaultValue\n    },\n    false,\n    props.components\n  ) as any\n\n  const [view, setView] = React.useState<EditorView | null>(null)\n\n  const componentsInfo = Object.entries(props.components || {}).filter(\n    ([name]) => {\n      return name[0] === name[0]?.toUpperCase()\n    }\n  )\n\n  const stats = useMemo(\n    () => (state.file ? statistics(state.file) : ({} as Statistics)),\n    [state.file]\n  )\n\n  const onUpdate = useCallback(\n    (v: {docChanged: any; state: {doc: any}}) => {\n      if (v.docChanged) {\n        const value = String(v.state.doc)\n\n        setConfig({...state, value})\n      }\n    },\n    [setConfig]\n  )\n\n  // const onUpdate = useCallback(\n  //   (v: {docChanged: any; state: {doc: any}}) => {\n  //     if (v.docChanged) {\n  //       console.log('docChanged 2', v)\n\n  //       const value = String(v.state.doc)\n\n  //       setConfig({...state, value})\n  //     }\n  //   },\n  //   [setConfig]\n  // )\n\n  const insertSnippet = (snippet: string) => {\n    if (!view) return\n\n    // Get the current selection\n    const {from, to} =\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      view.state.selection.ranges[view.state.selection.mainIndex]!\n\n    // Check if there is a selection\n    if (from !== to) {\n      // Replace the selected text with the snippet\n      const changes = {from, to, insert: snippet}\n      const tr = view.state.update({\n        changes: {from: changes.from, to: changes.to, insert: changes.insert}\n      })\n      view.dispatch(tr)\n    } else if (from === 0 && to === 0) {\n      // Insert the snippet at the end of the file\n      const changes = {\n        from: view.state.doc.length,\n        to: view.state.doc.length,\n        insert: `\\n${snippet}\\n`\n      }\n      const tr = view.state.update({\n        changes: {from: changes.from, to: changes.to, insert: changes.insert}\n      })\n      view.dispatch(tr)\n    } else {\n      // Get the cursor position\n      const cursor = view.state.selection.main.head\n\n      // Get the current line content\n      const lineContent = view.state.doc.lineAt(cursor).text\n\n      // Check if the line is empty\n      const isEmptyLine = lineContent.trim() === ''\n\n      // Insert the snippet with or without a newline depending on the line content\n      const changes = {\n        from: cursor,\n        to: cursor,\n        insert: snippet + (isEmptyLine ? '\\n' : '')\n      }\n      const tr = view.state.update({\n        changes: {from: changes.from, to: changes.to, insert: changes.insert}\n      })\n      view.dispatch(tr)\n    }\n  }\n\n  useEffect(() => {\n    props.onUpdateValue?.(state.file.data.mdast)\n  }, [state.file.data?.mdast])\n\n  const TabsTemplateComponent = props.tabsTemplate || TabsTemplate\n\n  return (\n    <TabsTemplateComponent\n      tabs={[\n        {\n          label: (\n            <HStack spacing={2}>\n              <ViewIcon />\n              <Box>Preview</Box>\n              {stats.fatal ? (\n                <Badge colorScheme=\"red\">Error</Badge>\n              ) : stats.warn ? (\n                <Badge colorScheme=\"yellow\">Warning</Badge>\n              ) : null}\n            </HStack>\n          ),\n          content: (\n            <PreviewComponent\n              state={state}\n              stats={stats}\n              components={props.components}\n            />\n          )\n        },\n        {\n          label: (\n            <HStack spacing={2}>\n              <EditIcon />\n              <Box>Editor</Box>\n            </HStack>\n          ),\n          content: (\n            <>\n              <noscript>Enable JavaScript for the rendered result.</noscript>\n\n              <MemoizedCodeMirror\n                value={state.value}\n                extensions={[\n                  markdown({base: markdownLanguage, codeLanguages: languages}),\n                  EditorView.lineWrapping\n                ]}\n                onCreateEditor={editorView => {\n                  setView(editorView)\n                }}\n                onUpdate={onUpdate}\n                theme=\"dark\"\n              />\n            </>\n          )\n        }\n      ]}\n      componentsInfo={componentsInfo.map(([name, component]) => ({\n        label: component.displayName || name,\n        onClick: () => {\n          const props = Object.entries(\n            component.defaultProps || {}\n          ).reduce<any>((acc, [name, value]) => {\n            // skip if children\n            if (name === 'children') return acc\n\n            if (typeof value === 'function') {\n              const result = value()\n              acc[name] = processValue(result)\n            } else {\n              acc[name] = processValue(value)\n            }\n\n            return acc\n          }, {})\n\n          function processValue(value: any) {\n            if (typeof value === 'string') {\n              return `\"${value}\"`\n            } else if (typeof value === 'number') {\n              return value\n            } else if (typeof value === 'boolean') {\n              return value\n            } else if (typeof value === 'object') {\n              return `{${JSON.stringify(value)}}`\n            } else {\n              return value\n            }\n          }\n\n          // Generate a usage snippet with filled-in placeholder props.\n          const propsChain = Object.entries(props)\n            .map(([name, value]) => `${name}=${value}`)\n            .join(' ')\n\n          const snippet = `<${name}${propsChain && ' ' + propsChain}>${\n            component.defaultProps?.children || ''\n          }</${name}>`\n\n          // Insert the snippet into the editor at the current cursor position.\n          insertSnippet(snippet)\n        }\n      }))}\n      selectedTab={0}\n    />\n  )\n}\n\nexport default Editor\n"],"names":["ComponentInfo","_ref","items","_jsxs","Menu","_jsx","MenuButton","as","Button","leftIcon","AddIcon","size","variant","mx","MenuList","children","map","item","MenuItem","onClick","label","TabsTemplate","props","_useState","useState","selectedTab","setSelectedTab","Box","position","Tabs","index","onChange","pos","TabList","top","zIndex","tabs","tab","i","Tab","Spacer","componentsInfo","TabPanels","TabPanel","p","content","MemoizedCodeMirror","React","memo","ErrorBoundary","FallbackComponent","ErrorFallback","CodeMirror","_extends","Editor","_state$file$data","mdast","_useMdx","useMdx","gfm","frontmatter","math","directive","components","state","setConfig","_React$useState","view","setView","Object","entries","filter","_name$","name","toUpperCase","stats","useMemo","file","statistics","onUpdate","useCallback","v","docChanged","value","String","doc","useEffect","onUpdateValue","data","tabsTemplate","HStack","spacing","ViewIcon","fatal","Badge","colorScheme","warn","PreviewComponent","EditIcon","_Fragment","extensions","markdown","base","markdownLanguage","codeLanguages","languages","EditorView","lineWrapping","onCreateEditor","editorView","theme","_ref2","component","displayName","_component$defaultPro","defaultProps","reduce","acc","_ref3","result","processValue","JSON","stringify","propsChain","_ref4","join","snippet","_view$state$selection","selection","ranges","mainIndex","from","to","changes","insert","tr","update","dispatch","length","cursor","main","head","lineAt","text","trim","insertSnippet"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@atsnek/jaen-fields-mdx/dist/Editor-e88c44f3.js b/node_modules/@atsnek/jaen-fields-mdx/dist/Editor-e88c44f3.js
new file mode 100644
index 0000000..f3408ef
--- /dev/null
+++ b/node_modules/@atsnek/jaen-fields-mdx/dist/Editor-e88c44f3.js
@@ -0,0 +1,2 @@
+var e=require("./index-0b68d159.js"),r=require("react/jsx-runtime"),t=require("@chakra-ui/icons"),n=require("@chakra-ui/react"),i=require("@codemirror/lang-markdown"),a=require("@codemirror/language-data"),s=require("@uiw/react-codemirror"),o=require("react"),u=require("react-error-boundary"),c=require("vfile-statistics");function l(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}require("@atsnek/jaen"),require("@mdx-js/mdx"),require("ahooks"),require("mdast-util-frontmatter"),require("mdast-util-gfm"),require("mdast-util-math"),require("mdast-util-mdx"),require("rehype-slug-custom-id"),require("rehype-mdx-code-props"),require("rehype-mathjax/svg"),require("mdast-util-directive"),require("remark-directive"),require("remark-frontmatter"),require("remark-gfm"),require("remark-math"),require("vfile"),require("vfile-message"),require("mdast-util-to-markdown"),require("deepmerge"),require("hast-util-sanitize"),require("react-syntax-highlighter"),require("gatsby");var d=/*#__PURE__*/l(s),m=/*#__PURE__*/l(o),f=function(e){var i=e.items;return r.jsxs(n.Menu,{children:[r.jsx(n.MenuButton,{as:n.Button,leftIcon:r.jsx(t.AddIcon,{}),size:"sm",variant:"link",mx:"2",children:"Components"}),r.jsx(n.MenuList,{children:i.map(function(e){return r.jsx(n.MenuItem,{onClick:e.onClick,children:e.label},e.label)})})]})},p=function(e){var t=o.useState(e.selectedTab),i=t[1];return r.jsx(n.Box,{position:"relative",children:r.jsxs(n.Tabs,{index:t[0],onChange:function(e){i(e)},pos:"relative",size:"sm",children:[r.jsxs(n.TabList,{pos:"sticky",top:"0",zIndex:"1",children:[e.tabs.map(function(e,t){return r.jsx(n.Tab,{children:e.label},t)}),r.jsx(n.Spacer,{}),r.jsx(f,{items:e.componentsInfo||[]})]}),r.jsx(n.TabPanels,{children:e.tabs.map(function(e,t){return r.jsx(n.TabPanel,{p:"0",children:e.content},t)})})]})})},h=m.default.memo(function(t){return r.jsx(u.ErrorBoundary,{FallbackComponent:e.ErrorFallback,children:r.jsx(d.default,e._extends({},t))})}),x=function(u){var l,d=o.useState(u.mdast),f=e.useMdx({gfm:!0,frontmatter:!0,math:!0,directive:!0,mdast:d[0]},!1,u.components),x=f[0],j=f[1],g=m.default.useState(null),v=g[0],b=g[1],q=Object.entries(u.components||{}).filter(function(e){var r,t=e[0];return t[0]===(null==(r=t[0])?void 0:r.toUpperCase())}),k=o.useMemo(function(){return x.file?c.statistics(x.file):{}},[x.file]),y=o.useCallback(function(r){if(r.docChanged){var t=String(r.state.doc);j(e._extends({},x,{value:t}))}},[j]);return o.useEffect(function(){null==u.onUpdateValue||u.onUpdateValue(x.file.data.mdast)},[null==(l=x.file.data)?void 0:l.mdast]),r.jsx(u.tabsTemplate||p,{tabs:[{label:r.jsxs(n.HStack,{spacing:2,children:[r.jsx(t.ViewIcon,{}),r.jsx(n.Box,{children:"Preview"}),k.fatal?r.jsx(n.Badge,{colorScheme:"red",children:"Error"}):k.warn?r.jsx(n.Badge,{colorScheme:"yellow",children:"Warning"}):null]}),content:r.jsx(e.PreviewComponent,{state:x,stats:k,components:u.components})},{label:r.jsxs(n.HStack,{spacing:2,children:[r.jsx(t.EditIcon,{}),r.jsx(n.Box,{children:"Editor"})]}),content:r.jsxs(r.Fragment,{children:[r.jsx("noscript",{children:"Enable JavaScript for the rendered result."}),r.jsx(h,{value:x.value,extensions:[i.markdown({base:i.markdownLanguage,codeLanguages:a.languages}),s.EditorView.lineWrapping],onCreateEditor:function(e){b(e)},onUpdate:y,theme:"dark"})]})}],componentsInfo:q.map(function(e){var r=e[0],t=e[1];return{label:t.displayName||r,onClick:function(){var e,n=Object.entries(t.defaultProps||{}).reduce(function(e,r){var t=r[0],n=r[1];if("children"===t)return e;if("function"==typeof n){var a=n();e[t]=i(a)}else e[t]=i(n);return e},{});function i(e){return"string"==typeof e?'"'+e+'"':"number"==typeof e||"boolean"==typeof e?e:"object"==typeof e?"{"+JSON.stringify(e)+"}":e}var a=Object.entries(n).map(function(e){return e[0]+"="+e[1]}).join(" ");!function(e){if(v){var r=v.state.selection.ranges[v.state.selection.mainIndex],t=r.from,n=r.to;if(t!==n){var i={from:t,to:n,insert:e},a=v.state.update({changes:{from:i.from,to:i.to,insert:i.insert}});v.dispatch(a)}else if(0===t&&0===n){var s={from:v.state.doc.length,to:v.state.doc.length,insert:"\n"+e+"\n"},o=v.state.update({changes:{from:s.from,to:s.to,insert:s.insert}});v.dispatch(o)}else{var u=v.state.selection.main.head,c={from:u,to:u,insert:e+(""===v.state.doc.lineAt(u).text.trim()?"\n":"")},l=v.state.update({changes:{from:c.from,to:c.to,insert:c.insert}});v.dispatch(l)}}}("<"+r+(a&&" "+a)+">"+((null==(e=t.defaultProps)?void 0:e.children)||"")+"</"+r+">")}}}),selectedTab:0})};exports.Editor=x,exports.default=x;
+//# sourceMappingURL=Editor-e88c44f3.js.map
diff --git a/node_modules/@atsnek/jaen-fields-mdx/dist/Editor-e88c44f3.js.map b/node_modules/@atsnek/jaen-fields-mdx/dist/Editor-e88c44f3.js.map
new file mode 100644
index 0000000..7d8f060
--- /dev/null
+++ b/node_modules/@atsnek/jaen-fields-mdx/dist/Editor-e88c44f3.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"Editor-e88c44f3.js","sources":["../src/MdxField/components/TabsTemplate.tsx","../src/MdxField/components/Editor.tsx"],"sourcesContent":["import {AddIcon} from '@chakra-ui/icons'\nimport {\n  Box,\n  Button,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Spacer,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs\n} from '@chakra-ui/react'\nimport React, {useState} from 'react'\n\ninterface ComponentInfoProps {\n  items: Array<{\n    label: string\n    onClick: () => void\n  }>\n}\n\nexport const ComponentInfo: React.FC<ComponentInfoProps> = ({items}) => (\n  <Menu>\n    <MenuButton\n      as={Button}\n      leftIcon={<AddIcon />}\n      size=\"sm\"\n      variant=\"link\"\n      mx=\"2\">\n      Components\n    </MenuButton>\n\n    <MenuList>\n      {items.map(item => (\n        <MenuItem key={item.label} onClick={item.onClick}>\n          {item.label}\n        </MenuItem>\n      ))}\n    </MenuList>\n  </Menu>\n)\n\nexport interface TabsProps {\n  tabs: Array<{\n    label: React.ReactNode\n    content: React.ReactNode\n  }>\n  selectedTab: number\n  componentsInfo?: ComponentInfoProps['items']\n}\n\nconst TabsTemplate: React.FC<TabsProps> = props => {\n  const [selectedTab, setSelectedTab] = useState(props.selectedTab)\n\n  const handleTabChange = (index: number) => {\n    setSelectedTab(index)\n  }\n\n  return (\n    <Box position=\"relative\">\n      <Tabs\n        index={selectedTab}\n        onChange={handleTabChange}\n        pos=\"relative\"\n        size=\"sm\">\n        <TabList pos=\"sticky\" top=\"0\" zIndex=\"1\">\n          {props.tabs.map((tab, i) => (\n            <Tab key={i}>{tab.label}</Tab>\n          ))}\n          <Spacer />\n          <ComponentInfo items={props.componentsInfo || []} />\n        </TabList>\n\n        <TabPanels>\n          {props.tabs.map((tab, i) => (\n            <TabPanel key={i} p=\"0\">\n              {tab.content}\n            </TabPanel>\n          ))}\n        </TabPanels>\n      </Tabs>\n    </Box>\n  )\n}\n\nexport default TabsTemplate\n","import {EditIcon, ViewIcon} from '@chakra-ui/icons'\nimport {Badge, Box, HStack} from '@chakra-ui/react'\nimport {markdown, markdownLanguage} from '@codemirror/lang-markdown'\nimport {languages} from '@codemirror/language-data'\n\nimport CodeMirror, {\n  ReactCodeMirrorProps,\n  EditorView\n} from '@uiw/react-codemirror'\n\nimport React, {useCallback, useEffect, useMemo, useState} from 'react'\nimport {ErrorBoundary} from 'react-error-boundary'\nimport {statistics, Statistics} from 'vfile-statistics'\n\nimport {ErrorFallback} from './ErrorFallback.js'\nimport {PreviewComponent} from './PreviewComponent.js'\nimport TabsTemplate from './TabsTemplate.js'\n\nimport {useMdx} from '../use-mdx.js'\nimport {BaseEditorProps} from './types.js'\n\nconst MemoizedCodeMirror = React.memo<ReactCodeMirrorProps>(props => {\n  return (\n    <ErrorBoundary FallbackComponent={ErrorFallback}>\n      <CodeMirror {...props} />\n    </ErrorBoundary>\n  )\n})\n\nexport interface EditorProps extends BaseEditorProps {}\n\nexport const Editor: React.FC<EditorProps> = props => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [defaultValue, _] = useState(props.mdast)\n\n  const [state, setConfig] = useMdx(\n    {\n      gfm: true,\n      frontmatter: true,\n      math: true,\n      directive: true,\n      mdast: defaultValue\n    },\n    false,\n    props.components\n  ) as any\n\n  const [view, setView] = React.useState<EditorView | null>(null)\n\n  const componentsInfo = Object.entries(props.components || {}).filter(\n    ([name]) => {\n      return name[0] === name[0]?.toUpperCase()\n    }\n  )\n\n  const stats = useMemo(\n    () => (state.file ? statistics(state.file) : ({} as Statistics)),\n    [state.file]\n  )\n\n  const onUpdate = useCallback(\n    (v: {docChanged: any; state: {doc: any}}) => {\n      if (v.docChanged) {\n        const value = String(v.state.doc)\n\n        setConfig({...state, value})\n      }\n    },\n    [setConfig]\n  )\n\n  // const onUpdate = useCallback(\n  //   (v: {docChanged: any; state: {doc: any}}) => {\n  //     if (v.docChanged) {\n  //       console.log('docChanged 2', v)\n\n  //       const value = String(v.state.doc)\n\n  //       setConfig({...state, value})\n  //     }\n  //   },\n  //   [setConfig]\n  // )\n\n  const insertSnippet = (snippet: string) => {\n    if (!view) return\n\n    // Get the current selection\n    const {from, to} =\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      view.state.selection.ranges[view.state.selection.mainIndex]!\n\n    // Check if there is a selection\n    if (from !== to) {\n      // Replace the selected text with the snippet\n      const changes = {from, to, insert: snippet}\n      const tr = view.state.update({\n        changes: {from: changes.from, to: changes.to, insert: changes.insert}\n      })\n      view.dispatch(tr)\n    } else if (from === 0 && to === 0) {\n      // Insert the snippet at the end of the file\n      const changes = {\n        from: view.state.doc.length,\n        to: view.state.doc.length,\n        insert: `\\n${snippet}\\n`\n      }\n      const tr = view.state.update({\n        changes: {from: changes.from, to: changes.to, insert: changes.insert}\n      })\n      view.dispatch(tr)\n    } else {\n      // Get the cursor position\n      const cursor = view.state.selection.main.head\n\n      // Get the current line content\n      const lineContent = view.state.doc.lineAt(cursor).text\n\n      // Check if the line is empty\n      const isEmptyLine = lineContent.trim() === ''\n\n      // Insert the snippet with or without a newline depending on the line content\n      const changes = {\n        from: cursor,\n        to: cursor,\n        insert: snippet + (isEmptyLine ? '\\n' : '')\n      }\n      const tr = view.state.update({\n        changes: {from: changes.from, to: changes.to, insert: changes.insert}\n      })\n      view.dispatch(tr)\n    }\n  }\n\n  useEffect(() => {\n    props.onUpdateValue?.(state.file.data.mdast)\n  }, [state.file.data?.mdast])\n\n  const TabsTemplateComponent = props.tabsTemplate || TabsTemplate\n\n  return (\n    <TabsTemplateComponent\n      tabs={[\n        {\n          label: (\n            <HStack spacing={2}>\n              <ViewIcon />\n              <Box>Preview</Box>\n              {stats.fatal ? (\n                <Badge colorScheme=\"red\">Error</Badge>\n              ) : stats.warn ? (\n                <Badge colorScheme=\"yellow\">Warning</Badge>\n              ) : null}\n            </HStack>\n          ),\n          content: (\n            <PreviewComponent\n              state={state}\n              stats={stats}\n              components={props.components}\n            />\n          )\n        },\n        {\n          label: (\n            <HStack spacing={2}>\n              <EditIcon />\n              <Box>Editor</Box>\n            </HStack>\n          ),\n          content: (\n            <>\n              <noscript>Enable JavaScript for the rendered result.</noscript>\n\n              <MemoizedCodeMirror\n                value={state.value}\n                extensions={[\n                  markdown({base: markdownLanguage, codeLanguages: languages}),\n                  EditorView.lineWrapping\n                ]}\n                onCreateEditor={editorView => {\n                  setView(editorView)\n                }}\n                onUpdate={onUpdate}\n                theme=\"dark\"\n              />\n            </>\n          )\n        }\n      ]}\n      componentsInfo={componentsInfo.map(([name, component]) => ({\n        label: component.displayName || name,\n        onClick: () => {\n          const props = Object.entries(\n            component.defaultProps || {}\n          ).reduce<any>((acc, [name, value]) => {\n            // skip if children\n            if (name === 'children') return acc\n\n            if (typeof value === 'function') {\n              const result = value()\n              acc[name] = processValue(result)\n            } else {\n              acc[name] = processValue(value)\n            }\n\n            return acc\n          }, {})\n\n          function processValue(value: any) {\n            if (typeof value === 'string') {\n              return `\"${value}\"`\n            } else if (typeof value === 'number') {\n              return value\n            } else if (typeof value === 'boolean') {\n              return value\n            } else if (typeof value === 'object') {\n              return `{${JSON.stringify(value)}}`\n            } else {\n              return value\n            }\n          }\n\n          // Generate a usage snippet with filled-in placeholder props.\n          const propsChain = Object.entries(props)\n            .map(([name, value]) => `${name}=${value}`)\n            .join(' ')\n\n          const snippet = `<${name}${propsChain && ' ' + propsChain}>${\n            component.defaultProps?.children || ''\n          }</${name}>`\n\n          // Insert the snippet into the editor at the current cursor position.\n          insertSnippet(snippet)\n        }\n      }))}\n      selectedTab={0}\n    />\n  )\n}\n\nexport default Editor\n"],"names":["ComponentInfo","_ref","items","_jsxs","Menu","_jsx","MenuButton","as","Button","leftIcon","AddIcon","size","variant","mx","jsx","MenuList","children","map","item","MenuItem","onClick","label","TabsTemplate","props","_useState","useState","selectedTab","setSelectedTab","Box","position","Tabs","index","onChange","pos","TabList","top","zIndex","tabs","tab","i","Tab","Spacer","componentsInfo","TabPanels","TabPanel","p","content","MemoizedCodeMirror","React","memo","ErrorBoundary","FallbackComponent","ErrorFallback","CodeMirror","_extends","Editor","_state$file$data","mdast","_useMdx","useMdx","gfm","frontmatter","math","directive","components","state","setConfig","_React$useState","view","setView","Object","entries","filter","_name$","name","toUpperCase","stats","useMemo","file","statistics","onUpdate","useCallback","v","docChanged","value","String","doc","useEffect","onUpdateValue","data","tabsTemplate","HStack","spacing","ViewIcon","fatal","Badge","colorScheme","warn","PreviewComponent","EditIcon","jsxs","_Fragment","Fragment","extensions","markdown","base","markdownLanguage","codeLanguages","languages","EditorView","lineWrapping","onCreateEditor","editorView","theme","_ref2","component","displayName","_component$defaultPro","defaultProps","reduce","acc","_ref3","result","processValue","JSON","stringify","propsChain","_ref4","join","snippet","_view$state$selection","selection","ranges","mainIndex","from","to","changes","insert","tr","update","dispatch","length","cursor","main","head","lineAt","text","trim","insertSnippet"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@atsnek/jaen-fields-mdx/dist/MdxField/MdxField.d.ts b/node_modules/@atsnek/jaen-fields-mdx/dist/MdxField/MdxField.d.ts
index 9bd4487..7fd4380 100644
--- a/node_modules/@atsnek/jaen-fields-mdx/dist/MdxField/MdxField.d.ts
+++ b/node_modules/@atsnek/jaen-fields-mdx/dist/MdxField/MdxField.d.ts
@@ -1,7 +1,9 @@
 import React from 'react';
 import { BaseEditorProps, MdastRoot } from './components/types.js';
+import { TabsProps } from './components/TabsTemplate.js';
 export interface MdxFieldProps {
     components: BaseEditorProps['components'];
+    tabsTemplate?: React.FC<TabsProps>;
 }
 export declare const MdxField: React.NamedExoticComponent<MdxFieldProps & import("@atsnek/jaen/dist/connectors/connect-field.js").JaenFieldProps>;
 export declare const UncontrolledMdxField: React.FC<{
@@ -9,4 +11,5 @@ export declare const UncontrolledMdxField: React.FC<{
     onUpdateValue: (value: MdastRoot) => void;
     value?: MdastRoot;
     isEditing?: boolean;
+    tabsTemplate?: React.FC<TabsProps>;
 }>;
diff --git a/node_modules/@atsnek/jaen-fields-mdx/dist/MdxField/components/types.d.ts b/node_modules/@atsnek/jaen-fields-mdx/dist/MdxField/components/types.d.ts
index cb57a29..9baa0f7 100644
--- a/node_modules/@atsnek/jaen-fields-mdx/dist/MdxField/components/types.d.ts
+++ b/node_modules/@atsnek/jaen-fields-mdx/dist/MdxField/components/types.d.ts
@@ -1,9 +1,11 @@
 /// <reference types="react" />
 import { Root as MdastRoot } from 'mdast';
+import { TabsProps } from './TabsTemplate';
 export interface BaseEditorProps {
-    mdast?: MdastRoot;
-    components?: Record<string, React.ComponentType<any>>;
-    onUpdateValue?: (value: MdastRoot) => void;
+    components: Record<string, React.ComponentType<any>>;
+    onUpdateValue: (value: any) => void;
+    mdast?: any;
+    tabsTemplate?: React.FC<TabsProps>;
     mode?: 'preview' | 'build' | 'editAndPreview' | 'editAndBuild';
 }
 export { MdastRoot };
diff --git a/node_modules/@atsnek/jaen-fields-mdx/dist/index-0b68d159.js b/node_modules/@atsnek/jaen-fields-mdx/dist/index-0b68d159.js
new file mode 100644
index 0000000..3c7d455
--- /dev/null
+++ b/node_modules/@atsnek/jaen-fields-mdx/dist/index-0b68d159.js
@@ -0,0 +1,2 @@
+var e=require("react/jsx-runtime"),t=require("@atsnek/jaen"),r=require("react"),n=require("vfile-statistics"),o=require("@mdx-js/mdx"),a=require("ahooks"),i=require("mdast-util-frontmatter"),s=require("mdast-util-gfm"),u=require("mdast-util-math"),c=require("mdast-util-mdx"),l=require("rehype-slug-custom-id"),f=require("rehype-mdx-code-props"),d=require("rehype-mathjax/svg"),m=require("mdast-util-directive"),p=require("remark-directive"),h=require("remark-frontmatter"),v=require("remark-gfm"),g=require("remark-math"),y=require("vfile"),x=require("vfile-message"),b=require("mdast-util-to-markdown"),j=require("deepmerge"),w=require("hast-util-sanitize"),k=require("react-error-boundary"),O=require("react-syntax-highlighter"),q=require("@chakra-ui/react"),S=require("gatsby");function A(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function E(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach(function(r){if("default"!==r){var n=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,n.get?n:{enumerable:!0,get:function(){return e[r]}})}}),t.default=e,t}var M=/*#__PURE__*/E(e),P=/*#__PURE__*/A(r),N=/*#__PURE__*/A(l),V=/*#__PURE__*/A(f),T=/*#__PURE__*/A(d),F=/*#__PURE__*/A(p),I=/*#__PURE__*/A(h),B=/*#__PURE__*/A(v),J=/*#__PURE__*/A(g),D=/*#__PURE__*/A(j),C=/*#__PURE__*/A(O);function U(){return U=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},U.apply(this,arguments)}function L(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t.indexOf(r=a[n])>=0||(o[r]=e[r]);return o}const _=function(e){if(null==e)return X;if("function"==typeof e)return z(e);if("object"==typeof e)return Array.isArray(e)?function(e){const t=[];let r=-1;for(;++r<e.length;)t[r]=_(e[r]);return z(function(...e){let r=-1;for(;++r<t.length;)if(t[r].apply(this,e))return!0;return!1})}(e):function(e){const t=e;return z(function(r){const n=r;let o;for(o in e)if(n[o]!==t[o])return!1;return!0})}(e);if("string"==typeof e)return t=e,z(function(e){return e&&e.type===t});var t;throw new Error("Expected function, string, or object as test")};function z(e){return function(t,r,n){return Boolean(function(e){return null!==e&&"object"==typeof e&&"type"in e}(t)&&e.call(this,t,"number"==typeof r?r:void 0,n||void 0))}}function X(){return!0}const R=[],W=!1;var H=function(){return function(t){!function(e,t,r,n){let o,a,i;a="element",i=r,o=void 0,function(e,t,r,n){let o;o="element";const a=_("element");!function e(t,n,o){const i=t&&"object"==typeof t?t:{};if("string"==typeof i.type){const e="string"==typeof i.tagName?i.tagName:"string"==typeof i.name?i.name:void 0;Object.defineProperty(s,"name",{value:"node ("+t.type+(e?"<"+e+">":"")+")"})}return s;function s(){let i,s,u,c=R;if(a(t,n,o[o.length-1]||void 0)&&(c=function(e){return Array.isArray(e)?e:"number"==typeof e?[!0,e]:null==e?R:[e]}(r(t,o)),c[0]===W))return c;if("children"in t&&t.children){const r=t;if(r.children&&"skip"!==c[0])for(s=0,u=o.concat(r);s>-1&&s<r.children.length;){if(i=e(r.children[s],s,u)(),i[0]===W)return i;s="number"==typeof i[1]?i[1]:s+1}}return c}}(e,void 0,[])()}(e,0,function(e,t){const r=t[t.length-1],n=r?r.children.indexOf(e):void 0;return i(e,n,r)})}(t,0,e)};function e(e,t,r){"img"===e.tagName&&r&&"p"===r.tagName&&(r.tagName="div")}};const Y="object"==typeof self?self:globalThis,G=e=>((e,t)=>{const r=(t,r)=>(e.set(r,t),t),n=o=>{if(e.has(o))return e.get(o);const[a,i]=t[o];switch(a){case 0:case-1:return r(i,o);case 1:{const e=r([],o);for(const t of i)e.push(n(t));return e}case 2:{const e=r({},o);for(const[t,r]of i)e[n(t)]=n(r);return e}case 3:return r(new Date(i),o);case 4:{const{source:e,flags:t}=i;return r(new RegExp(e,t),o)}case 5:{const e=r(new Map,o);for(const[t,r]of i)e.set(n(t),n(r));return e}case 6:{const e=r(new Set,o);for(const t of i)e.add(n(t));return e}case 7:{const{name:e,message:t}=i;return r(new Y[e](t),o)}case 8:return r(BigInt(i),o);case"BigInt":return r(Object(BigInt(i)),o)}return r(new Y[a](i),o)};return n})(new Map,e)(0),K="",{toString:Q}={},{keys:Z}=Object,$=e=>{const t=typeof e;if("object"!==t||!e)return[0,t];const r=Q.call(e).slice(8,-1);switch(r){case"Array":return[1,K];case"Object":return[2,K];case"Date":return[3,K];case"RegExp":return[4,K];case"Map":return[5,K];case"Set":return[6,K]}return r.includes("Array")?[1,r]:r.includes("Error")?[7,r]:[2,r]},ee=([e,t])=>0===e&&("function"===t||"symbol"===t),te=(e,{json:t,lossy:r}={})=>{const n=[];return((e,t,r,n)=>{const o=(e,t)=>{const o=n.push(e)-1;return r.set(t,o),o},a=n=>{if(r.has(n))return r.get(n);let[i,s]=$(n);switch(i){case 0:{let t=n;switch(s){case"bigint":i=8,t=n.toString();break;case"function":case"symbol":if(e)throw new TypeError("unable to serialize "+s);t=null;break;case"undefined":return o([-1],n)}return o([i,t],n)}case 1:{if(s)return o([s,[...n]],n);const e=[],t=o([i,e],n);for(const t of n)e.push(a(t));return t}case 2:{if(s)switch(s){case"BigInt":return o([s,n.toString()],n);case"Boolean":case"Number":case"String":return o([s,n.valueOf()],n)}if(t&&"toJSON"in n)return a(n.toJSON());const r=[],u=o([i,r],n);for(const t of Z(n))!e&&ee($(n[t]))||r.push([a(t),a(n[t])]);return u}case 3:return o([i,n.toISOString()],n);case 4:{const{source:e,flags:t}=n;return o([i,{source:e,flags:t}],n)}case 5:{const t=[],r=o([i,t],n);for(const[r,o]of n)(e||!ee($(r))&&!ee($(o)))&&t.push([a(r),a(o)]);return r}case 6:{const t=[],r=o([i,t],n);for(const r of n)!e&&ee($(r))||t.push(a(r));return r}}const{message:u}=n;return o([i,{name:s,message:u}],n)};return a})(!(t||r),!!t,new Map,n)(e),n};var re="function"==typeof structuredClone?(e,t)=>t&&("json"in t||"lossy"in t)?G(te(e,t)):structuredClone(e):(e,t)=>G(te(e,t));const ne=ae("end"),oe=ae("start");function ae(e){return function(t){const r=t&&t.position&&t.position[e]||{};if("number"==typeof r.line&&r.line>0&&"number"==typeof r.column&&r.column>0)return{line:r.line,column:r.column,offset:"number"==typeof r.offset&&r.offset>-1?r.offset:void 0}}}var ie={}.hasOwnProperty;function se(e,t){if(t&&"object"==typeof t){var r=t;switch("string"==typeof r.type?r.type:""){case"comment":return function(e,t){if(e.schema.allowComments){var r="string"==typeof t.value?t.value:"",n=r.indexOf("--\x3e"),o={type:"comment",value:n<0?r:r.slice(0,n)};return de(o,t),o}}(e,r);case"doctype":return function(e,t){if(e.schema.allowDoctypes){var r={type:"doctype"};return de(r,t),r}}(e,r);case"element":return function(e,t){var r="string"==typeof t.tagName?t.tagName:"";e.stack.push(r);var n=ue(e,t.children),o=ce(e,t.properties);e.stack.pop();var a=!1;if(r&&"*"!==r&&(!e.schema.tagNames||e.schema.tagNames.includes(r))&&(a=!0,e.schema.ancestors&&ie.call(e.schema.ancestors,r))){var i=e.schema.ancestors[r],s=-1;for(a=!1;++s<i.length;)e.stack.includes(i[s])&&(a=!0)}if(!a)return e.schema.strip&&!e.schema.strip.includes(r)?n:void 0;var u={type:"element",tagName:r,properties:o,children:n};return de(u,t),u}(e,r);case"root":return function(e,t){var r={type:"root",children:ue(e,t.children)};return de(r,t),r}(e,r);case"text":return function(e,t){var r={type:"text",value:"string"==typeof t.value?t.value:""};return de(r,t),r}(0,r);case"mdxJsxTextElement":case"mdxJsxFlowElement":return function(e,t){var r="string"==typeof t.name?t.name:"";e.stack.push(r);var n=ue(e,t.children),o=ce(e,t.attributes);e.stack.pop();var a=!1;if(r&&"*"!==r&&(!e.schema.tagNames||e.schema.tagNames.includes(r))&&(a=!0,e.schema.ancestors&&ie.call(e.schema.ancestors,r))){var i=e.schema.ancestors[r],s=-1;for(a=!1;++s<i.length;)e.stack.includes(i[s])&&(a=!0)}if(!a)return e.schema.strip&&!e.schema.strip.includes(r)?n:void 0;var u={type:"element",tagName:r,properties:o,children:n};return de(u,t),u}(e,r)}}}function ue(e,t){var r=[];if(Array.isArray(t))for(var n=t,o=-1;++o<n.length;){var a=se(e,n[o]);a&&(Array.isArray(a)?r.push.apply(r,a):r.push(a))}return r}function ce(e,t){var r,n=e.stack[e.stack.length-1],o=e.schema.attributes,a=e.schema.required,i=o&&ie.call(o,n)?o[n]:void 0,s=o&&ie.call(o,"*")?o["*"]:void 0,u=t&&"object"==typeof t?Array.isArray(t)?t.reduce(function(e,t){var r;return"mdxJsxAttribute"===t.type&&(e[t.name]="mdxJsxAttributeValueExpression"===(null==(r=t.value)?void 0:r.type)?t.value:null===t.value||t.value),e},{}):t:{},c={};for(r in u)if(ie.call(u,r)){var l=u[r],f=le(e,me(i,r),r,l);null==f&&(f=le(e,me(s,r),r,l)),null!=f&&(c[r]=f)}if(a&&ie.call(a,n)){var d=a[n];for(r in d)ie.call(d,r)&&!ie.call(c,r)&&(c[r]=d[r])}return c}function le(e,t,r,n){return t?Array.isArray(n)?function(e,t,r,n){for(var o=-1,a=[];++o<n.length;){var i=fe(e,t,r,n[o]);"number"!=typeof i&&"string"!=typeof i||a.push(i)}return a}(e,t,r,n):fe(e,t,r,n):void 0}function fe(e,t,r,n){if("mdxJsxAttributeValueExpression"===(null==n?void 0:n.type))return fe(e,t,r,"undefined"===n.value?void 0:"true"===n.value||("false"===n.value?void 0:n.value));if(("boolean"==typeof n||"number"==typeof n||"string"==typeof n)&&function(e,t,r){var n=e.schema.protocols&&ie.call(e.schema.protocols,t)?e.schema.protocols[t]:void 0;if(!n||0===n.length)return!0;var o=String(r),a=o.indexOf(":"),i=o.indexOf("?"),s=o.indexOf("#"),u=o.indexOf("/");if(a<0||u>-1&&a>u||i>-1&&a>i||s>-1&&a>s)return!0;for(var c=-1;++c<n.length;){var l=n[c];if(a===l.length&&o.slice(0,l.length)===l)return!0}return!1}(e,r,n)){if("object"==typeof t&&t.length>1){for(var o=!1,a=0;++a<t.length;){var i=t[a];if(i&&"object"==typeof i&&"flags"in i){if(i.test(String(n))){o=!0;break}}else if(i===n){o=!0;break}}if(!o)return}return e.schema.clobber&&e.schema.clobberPrefix&&e.schema.clobber.includes(r)?e.schema.clobberPrefix+n:n}}function de(e,t){var r=function(e){const t=oe(e),r=ne(e);if(t&&r)return{start:t,end:r}}(t);t.data&&(e.data=re(t.data)),r&&(e.position=r)}function me(e,t){var r,n=-1;if(e)for(;++n<e.length;){var o=e[n],a="string"==typeof o?o:o[0];if(a===t)return o;if("data*"===a&&(r=o),"*"===a)return o}if(t.length>4&&"data"===t.slice(0,4).toLowerCase())return r}function pe(e){return new y.VFile({basename:"example.mdx",value:e})}function he(e,t){var r;try{e.result=o.evaluateSync(e,U({},M,{development:!1,useDynamicImport:!0,remarkPlugins:[B.default,I.default,J.default,F.default,function(){return function(t){e.data.mdast=t}}],rehypePlugins:[N.default,H,(r=Object.keys(t),void 0===r&&(r=[]),function(){var e=r.reduce(function(e,t){return e[t]=["*"],e},{}),t=D.default(w.defaultSchema,{tagNames:r,attributes:U({"*":["className"],code:[["className",/^language-./,"math-inline","math-display"]]},e),clobberPrefix:""});return function(e){var r,n,o,a;return r=e,o={type:"root",children:[]},(a=se({schema:(n=t)?U({},w.defaultSchema,n):w.defaultSchema,stack:[]},r))&&(Array.isArray(a)?1===a.length?o=a[0]:o.children=a:o=a),o}}),[V.default,{tagName:"code"}],T.default],recmaPlugins:[]})).default}catch(t){var n=t instanceof x.VFileMessage?t:new x.VFileMessage(t);e.messages.includes(n)||e.messages.push(n),n.fatal=!0}}var ve=function(e,t){void 0===t&&(t={});var r=e.mdast?b.toMarkdown(e.mdast,{extensions:[c.mdxToMarkdown(),s.gfmToMarkdown(),u.mathToMarkdown(),m.directiveToMarkdown,i.frontmatterToMarkdown()]}):"",n=pe(r);return he(n,t),U({},e,{value:r,file:n})};function ge(e,t,n){void 0===t&&(t=!1),void 0===n&&(n={});var o=r.useState(function(){return ve(e,n)}),i=o[0],s=o[1];return r.useEffect(function(){t&&s(ve(e,n))},[e,t]),[i,a.useDebounceFn(function(e){try{var t=pe(e.value);return he(t,n),s(U({},e,{file:t})),Promise.resolve()}catch(e){return Promise.reject(e)}},{leading:!0,trailing:!0,wait:200}).run]}var ye=function(t){var r=t.error,n=t.resetErrorBoundary;return e.jsxs(q.Alert,{status:"error",children:[e.jsx(q.AlertIcon,{}),e.jsx(q.AlertTitle,{children:"Something went wrong"}),e.jsxs(q.AlertDescription,{children:[e.jsx("pre",{children:r.message}),e.jsx(q.Button,{onClick:n,children:"Try again"})]})]})},xe=function(t){var r,n=t.stats;return e.jsx(e.Fragment,{children:n.fatal||n.warn?e.jsx("pre",{children:e.jsx("code",{children:(r=t.state.file,JSON.stringify(r.messages,null,2))})}):null})},be=["className"],je=function(t){var r=new x.VFileMessage(t.error);return r.fatal=!0,e.jsx("pre",{children:e.jsx("code",{children:String(r)})})},we=function(t){var r=t.state,n=t.components;try{if("function"!=typeof r.file.result)throw console.error(r),new Error("Preview could not be generated.");return r.file.result({components:U({code:function(t){var r=t.className,n=L(t,be),o=/language-(\w+)/.exec(r||"");return o?e.jsx(C.default,U({language:o[1],PreTag:"div"},n)):e.jsx("code",U({className:r},n))}},n,{wrapper:function(t){var r=null==n?void 0:n.wrapper,o=e.jsx(q.Stack,{w:"full",sx:{"mjx-container":{display:"inline-block !important",verticalAlign:"text-bottom !important"}},children:t.children});return r?e.jsx(r,{children:o}):o}})})}catch(e){throw e}},ke=P.default.memo(function(t){var n,o,a=t.state,i=t.stats,s=t.components,u=r.useState(function(){return we({state:a,components:s})}),c=u[0],l=u[1],f=r.useState(null),d=f[0],m=f[1];return r.useEffect(function(){!function(){try{var e=function(e,t){try{var r=Promise.resolve(we({state:a,components:s})).then(function(e){l(e),m(null)})}catch(e){return t(e)}return r&&r.then?r.then(void 0,t):r}(0,function(e){m(e)});return Promise.resolve(e&&e.then?e.then(function(){}):void 0)}catch(e){return Promise.reject(e)}}()},[null==(n=a.file)?void 0:n.value,s]),e.jsxs(k.ErrorBoundary,{FallbackComponent:ye,children:[e.jsx("noscript",{children:"Enable JavaScript for the rendered result."}),(null==(o=a.file)?void 0:o.result)&&e.jsx(e.Fragment,{children:c}),d&&e.jsx(je,{error:d}),e.jsx(xe,{state:a,stats:i})]})}),Oe=P.default.memo(function(t){var o=t.components,a=t.mdast,i=ge(r.useMemo(function(){return{gfm:!0,frontmatter:!0,math:!0,directive:!0,mdast:a}},[a]),!0,o)[0],s=r.useMemo(function(){return i.file?n.statistics(i.file):{}},[i.file]);return e.jsx(ke,{state:i,stats:s,components:o})}),qe=["name","defaultValue","alt"],Se=["to","children"],Ae=function(r){var n=r.name,o=r.defaultValue,a=r.alt,i=L(r,qe);return e.jsx(q.Box,U({},i,{children:e.jsx(t.Field.Image,{name:n,defaultValue:o,alt:a})}))};Ae.defaultProps={name:function(){return"image-"+(Math.random()+1).toString(36).substring(7)},alt:"Placeholder Image Alt",defaultValue:"https://via.placeholder.com/150"};var Ee={position:"relative",color:"brand.600",textDecoration:"none",w:"fit-content",_hover:{color:"brand.600",_before:{transform:"scaleX(1)"}},_before:{content:'""',position:"absolute",display:"block",width:"100%",height:"2px",bottom:-.5,left:0,backgroundColor:"brand.600",transform:"scaleX(0)",transformOrigin:"top left",transition:"transform 0.3s ease"}},Me=function(t){var r=t.to,n=t.children,o=L(t,Se),a=void 0!==o.isExternal?o.isExternal:r.startsWith("http://")||r.startsWith("https://");return e.jsx(q.Link,U(a?{href:r,isExternal:!0}:{as:S.Link,to:r},Ee,{children:n}))};Me.defaultProps={to:"/",children:"My Link"};var Pe={type:"root",children:[{type:"heading",depth:1,children:[{type:"text",value:"Hello, world!",position:{start:{line:1,column:3,offset:2},end:{line:1,column:16,offset:15}}}],position:{start:{line:1,column:1,offset:0},end:{line:1,column:16,offset:15}}},{type:"paragraph",children:[{type:"text",value:"// This is a ",position:{start:{line:3,column:1,offset:17},end:{line:3,column:14,offset:30}}},{type:"strong",children:[{type:"text",value:"jaen",position:{start:{line:3,column:16,offset:32},end:{line:3,column:20,offset:36}}}],position:{start:{line:3,column:14,offset:30},end:{line:3,column:22,offset:38}}},{type:"text",value:" MDX field.",position:{start:{line:3,column:22,offset:38},end:{line:3,column:33,offset:49}}}],position:{start:{line:3,column:1,offset:17},end:{line:3,column:33,offset:49}}},{type:"paragraph",children:[{type:"text",value:"// ## Usage",position:{start:{line:5,column:1,offset:51},end:{line:5,column:12,offset:62}}}],position:{start:{line:5,column:1,offset:51},end:{line:5,column:12,offset:62}}},{type:"paragraph",children:[{type:"text",value:"// You can use this field to write markdown content.\n//",position:{start:{line:7,column:1,offset:64},end:{line:8,column:3,offset:119}}}],position:{start:{line:7,column:1,offset:64},end:{line:8,column:4,offset:120}}}],position:{start:{line:1,column:1,offset:0},end:{line:15,column:8,offset:228}}},Ne={Image:Ae,Link:Me,a:function(t){return e.jsx(Me,{to:t.href,children:t.children})},img:function(t){var r=t.src,n=t.alt;return e.jsx(Ae,{name:r+"-"+n,defaultValue:r,alt:n})}},Ve=t.connectField(function(t){var n=t.jaenField,o=t.components,a=t.tabsTemplate,i=P.default.useState(n.staticValue||Pe),s=i[0],u=i[1];r.useEffect(function(){u(n.value||n.staticValue||Pe)},[n.value]);var c=r.useMemo(function(){return U({},Ne,o)},[Ne,JSON.stringify(o)]);return n.isEditing?e.jsx(Te,{components:c,onUpdateValue:n.onUpdateValue,rawValue:s,tabsTemplate:a}):e.jsx(Oe,{components:c,mdast:s})},{fieldType:"IMA:MdxField"}),Te=function(t){var r=t.components,n=t.onUpdateValue,o=t.rawValue,a=t.tabsTemplate,i=P.default.lazy(function(){try{return Promise.resolve(Promise.resolve().then(function(){return require("./Editor-e88c44f3.js")}))}catch(e){return Promise.reject(e)}}),s=P.default.useMemo(function(){return i},[]);return e.jsx(P.default.Suspense,{fallback:e.jsx("div",{children:"Loading..."}),children:e.jsx(s,{components:r,onUpdateValue:n,mode:"editAndPreview",mdast:o,tabsTemplate:a})})};exports.ErrorFallback=ye,exports.MdxField=Ve,exports.PreviewComponent=ke,exports.UncontrolledMdxField=function(n){var o=n.components,a=n.onUpdateValue,i=n.value,s=n.isEditing,u=n.tabsTemplate,c=r.useMemo(function(){return U({},Ne,o)},[Ne,o]);return s?e.jsx(t.EditingProvider,{isEditing:s,children:e.jsx(Te,{components:c,onUpdateValue:a,rawValue:i,tabsTemplate:u})}):e.jsx(Oe,{components:c,mdast:i})},exports._extends=U,exports.useMdx=ge;
+//# sourceMappingURL=index-0b68d159.js.map
diff --git a/node_modules/@atsnek/jaen-fields-mdx/dist/index-0b68d159.js.map b/node_modules/@atsnek/jaen-fields-mdx/dist/index-0b68d159.js.map
new file mode 100644
index 0000000..383e1f6
--- /dev/null
+++ b/node_modules/@atsnek/jaen-fields-mdx/dist/index-0b68d159.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"index-0b68d159.js","sources":["../../../node_modules/unist-util-is/lib/index.js","../../../node_modules/unist-util-visit-parents/lib/index.js","../src/MdxField/rehype-unwrap-images.tsx","../../../node_modules/unist-util-visit/lib/index.js","../../../node_modules/@ungap/structured-clone/esm/types.js","../../../node_modules/@ungap/structured-clone/esm/deserialize.js","../../../node_modules/@ungap/structured-clone/esm/serialize.js","../../../node_modules/@ungap/structured-clone/esm/index.js","../../../node_modules/unist-util-position/lib/index.js","../src/hast-util-sanitize-mdx/sanitize.ts","../src/MdxField/use-mdx.tsx","../src/rehype-sanitize-mdx/index.ts","../src/MdxField/components/ErrorFallback.tsx","../src/MdxField/components/StatsReporterError.tsx","../src/MdxField/components/PreviewComponent.tsx","../src/MdxField/components/Preview.tsx","../src/MdxField/default-components.tsx","../src/MdxField/default-data.ts","../src/MdxField/MdxField.tsx"],"sourcesContent":["/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","import {Element} from 'hast'\nimport {Plugin} from 'unified'\nimport {visit} from 'unist-util-visit'\n\nexport const rehypeUnwrapImages: Plugin<[]> = () => {\n  return tree => {\n    visit(tree as any, 'element', visitor)\n  }\n\n  function visitor(node: Element, _: number, parent: Element | undefined) {\n    if (node.tagName === 'img' && parent && parent.tagName === 'p') {\n      parent.tagName = 'div'\n    }\n  }\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","// @ts-nocheck\n\n/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n */\n\n/**\n * @typedef {[string, ...Array<Exclude<Properties[keyof Properties], Array<any>> | RegExp>] | string} PropertyDefinition\n *   Definition for a property.\n *\n * @typedef Schema\n *   Schema that defines what nodes and properties are allowed.\n *\n *   The default schema is `defaultSchema`, which follows how GitHub cleans.\n *   If any top-level key is missing in the given schema, the corresponding\n *   value of the default schema is used.\n *\n *   To extend the standard schema with a few changes, clone `defaultSchema`\n *   like so:\n *\n *   ```js\n *   import deepmerge from 'deepmerge'\n *   import {h} from 'hastscript'\n *   import {defaultSchema, sanitize} from 'hast-util-sanitize'\n *\n *   // This allows `className` on all elements.\n *   const schema = deepmerge(defaultSchema, {attributes: {'*': ['className']}})\n *\n *   const tree = sanitize(h('div', {className: ['foo']}), schema)\n *\n *   // `tree` still has `className`.\n *   console.log(tree)\n *   // {\n *   //   type: 'element',\n *   //   tagName: 'div',\n *   //   properties: {className: ['foo']},\n *   //   children: []\n *   // }\n *   ```\n * @property {boolean | null | undefined} [allowComments=false]\n *   Whether to allow comment nodes (default: `false`).\n *\n *   For example:\n *\n *   ```js\n *   allowComments: true\n *   ```\n * @property {boolean | null | undefined} [allowDoctypes=false]\n *   Whether to allow doctype nodes (default: `false`).\n *\n *   For example:\n *\n *   ```js\n *   allowDoctypes: true\n *   ```\n * @property {Record<string, Array<string>> | null | undefined} [ancestors]\n *   Map of tag names to a list of tag names which are required ancestors\n *   (default: `defaultSchema.ancestors`).\n *\n *   Elements with these tag names will be ignored if they occur outside of one\n *   of their allowed parents.\n *\n *   For example:\n *\n *   ```js\n *   ancestors: {\n *     tbody: ['table'],\n *     // …\n *     tr: ['table']\n *   }\n *   ```\n * @property {Record<string, Array<PropertyDefinition>> | null | undefined} [attributes]\n *   Map of tag names to allowed property names (default:\n *   `defaultSchema.attributes`).\n *\n *   The special key `'*'` as a tag name defines property names allowed on all\n *   elements.\n *\n *   The special value `'data*'` as a property name can be used to allow all\n *   `data` properties.\n *\n *   For example:\n *\n *   ```js\n *   attributes: {\n *     'ariaDescribedBy', 'ariaLabel', 'ariaLabelledBy', …, 'href'\n *     // …\n *     '*': [\n *       'abbr',\n *       'accept',\n *       'acceptCharset',\n *       // …\n *       'vAlign',\n *       'value',\n *       'width'\n *     ]\n *   }\n *   ```\n *\n *   Instead of a single string in the array, which allows any property value\n *   for the field, you can use an array to allow several values.\n *   For example, `input: ['type']` allows `type` set to any value on `input`s.\n *   But `input: [['type', 'checkbox', 'radio']]` allows `type` when set to\n *   `'checkbox'` or `'radio'`.\n *\n *   You can use regexes, so for example `span: [['className', /^hljs-/]]`\n *   allows any class that starts with `hljs-` on `span`s.\n *\n *   When comma- or space-separated values are used (such as `className`), each\n *   value in is checked individually.\n *   For example, to allow certain classes on `span`s for syntax highlighting,\n *   use `span: [['className', 'number', 'operator', 'token']]`.\n *   This will allow `'number'`, `'operator'`, and `'token'` classes, but drop\n *   others.\n * @property {Array<string> | null | undefined} [clobber]\n *   List of property names that clobber (default: `defaultSchema.clobber`).\n *\n *   For example:\n *\n *   ```js\n *   clobber: ['ariaDescribedBy', 'ariaLabelledBy', 'id', 'name']\n *   ```\n * @property {string | null | undefined} [clobberPrefix]\n *   Prefix to use before clobbering properties (default:\n *   `defaultSchema.clobberPrefix`).\n *\n *   For example:\n *\n *   ```js\n *   clobberPrefix: 'user-content-'\n *   ```\n * @property {Record<string, Array<string> | null | undefined> | null | undefined} [protocols]\n *   Map of *property names* to allowed protocols (default:\n *   `defaultSchema.protocols`).\n *\n *   This defines URLs that are always allowed to have local URLs (relative to\n *   the current website, such as `this`, `#this`, `/this`, or `?this`), and\n *   only allowed to have remote URLs (such as `https://example.com`) if they\n *   use a known protocol.\n *\n *   For example:\n *\n *   ```js\n *   protocols: {\n *     cite: ['http', 'https'],\n *     // …\n *     src: ['http', 'https']\n *   }\n *   ```\n * @property {Record<string, Record<string, Properties[keyof Properties]>> | null | undefined} [required]\n *   Map of tag names to required property names with a default value\n *   (default: `defaultSchema.required`).\n *\n *   This defines properties that must be set.\n *   If a field does not exist (after the element was made safe), these will be\n *   added with the given value.\n *\n *   For example:\n *\n *   ```js\n *   required: {\n *     input: {disabled: true, type: 'checkbox'}\n *   }\n *   ```\n *\n *   > 👉 **Note**: properties are first checked based on `schema.attributes`,\n *   > then on `schema.required`.\n *   > That means properties could be removed by `attributes` and then added\n *   > again with `required`.\n * @property {Array<string> | null | undefined} [strip]\n *   List of tag names to strip from the tree (default: `defaultSchema.strip`).\n *\n *   By default, unsafe elements (those not in `schema.tagNames`) are replaced\n *   by what they contain.\n *   This option can drop their contents.\n *\n *   For example:\n *\n *   ```js\n *   strip: ['script']\n *   ```\n * @property {Array<string> | null | undefined} [tagNames]\n *   List of allowed tag names (default: `defaultSchema.tagNames`).\n *\n *   For example:\n *\n *   ```js\n *   tagNames: [\n *     'a',\n *     'b',\n *     // …\n *     'ul',\n *     'var'\n *   ]\n *   ```\n *\n * @typedef State\n *   Info passed around.\n * @property {Readonly<Schema>} schema\n *   Schema.\n * @property {Array<string>} stack\n *   Tag names of ancestors.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {position} from 'unist-util-position'\nimport {defaultSchema} from 'hast-util-sanitize'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Sanitize a tree.\n *\n * @param {Readonly<Nodes>} node\n *   Unsafe tree.\n * @param {Readonly<Schema> | null | undefined} [options]\n *   Configuration (default: `defaultSchema`).\n * @returns {Nodes}\n *   New, safe tree.\n */\nexport function sanitize(node, options) {\n  /** @type {Nodes} */\n  let ctx = {type: 'root', children: []}\n\n  /** @type {State} */\n  const state = {\n    schema: options ? {...defaultSchema, ...options} : defaultSchema,\n    stack: []\n  }\n  const replace = transform(state, node)\n\n  if (replace) {\n    if (Array.isArray(replace)) {\n      if (replace.length === 1) {\n        ctx = replace[0]\n      } else {\n        ctx.children = replace\n      }\n    } else {\n      ctx = replace\n    }\n  }\n\n  return ctx\n}\n\n/**\n * Sanitize `node`.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<unknown>} node\n *   Unsafe node.\n * @returns {Array<ElementContent> | Nodes | undefined}\n *   Safe result.\n */\nfunction transform(state, node) {\n  if (node && typeof node === 'object') {\n    const unsafe = /** @type {Record<string, Readonly<unknown>>} */ node\n\n    const type = typeof unsafe.type === 'string' ? unsafe.type : ''\n\n    switch (type) {\n      case 'comment': {\n        return comment(state, unsafe)\n      }\n\n      case 'doctype': {\n        return doctype(state, unsafe)\n      }\n\n      case 'element': {\n        return element(state, unsafe)\n      }\n\n      case 'root': {\n        return root(state, unsafe)\n      }\n\n      case 'text': {\n        return text(state, unsafe)\n      }\n\n      case 'mdxJsxTextElement':\n      case 'mdxJsxFlowElement': {\n        return mdxJsxFlowElement(state, unsafe)\n      }\n\n      default:\n    }\n  }\n}\n\n/**\n * Make a safe comment.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe comment-like value.\n * @returns {Comment | undefined}\n *   Safe comment (if with `allowComments`).\n */\nfunction comment(state, unsafe) {\n  if (state.schema.allowComments) {\n    // See <https://html.spec.whatwg.org/multipage/parsing.html#serialising-html-fragments>\n    const result = typeof unsafe.value === 'string' ? unsafe.value : ''\n    const index = result.indexOf('-->')\n    const value = index < 0 ? result : result.slice(0, index)\n\n    /** @type {Comment} */\n    const node = {type: 'comment', value}\n\n    patch(node, unsafe)\n\n    return node\n  }\n}\n\n/**\n * Make a safe doctype.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe doctype-like value.\n * @returns {Doctype | undefined}\n *   Safe doctype (if with `allowDoctypes`).\n */\nfunction doctype(state, unsafe) {\n  if (state.schema.allowDoctypes) {\n    /** @type {Doctype} */\n    const node = {type: 'doctype'}\n\n    patch(node, unsafe)\n\n    return node\n  }\n}\n\n/**\n * Make a safe element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe element-like value.\n * @returns {Array<ElementContent> | Element | undefined}\n *   Safe element.\n */\nfunction element(state, unsafe) {\n  const name = typeof unsafe.tagName === 'string' ? unsafe.tagName : ''\n\n  state.stack.push(name)\n\n  const content = /** @type {Array<ElementContent>} */ children(\n    state,\n    unsafe.children\n  )\n\n  const props = properties(state, unsafe.properties)\n\n  state.stack.pop()\n\n  let safeElement = false\n\n  if (\n    name &&\n    name !== '*' &&\n    (!state.schema.tagNames || state.schema.tagNames.includes(name))\n  ) {\n    safeElement = true\n\n    // Some nodes can break out of their context if they don’t have a certain\n    // ancestor.\n    if (state.schema.ancestors && own.call(state.schema.ancestors, name)) {\n      const ancestors = state.schema.ancestors[name]\n      let index = -1\n\n      safeElement = false\n\n      while (++index < ancestors.length) {\n        if (state.stack.includes(ancestors[index])) {\n          safeElement = true\n        }\n      }\n    }\n  }\n\n  if (!safeElement) {\n    return state.schema.strip && !state.schema.strip.includes(name)\n      ? content\n      : undefined\n  }\n\n  /** @type {Element} */\n  const node = {\n    type: 'element',\n    tagName: name,\n    properties: props,\n    children: content\n  }\n\n  patch(node, unsafe)\n\n  return node\n}\n\n/**\n * Make a safe mdxJsxFlowElement.\n *\n * @param {State} state\n *  Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>} unsafe\n * Unsafe mdxJsxFlowElement-like value.\n * @returns {Array<ElementContent> | Element | undefined}\n * Safe element.\n */\nfunction mdxJsxFlowElement(state, unsafe) {\n  const name = typeof unsafe.name === 'string' ? unsafe.name : ''\n\n  state.stack.push(name)\n\n  const content = /** @type {Array<ElementContent>} */ children(\n    state,\n    unsafe.children\n  )\n\n  const props = properties(state, unsafe.attributes)\n\n  state.stack.pop()\n\n  let safeElement = false\n\n  if (\n    name &&\n    name !== '*' &&\n    (!state.schema.tagNames || state.schema.tagNames.includes(name))\n  ) {\n    safeElement = true\n\n    // Some nodes can break out of their context if they don’t have a certain\n    // ancestor.\n    if (state.schema.ancestors && own.call(state.schema.ancestors, name)) {\n      const ancestors = state.schema.ancestors[name]\n      let index = -1\n\n      safeElement = false\n\n      while (++index < ancestors.length) {\n        if (state.stack.includes(ancestors[index])) {\n          safeElement = true\n        }\n      }\n    }\n  }\n\n  if (!safeElement) {\n    return state.schema.strip && !state.schema.strip.includes(name)\n      ? content\n      : undefined\n  }\n\n  /** @type {Element} */\n  const node = {\n    type: 'element',\n    tagName: name,\n    properties: props,\n    children: content\n  }\n\n  patch(node, unsafe)\n\n  return node\n}\n\n/**\n * Make a safe root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe root-like value.\n * @returns {Root}\n *   Safe root.\n */\nfunction root(state, unsafe) {\n  const content = /** @type {Array<RootContent>} */ children(\n    state,\n    unsafe.children\n  )\n\n  /** @type {Root} */\n  const node = {type: 'root', children: content}\n\n  patch(node, unsafe)\n\n  return node\n}\n\n/**\n * Make a safe text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe text-like value.\n * @returns {Text}\n *   Safe text.\n */\nfunction text(_, unsafe) {\n  const value = typeof unsafe.value === 'string' ? unsafe.value : ''\n  /** @type {Text} */\n  const node = {type: 'text', value}\n\n  patch(node, unsafe)\n\n  return node\n}\n\n/**\n * Make children safe.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<unknown>} children\n *   Unsafe value.\n * @returns {Array<Nodes>}\n *   Safe children.\n */\nfunction children(state, children) {\n  /** @type {Array<Nodes>} */\n  const results = []\n\n  if (Array.isArray(children)) {\n    const childrenUnknown = /** @type {Array<Readonly<unknown>>} */ children\n    let index = -1\n\n    while (++index < childrenUnknown.length) {\n      const value = transform(state, childrenUnknown[index])\n\n      if (value) {\n        if (Array.isArray(value)) {\n          results.push(...value)\n        } else {\n          results.push(value)\n        }\n      }\n    }\n  }\n\n  return results\n}\n\n/**\n * Make element properties safe.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<unknown>} properties\n *   Unsafe value.\n * @returns {Properties}\n *   Safe value.\n */\nfunction properties(state, properties) {\n  const tagName = state.stack[state.stack.length - 1]\n  const attributes = state.schema.attributes\n  const required = state.schema.required\n  const specific =\n    attributes && own.call(attributes, tagName)\n      ? attributes[tagName]\n      : undefined\n  const defaults =\n    attributes && own.call(attributes, '*') ? attributes['*'] : undefined\n  const props =\n    /** @type {Readonly<Record<string, Readonly<unknown>>>} */ properties &&\n    typeof properties === 'object'\n      ? Array.isArray(properties)\n        ? // Reduce to an object.\n          properties.reduce((acc, prop) => {\n            if (prop.type === 'mdxJsxAttribute') {\n              if (prop.value?.type === 'mdxJsxAttributeValueExpression') {\n                acc[prop.name] = prop.value\n              } else {\n                // Use `true` for boolean attributes. When prop={null} is passed, it’s\n                // is a of type `mdxJsxAttributeValueExpression` with value `null`.\n\n                if (prop.value === null) {\n                  acc[prop.name] = true\n                } else {\n                  acc[prop.name] = prop.value\n                }\n              }\n            }\n            return acc\n          }, {})\n        : properties\n      : {}\n\n  /** @type {Properties} */\n  const result = {}\n  /** @type {string} */\n  let key\n\n  for (key in props) {\n    if (own.call(props, key)) {\n      const unsafe = props[key]\n\n      let safe = propertyValue(\n        state,\n        findDefinition(specific, key),\n        key,\n        unsafe\n      )\n\n      if (safe === null || safe === undefined) {\n        safe = propertyValue(state, findDefinition(defaults, key), key, unsafe)\n      }\n\n      if (safe !== null && safe !== undefined) {\n        result[key] = safe\n      }\n    }\n  }\n\n  if (required && own.call(required, tagName)) {\n    const properties = required[tagName]\n\n    for (key in properties) {\n      if (own.call(properties, key) && !own.call(result, key)) {\n        result[key] = properties[key]\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Sanitize a property value.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<PropertyDefinition> | undefined} definition\n *   Definition.\n * @param {string} key\n *   Field name.\n * @param {Readonly<unknown>} value\n *   Unsafe value (but an array).\n * @returns {Array<number | string> | boolean | number | string | undefined}\n *   Safe value.\n */\nfunction propertyValue(state, definition, key, value) {\n  return definition\n    ? Array.isArray(value)\n      ? propertyValueMany(state, definition, key, value)\n      : propertyValuePrimitive(state, definition, key, value)\n    : undefined\n}\n\n/**\n * Sanitize a property value which is a list.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<PropertyDefinition>} definition\n *   Definition.\n * @param {string} key\n *   Field name.\n * @param {Readonly<Array<Readonly<unknown>>>} values\n *   Unsafe value (but an array).\n * @returns {Array<number | string>}\n *   Safe value.\n */\nfunction propertyValueMany(state, definition, key, values) {\n  let index = -1\n  /** @type {Array<number | string>} */\n  const result = []\n\n  while (++index < values.length) {\n    const value = propertyValuePrimitive(state, definition, key, values[index])\n\n    if (typeof value === 'number' || typeof value === 'string') {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Sanitize a property value which is a primitive.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<PropertyDefinition>} definition\n *   Definition.\n * @param {string} key\n *   Field name.\n * @param {Readonly<unknown>} value\n *   Unsafe value (but not an array).\n * @returns {boolean | number | string | undefined}\n *   Safe value.\n */\nfunction propertyValuePrimitive(state, definition, key, value) {\n  if (value?.type === 'mdxJsxAttributeValueExpression') {\n    if (value.value === 'undefined') {\n      return propertyValuePrimitive(state, definition, key, undefined)\n    } else if (value.value === 'true') {\n      return propertyValuePrimitive(state, definition, key, true)\n    } else if (value.value === 'false') {\n      return propertyValuePrimitive(state, definition, key, undefined)\n    } else {\n      return propertyValuePrimitive(state, definition, key, value.value)\n    }\n  }\n\n  if (\n    typeof value !== 'boolean' &&\n    typeof value !== 'number' &&\n    typeof value !== 'string'\n  ) {\n    return\n  }\n\n  if (!safeProtocol(state, key, value)) {\n    return\n  }\n\n  // Just a string, or only one item in an array, means all values are OK.\n  // More than one item means an allow list.\n  if (typeof definition === 'object' && definition.length > 1) {\n    let ok = false\n    let index = 0 // Ignore `key`, which is the first item.\n\n    while (++index < definition.length) {\n      const allowed = definition[index]\n\n      // Expression.\n      if (allowed && typeof allowed === 'object' && 'flags' in allowed) {\n        if (allowed.test(String(value))) {\n          ok = true\n          break\n        }\n      }\n      // Primitive.\n      else if (allowed === value) {\n        ok = true\n        break\n      }\n    }\n\n    if (!ok) return\n  }\n\n  return state.schema.clobber &&\n    state.schema.clobberPrefix &&\n    state.schema.clobber.includes(key)\n    ? state.schema.clobberPrefix + value\n    : value\n}\n\n/**\n * Check whether `value` is a safe URL.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} key\n *   Field name.\n * @param {Readonly<unknown>} value\n *   Unsafe value.\n * @returns {boolean}\n *   Whether it’s a safe value.\n */\nfunction safeProtocol(state, key, value) {\n  const protocols =\n    state.schema.protocols && own.call(state.schema.protocols, key)\n      ? state.schema.protocols[key]\n      : undefined\n\n  // No protocols defined? Then everything is fine.\n  if (!protocols || protocols.length === 0) {\n    return true\n  }\n\n  const url = String(value)\n  const colon = url.indexOf(':')\n  const questionMark = url.indexOf('?')\n  const numberSign = url.indexOf('#')\n  const slash = url.indexOf('/')\n\n  if (\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign)\n  ) {\n    return true\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length) === protocol\n    ) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Add data and position.\n *\n * @param {Nodes} node\n *   Node to patch safe data and position on.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe node-like value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(node, unsafe) {\n  const cleanPosition = position(\n    // @ts-expect-error: looks like a node.\n    unsafe\n  )\n\n  if (unsafe.data) {\n    node.data = structuredClone(unsafe.data)\n  }\n\n  if (cleanPosition) node.position = cleanPosition\n}\n\n/**\n *\n * @param {Readonly<Array<PropertyDefinition>> | undefined} definitions\n * @param {string} key\n * @returns {Readonly<PropertyDefinition> | undefined}\n */\nfunction findDefinition(definitions, key) {\n  /** @type {PropertyDefinition | undefined} */\n  let dataDefault\n  let index = -1\n\n  if (definitions) {\n    while (++index < definitions.length) {\n      const entry = definitions[index]\n      const name = typeof entry === 'string' ? entry : entry[0]\n\n      if (name === key) {\n        return entry\n      }\n\n      if (name === 'data*') dataDefault = entry\n\n      if (name === '*') return entry\n    }\n  }\n\n  if (key.length > 4 && key.slice(0, 4).toLowerCase() === 'data') {\n    return dataDefault\n  }\n}\n","import {evaluateSync} from '@mdx-js/mdx'\nimport {useDebounceFn} from 'ahooks'\nimport {frontmatterToMarkdown} from 'mdast-util-frontmatter'\nimport {gfmToMarkdown} from 'mdast-util-gfm'\nimport {mathToMarkdown} from 'mdast-util-math'\nimport {mdxToMarkdown} from 'mdast-util-mdx'\nimport {useEffect, useState} from 'react'\nimport * as runtime from 'react/jsx-runtime'\nimport rehypeSlug from 'rehype-slug-custom-id'\nimport rehypeMdxCodeProps from 'rehype-mdx-code-props'\nimport {rehypeUnwrapImages} from './rehype-unwrap-images'\nimport rehypeMathjax from 'rehype-mathjax/svg'\n\nimport {directiveToMarkdown} from 'mdast-util-directive'\nimport remarkDirective from 'remark-directive'\nimport remarkFrontmatter from 'remark-frontmatter'\nimport remarkGfm from 'remark-gfm'\nimport remarkMath from 'remark-math'\nimport {VFile} from 'vfile'\nimport {VFileMessage} from 'vfile-message'\n\nimport {toMarkdown} from 'mdast-util-to-markdown'\n\nimport {MdastRoot} from './components/types.js'\n\nimport rehypeSanitize from '../rehype-sanitize-mdx/index.js'\n\nconst parseMdast = (tree: MdastRoot) => {\n  const out = toMarkdown(tree as any, {\n    extensions: [\n      mdxToMarkdown(),\n      gfmToMarkdown(),\n      mathToMarkdown(),\n      directiveToMarkdown,\n      frontmatterToMarkdown()\n    ] as any\n  })\n\n  return out\n}\n\nfunction createFile(value: string) {\n  return new VFile({basename: 'example.mdx', value})\n}\n\nfunction evaluateFile(file: VFile, components: {[key: string]: any}) {\n  const capture = (name: string) => () => (tree: any) => {\n    file.data[name] = tree\n  }\n\n  try {\n    file.result = evaluateSync(file as any, {\n      ...(runtime as any),\n      development: false,\n\n      useDynamicImport: true,\n      remarkPlugins: [\n        remarkGfm,\n        remarkFrontmatter,\n        remarkMath,\n        remarkDirective,\n        capture('mdast')\n      ],\n      rehypePlugins: [\n        rehypeSlug,\n        rehypeUnwrapImages,\n        rehypeSanitize(Object.keys(components)),\n        [\n          rehypeMdxCodeProps,\n          {\n            tagName: 'code'\n          }\n        ],\n        rehypeMathjax\n      ],\n      recmaPlugins: []\n    }).default\n  } catch (error) {\n    const message =\n      error instanceof VFileMessage ? error : new VFileMessage(error)\n\n    if (!file.messages.includes(message as any)) {\n      file.messages.push(message as any)\n    }\n\n    message.fatal = true\n  }\n}\ninterface Defaults {\n  gfm: boolean\n  frontmatter: boolean\n  math: boolean\n  directive: boolean\n  mdast?: MdastRoot\n}\nconst initializeState = (\n  defaults: Defaults,\n  components: {\n    [key: string]: any\n  } = {}\n) => {\n  const markdown = defaults.mdast ? parseMdast(defaults.mdast) : ''\n\n  const file = createFile(markdown)\n\n  evaluateFile(file, components)\n\n  return {\n    ...defaults,\n    value: markdown,\n    file\n  }\n}\n\nexport function useMdx(\n  defaults: Defaults,\n  live: boolean = false,\n  components: {\n    [key: string]: any\n  } = {}\n) {\n  const [state, setState] = useState(() =>\n    initializeState(defaults, components)\n  )\n\n  useEffect(() => {\n    if (live) {\n      setState(initializeState(defaults, components))\n    }\n  }, [defaults, live])\n\n  const {run: setConfig} = useDebounceFn(\n    async config => {\n      const file = createFile(config.value)\n\n      evaluateFile(file, components)\n\n      setState({...config, file})\n    },\n    {leading: true, trailing: true, wait: 200}\n  )\n\n  return [state, setConfig]\n}\n","import deepmerge from 'deepmerge'\nimport {Root} from 'hast'\nimport {defaultSchema, sanitize} from '../hast-util-sanitize-mdx'\n\n/**\n * Sanitize HTML.\n */\nexport default function rehypeSanitize(componentsNames: string[] = []) {\n  return () => {\n    const allowAllAttributes = componentsNames.reduce<{\n      [key: string]: string[]\n    }>((acc, componentName) => {\n      acc[componentName] = ['*']\n      return acc\n    }, {})\n\n    const schema = deepmerge(defaultSchema, {\n      tagNames: componentsNames,\n      attributes: {\n        '*': ['className'],\n        // Allow rehype-mathjax classes.\n        code: [['className', /^language-./, 'math-inline', 'math-display']],\n        // Allow all attributes for components. The security of the components is the responsibility of the user.\n        ...allowAllAttributes\n      },\n      clobberPrefix: ''\n    })\n\n    return function (tree: Root) {\n      const result = sanitize(tree, schema) as Root\n\n      return result\n    }\n  }\n}\n","import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertTitle,\n  Button\n} from '@chakra-ui/react'\nimport React from 'react'\n\nexport const ErrorFallback: React.FC<{\n  error: Error\n  resetErrorBoundary: () => void\n}> = ({error, resetErrorBoundary}) => {\n  return (\n    <Alert status=\"error\">\n      <AlertIcon />\n      <AlertTitle>Something went wrong</AlertTitle>\n      <AlertDescription>\n        <pre>{error.message}</pre>\n\n        <Button onClick={resetErrorBoundary}>Try again</Button>\n      </AlertDescription>\n    </Alert>\n  )\n}\n","import type {VFile} from 'vfile'\nimport {Statistics} from 'vfile-statistics'\n\nexport const StatsErrorReporter: React.FC<{\n  stats: Statistics\n  state: any\n}> = ({stats, state}) => {\n  const vfileReporter = (file: VFile) => {\n    return JSON.stringify(file.messages, null, 2)\n  }\n\n  return (\n    <>\n      {stats.fatal || stats.warn ? (\n        <pre>\n          <code>{vfileReporter(state.file)}</code>\n        </pre>\n      ) : null}\n    </>\n  )\n}\n\nexport default StatsErrorReporter\n","import React, {useEffect, useState} from 'react'\nimport {ErrorBoundary} from 'react-error-boundary'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport {VFileMessage} from 'vfile-message'\nimport {Statistics} from 'vfile-statistics'\n\nimport {ErrorFallback} from './ErrorFallback.js'\nimport {BaseEditorProps} from './types.js'\n\nimport {Stack} from '@chakra-ui/react'\nimport StatsReporterError from './StatsReporterError.js'\n\nconst FallbackComponent: React.FC<{error: Error}> = ({error}) => {\n  const message = new VFileMessage(error)\n  message.fatal = true\n  return (\n    <pre>\n      <code>{String(message)}</code>\n    </pre>\n  )\n}\n\nexport interface PreviewComponentProps {\n  state: any\n  stats: Statistics\n  components: BaseEditorProps['components']\n}\n\nconst processContent = ({\n  state,\n  components\n}: {\n  state: PreviewComponentProps['state']\n  components: PreviewComponentProps['components']\n}) => {\n  try {\n    // check if state.file.result is a functio, if not throw error\n\n    if (typeof state.file.result !== 'function') {\n      console.error(state)\n      throw new Error(`Preview could not be generated.`)\n    }\n\n    return state.file.result({\n      components: {\n        code: ({className, ...props}: any) => {\n          const match = /language-(\\w+)/.exec(className || '')\n          return match ? (\n            <SyntaxHighlighter language={match[1]} PreTag=\"div\" {...props} />\n          ) : (\n            <code className={className} {...props} />\n          )\n        },\n        ...components,\n        wrapper: ({children}: any) => {\n          const Wrapper = components?.wrapper\n          const el = (\n            <Stack\n              w=\"full\"\n              sx={{\n                'mjx-container': {\n                  display: 'inline-block !important',\n                  verticalAlign: 'text-bottom !important'\n                }\n              }}>\n              {children}\n            </Stack>\n          )\n\n          if (Wrapper) {\n            return <Wrapper>{el}</Wrapper>\n          }\n\n          return el\n        }\n      }\n    })\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const PreviewComponent: React.FC<PreviewComponentProps> = React.memo(\n  ({state, stats, components}) => {\n    const [content, setContent] = useState<React.ReactNode>(() =>\n      processContent({state, components})\n    )\n    const [error, setError] = useState<Error | null>(null)\n\n    useEffect(() => {\n      async function processState() {\n        try {\n          const result = await processContent({\n            state,\n            components\n          })\n          setContent(result)\n          setError(null)\n        } catch (error) {\n          setError(error)\n        }\n      }\n\n      processState()\n    }, [state.file?.value, components])\n\n    return (\n      <ErrorBoundary FallbackComponent={ErrorFallback}>\n        <noscript>Enable JavaScript for the rendered result.</noscript>\n\n        {state.file?.result && <>{content}</>}\n\n        {error && <FallbackComponent error={error} />}\n\n        <StatsReporterError state={state} stats={stats} />\n      </ErrorBoundary>\n    )\n  }\n)\n","import {BaseEditorProps, MdastRoot} from './types.js'\n// @ts-nocheck\nimport React, {useMemo} from 'react'\nimport {Statistics, statistics} from 'vfile-statistics'\n\nimport {useMdx} from '../use-mdx.js'\nimport {PreviewComponent} from './PreviewComponent'\n\nexport interface BuildEditorProps {\n  components: BaseEditorProps['components']\n\n  mdast?: MdastRoot\n}\n\nexport const Preview = React.memo<BuildEditorProps>(({components, mdast}) => {\n  const defaults = useMemo(\n    () => ({\n      gfm: true,\n      frontmatter: true,\n      math: true,\n      directive: true,\n      mdast\n    }),\n    [mdast]\n  )\n\n  const [state, _] = useMdx(defaults, true, components) as any\n\n  const stats = useMemo(() => {\n    return state.file ? statistics(state.file) : ({} as Statistics)\n  }, [state.file])\n\n  // useEffect(() => {\n  //   console.log('useEffect', defaultValue)\n  //   setConfig({value: defaultValue})\n  // }, [defaultValue, setConfig])\n\n  return (\n    <PreviewComponent state={state} stats={stats} components={components} />\n  )\n})\n","import {Box, Link as ChakraLink, LinkProps} from '@chakra-ui/react'\nimport {Link as GatsbyLink} from 'gatsby'\nimport {Field} from '@atsnek/jaen'\n\nexport const Image = ({name, defaultValue, alt, ...rest}: any) => {\n  return (\n    <Box {...rest}>\n      <Field.Image name={name} defaultValue={defaultValue} alt={alt} />\n    </Box>\n  )\n}\n\nImage.defaultProps = {\n  name: () => `image-${(Math.random() + 1).toString(36).substring(7)}`,\n  alt: 'Placeholder Image Alt',\n  defaultValue: 'https://via.placeholder.com/150'\n}\n\nconst linkProps: LinkProps = {\n  position: 'relative',\n  color: 'brand.600',\n  textDecoration: 'none',\n  w: 'fit-content',\n  _hover: {\n    color: 'brand.600',\n    _before: {\n      transform: 'scaleX(1)'\n    }\n  },\n  _before: {\n    content: '\"\"',\n    position: 'absolute',\n    display: 'block',\n    width: '100%',\n    height: '2px',\n    bottom: -0.5,\n    left: 0,\n    backgroundColor: 'brand.600',\n    transform: 'scaleX(0)',\n    transformOrigin: 'top left',\n    transition: 'transform 0.3s ease'\n  }\n}\n\nexport const Link: React.FC<{\n  to: string\n  isExternal?: boolean\n  children: React.ReactNode\n}> = ({to, children, ...props}) => {\n  const isExternal =\n    props.isExternal !== undefined\n      ? props.isExternal\n      : to.startsWith('http://') || to.startsWith('https://')\n\n  if (isExternal) {\n    return (\n      <ChakraLink href={to} isExternal {...linkProps}>\n        {children}\n      </ChakraLink>\n    )\n  }\n\n  return (\n    <ChakraLink as={GatsbyLink} to={to} {...linkProps}>\n      {children}\n    </ChakraLink>\n  )\n}\n\nLink.defaultProps = {\n  to: '/',\n  children: 'My Link'\n}\n","import {MdastRoot} from './components/types.js'\n\nexport const defaultData = {\n  type: 'root',\n  children: [\n    {\n      type: 'heading',\n      depth: 1,\n      children: [\n        {\n          type: 'text',\n          value: 'Hello, world!',\n          position: {\n            start: {\n              line: 1,\n              column: 3,\n              offset: 2\n            },\n            end: {\n              line: 1,\n              column: 16,\n              offset: 15\n            }\n          }\n        }\n      ],\n      position: {\n        start: {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n        end: {\n          line: 1,\n          column: 16,\n          offset: 15\n        }\n      }\n    },\n    {\n      type: 'paragraph',\n      children: [\n        {\n          type: 'text',\n          value: '// This is a ',\n          position: {\n            start: {\n              line: 3,\n              column: 1,\n              offset: 17\n            },\n            end: {\n              line: 3,\n              column: 14,\n              offset: 30\n            }\n          }\n        },\n        {\n          type: 'strong',\n          children: [\n            {\n              type: 'text',\n              value: 'jaen',\n              position: {\n                start: {\n                  line: 3,\n                  column: 16,\n                  offset: 32\n                },\n                end: {\n                  line: 3,\n                  column: 20,\n                  offset: 36\n                }\n              }\n            }\n          ],\n          position: {\n            start: {\n              line: 3,\n              column: 14,\n              offset: 30\n            },\n            end: {\n              line: 3,\n              column: 22,\n              offset: 38\n            }\n          }\n        },\n        {\n          type: 'text',\n          value: ' MDX field.',\n          position: {\n            start: {\n              line: 3,\n              column: 22,\n              offset: 38\n            },\n            end: {\n              line: 3,\n              column: 33,\n              offset: 49\n            }\n          }\n        }\n      ],\n      position: {\n        start: {\n          line: 3,\n          column: 1,\n          offset: 17\n        },\n        end: {\n          line: 3,\n          column: 33,\n          offset: 49\n        }\n      }\n    },\n    {\n      type: 'paragraph',\n      children: [\n        {\n          type: 'text',\n          value: '// ## Usage',\n          position: {\n            start: {\n              line: 5,\n              column: 1,\n              offset: 51\n            },\n            end: {\n              line: 5,\n              column: 12,\n              offset: 62\n            }\n          }\n        }\n      ],\n      position: {\n        start: {\n          line: 5,\n          column: 1,\n          offset: 51\n        },\n        end: {\n          line: 5,\n          column: 12,\n          offset: 62\n        }\n      }\n    },\n    {\n      type: 'paragraph',\n      children: [\n        {\n          type: 'text',\n          value: '// You can use this field to write markdown content.\\n//',\n          position: {\n            start: {\n              line: 7,\n              column: 1,\n              offset: 64\n            },\n            end: {\n              line: 8,\n              column: 3,\n              offset: 119\n            }\n          }\n        }\n      ],\n      position: {\n        start: {\n          line: 7,\n          column: 1,\n          offset: 64\n        },\n        end: {\n          line: 8,\n          column: 4,\n          offset: 120\n        }\n      }\n    }\n  ],\n  position: {\n    start: {\n      line: 1,\n      column: 1,\n      offset: 0\n    },\n    end: {\n      line: 15,\n      column: 8,\n      offset: 228\n    }\n  }\n} as MdastRoot\n","import {connectField, EditingProvider} from '@atsnek/jaen'\nimport React, {useEffect, useMemo} from 'react'\n\nimport {Preview} from './components/Preview.js'\nimport {BaseEditorProps, MdastRoot} from './components/types.js'\n\nimport {Image, Link} from './default-components.js'\nimport {defaultData} from './default-data.js'\n\nimport { TabsProps } from './components/TabsTemplate.js'\ntype MdxFieldValue = MdastRoot\n\nconst baseComponents = {\n  Image,\n  Link,\n  a: (props: any) => {\n    return <Link to={props.href}>{props.children}</Link>\n  },\n  img: (props: any) => {\n    const src = props.src\n    const alt = props.alt\n\n    const name = `${src}-${alt}`\n\n    return <Image name={name} defaultValue={src} alt={alt} />\n  }\n}\n\nexport interface MdxFieldProps {\n  components: BaseEditorProps['components']\n  tabsTemplate?: React.FC<TabsProps> // Ensure this is React.FC<TabsProps>\n}\n\nexport const MdxField = connectField<MdxFieldValue, MdxFieldProps>(\n  ({jaenField, components, tabsTemplate}) => {\n    const [rawValue, setRawValue] = React.useState<MdastRoot | undefined>(\n      jaenField.staticValue || defaultData\n    )\n\n    useEffect(() => {\n      setRawValue(jaenField.value || jaenField.staticValue || defaultData)\n    }, [jaenField.value])\n\n    const combinedComponents = useMemo(() => {\n      return {\n        ...baseComponents,\n        ...components\n      }\n    }, [baseComponents, JSON.stringify(components)])\n\n    if (jaenField.isEditing) {\n      // Render editor in edit mode\n\n      return (\n        <LayzEditor\n          components={combinedComponents}\n          onUpdateValue={jaenField.onUpdateValue}\n          rawValue={rawValue}\n          tabsTemplate={tabsTemplate} // Pass tabsTemplate to LayzEditor\n        />\n      )\n    } else {\n      return <Preview components={combinedComponents} mdast={rawValue} />\n    }\n  },\n  {\n    fieldType: 'IMA:MdxField'\n  }\n)\n\nexport const UncontrolledMdxField: React.FC<{\n  components: BaseEditorProps['components']\n  onUpdateValue: (value: MdastRoot) => void\n  value?: MdastRoot\n  isEditing?: boolean\n  tabsTemplate?: React.FC<TabsProps> // Ensure this is React.FC<TabsProps>\n}> = ({components, onUpdateValue, value, isEditing, tabsTemplate}) => {\n  const combinedComponents = useMemo(() => {\n    return {\n      ...baseComponents,\n      ...components\n    }\n  }, [baseComponents, components])\n\n  if (isEditing) {\n    // Render editor in edit mode\n\n    return (\n      <EditingProvider isEditing={isEditing}>\n        <LayzEditor\n          components={combinedComponents}\n          onUpdateValue={onUpdateValue}\n          rawValue={value}\n          tabsTemplate={tabsTemplate} // Pass tabsTemplate to LayzEditor\n        />\n      </EditingProvider>\n    )\n  } else {\n    return <Preview components={combinedComponents} mdast={value} />\n  }\n}\n\nconst LayzEditor: React.FC<{\n  components: BaseEditorProps['components']\n  onUpdateValue: (value: MdastRoot) => void\n  rawValue?: MdastRoot\n  tabsTemplate?: BaseEditorProps['tabsTemplate'] // Ensure this is React.FC<TabsProps>\n}> = ({components, onUpdateValue, rawValue, tabsTemplate}) => {\n  const Editor = React.lazy(async () => await import('./components/Editor.js'))\n\n  const MemoedEditor = React.useMemo(() => Editor, [])\n\n  return (\n    <React.Suspense fallback={<div>Loading...</div>}>\n      <MemoedEditor\n        components={components}\n        onUpdateValue={onUpdateValue}\n        mode=\"editAndPreview\"\n        mdast={rawValue}\n        tabsTemplate={tabsTemplate} // Pass tabsTemplate to Editor\n      />\n    </React.Suspense>\n  )\n}\n"],"names":["convert","test","ok","castFactory","Array","isArray","tests","checks","index","length","parameters","apply","this","anyFactory","check","checkAsRecord","node","nodeAsRecord","key","propsFactory","type","Error","testFunction","value","parent","Boolean","looksLikeANode","call","undefined","empty","EXIT","rehypeUnwrapImages","tree","testOrVisitor","visitorOrReverse","maybeReverse","reverse","visitor","visit","is","factory","parents","name","tagName","Object","defineProperty","subresult","offset","grandparents","result","toResult","children","nodeAsParent","concat","visitParents","indexOf","_","env","self","globalThis","deserialize","serialized","$","as","out","set","unpair","has","get","arr","push","object","Date","source","flags","RegExp","map","Map","Set","add","message","BigInt","deserializer","EMPTY","toString","keys","typeOf","asString","slice","includes","shouldSkip","TYPE","serialize","json","lossy","strict","pair","entry","TypeError","valueOf","toJSON","entries","toISOString","serializer","structuredClone$1","structuredClone","any","options","pointEnd","point","pointStart","position","line","column","own","hasOwnProperty","transform","state","unsafe","schema","allowComments","patch","comment","allowDoctypes","doctype","stack","content","props","properties","pop","safeElement","tagNames","ancestors","strip","element","root","text","attributes","mdxJsxFlowElement","results","childrenUnknown","required","specific","defaults","reduce","acc","prop","_prop$value","safe","propertyValue","findDefinition","definition","values","propertyValuePrimitive","propertyValueMany","protocols","url","String","colon","questionMark","numberSign","slash","protocol","safeProtocol","allowed","clobber","clobberPrefix","cleanPosition","start","end","data","definitions","dataDefault","toLowerCase","createFile","VFile","basename","evaluateFile","file","components","componentsNames","evaluateSync","_extends","runtime","development","useDynamicImport","remarkPlugins","remarkGfm","remarkFrontmatter","remarkMath","remarkDirective","rehypePlugins","rehypeSlug","allowAllAttributes","componentName","deepmerge","defaultSchema","code","ctx","replace","rehypeMdxCodeProps","rehypeMathjax","recmaPlugins","error","VFileMessage","messages","fatal","initializeState","markdown","mdast","toMarkdown","extensions","mdxToMarkdown","gfmToMarkdown","mathToMarkdown","directiveToMarkdown","frontmatterToMarkdown","useMdx","live","_useState","useState","setState","useEffect","useDebounceFn","config","Promise","resolve","e","reject","leading","trailing","wait","run","ErrorFallback","_ref","resetErrorBoundary","_jsxs","Alert","status","_jsx","AlertIcon","jsx","AlertTitle","AlertDescription","Button","onClick","StatsErrorReporter","stats","_Fragment","warn","JSON","stringify","FallbackComponent","processContent","_ref2","console","_ref3","className","_objectWithoutPropertiesLoose","_excluded","match","exec","SyntaxHighlighter","language","PreTag","wrapper","_ref4","Wrapper","el","Stack","w","sx","display","verticalAlign","PreviewComponent","React","memo","_ref5","_state$file","_state$file2","setContent","_useState2","setError","_temp","then","_catch","processState","jsxs","ErrorBoundary","StatsReporterError","Preview","useMemo","gfm","frontmatter","math","directive","statistics","Image","defaultValue","alt","rest","Box","Field","defaultProps","Math","random","substring","linkProps","color","textDecoration","_hover","_before","width","height","bottom","left","backgroundColor","transformOrigin","transition","Link","to","_excluded2","isExternal","startsWith","ChakraLink","href","GatsbyLink","defaultData","depth","baseComponents","a","img","src","MdxField","connectField","jaenField","tabsTemplate","_React$useState","staticValue","rawValue","setRawValue","combinedComponents","isEditing","LayzEditor","onUpdateValue","fieldType","Editor","lazy","require","MemoedEditor","Suspense","fallback","mode","EditingProvider"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@atsnek/jaen-fields-mdx/dist/index-aa32301e.js b/node_modules/@atsnek/jaen-fields-mdx/dist/index-aa32301e.js
new file mode 100644
index 0000000..4059106
--- /dev/null
+++ b/node_modules/@atsnek/jaen-fields-mdx/dist/index-aa32301e.js
@@ -0,0 +1,2 @@
+import*as e from"react/jsx-runtime";import{jsxs as t,jsx as n,Fragment as r}from"react/jsx-runtime";import{Field as o,connectField as a,EditingProvider as i}from"@atsnek/jaen";import s,{useState as c,useEffect as u,useMemo as l}from"react";import{statistics as f}from"vfile-statistics";import{evaluateSync as m}from"@mdx-js/mdx";import{useDebounceFn as p}from"ahooks";import{frontmatterToMarkdown as d}from"mdast-util-frontmatter";import{gfmToMarkdown as h}from"mdast-util-gfm";import{mathToMarkdown as v}from"mdast-util-math";import{mdxToMarkdown as g}from"mdast-util-mdx";import y from"rehype-slug-custom-id";import b from"rehype-mdx-code-props";import x from"rehype-mathjax/svg";import{directiveToMarkdown as w}from"mdast-util-directive";import k from"remark-directive";import j from"remark-frontmatter";import N from"remark-gfm";import O from"remark-math";import{VFile as A}from"vfile";import{VFileMessage as P}from"vfile-message";import{toMarkdown as E}from"mdast-util-to-markdown";import S from"deepmerge";import{defaultSchema as V}from"hast-util-sanitize";import{ErrorBoundary as T}from"react-error-boundary";import M from"react-syntax-highlighter";import{Alert as I,AlertIcon as J,AlertTitle as U,AlertDescription as B,Button as C,Stack as D,Box as L,Link as F}from"@chakra-ui/react";import{Link as _}from"gatsby";function z(){return z=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},z.apply(this,arguments)}function X(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t.indexOf(n=a[r])>=0||(o[n]=e[n]);return o}const R=function(e){if(null==e)return q;if("function"==typeof e)return W(e);if("object"==typeof e)return Array.isArray(e)?function(e){const t=[];let n=-1;for(;++n<e.length;)t[n]=R(e[n]);return W(function(...e){let n=-1;for(;++n<t.length;)if(t[n].apply(this,e))return!0;return!1})}(e):function(e){const t=e;return W(function(n){const r=n;let o;for(o in e)if(r[o]!==t[o])return!1;return!0})}(e);if("string"==typeof e)return t=e,W(function(e){return e&&e.type===t});var t;throw new Error("Expected function, string, or object as test")};function W(e){return function(t,n,r){return Boolean(function(e){return null!==e&&"object"==typeof e&&"type"in e}(t)&&e.call(this,t,"number"==typeof n?n:void 0,r||void 0))}}function q(){return!0}const H=[],Y=!1;var G=function(){return function(t){!function(e,t,n,r){let o,a,i;a="element",i=n,o=void 0,function(e,t,n,r){let o;o="element";const a=R("element");!function e(t,r,o){const i=t&&"object"==typeof t?t:{};if("string"==typeof i.type){const e="string"==typeof i.tagName?i.tagName:"string"==typeof i.name?i.name:void 0;Object.defineProperty(s,"name",{value:"node ("+t.type+(e?"<"+e+">":"")+")"})}return s;function s(){let i,s,c,u=H;if(a(t,r,o[o.length-1]||void 0)&&(u=function(e){return Array.isArray(e)?e:"number"==typeof e?[!0,e]:null==e?H:[e]}(n(t,o)),u[0]===Y))return u;if("children"in t&&t.children){const n=t;if(n.children&&"skip"!==u[0])for(s=0,c=o.concat(n);s>-1&&s<n.children.length;){if(i=e(n.children[s],s,c)(),i[0]===Y)return i;s="number"==typeof i[1]?i[1]:s+1}}return u}}(e,void 0,[])()}(e,0,function(e,t){const n=t[t.length-1],r=n?n.children.indexOf(e):void 0;return i(e,r,n)})}(t,0,e)};function e(e,t,n){"img"===e.tagName&&n&&"p"===n.tagName&&(n.tagName="div")}};const K="object"==typeof self?self:globalThis,Q=e=>((e,t)=>{const n=(t,n)=>(e.set(n,t),t),r=o=>{if(e.has(o))return e.get(o);const[a,i]=t[o];switch(a){case 0:case-1:return n(i,o);case 1:{const e=n([],o);for(const t of i)e.push(r(t));return e}case 2:{const e=n({},o);for(const[t,n]of i)e[r(t)]=r(n);return e}case 3:return n(new Date(i),o);case 4:{const{source:e,flags:t}=i;return n(new RegExp(e,t),o)}case 5:{const e=n(new Map,o);for(const[t,n]of i)e.set(r(t),r(n));return e}case 6:{const e=n(new Set,o);for(const t of i)e.add(r(t));return e}case 7:{const{name:e,message:t}=i;return n(new K[e](t),o)}case 8:return n(BigInt(i),o);case"BigInt":return n(Object(BigInt(i)),o)}return n(new K[a](i),o)};return r})(new Map,e)(0),Z="",{toString:$}={},{keys:ee}=Object,te=e=>{const t=typeof e;if("object"!==t||!e)return[0,t];const n=$.call(e).slice(8,-1);switch(n){case"Array":return[1,Z];case"Object":return[2,Z];case"Date":return[3,Z];case"RegExp":return[4,Z];case"Map":return[5,Z];case"Set":return[6,Z]}return n.includes("Array")?[1,n]:n.includes("Error")?[7,n]:[2,n]},ne=([e,t])=>0===e&&("function"===t||"symbol"===t),re=(e,{json:t,lossy:n}={})=>{const r=[];return((e,t,n,r)=>{const o=(e,t)=>{const o=r.push(e)-1;return n.set(t,o),o},a=r=>{if(n.has(r))return n.get(r);let[i,s]=te(r);switch(i){case 0:{let t=r;switch(s){case"bigint":i=8,t=r.toString();break;case"function":case"symbol":if(e)throw new TypeError("unable to serialize "+s);t=null;break;case"undefined":return o([-1],r)}return o([i,t],r)}case 1:{if(s)return o([s,[...r]],r);const e=[],t=o([i,e],r);for(const t of r)e.push(a(t));return t}case 2:{if(s)switch(s){case"BigInt":return o([s,r.toString()],r);case"Boolean":case"Number":case"String":return o([s,r.valueOf()],r)}if(t&&"toJSON"in r)return a(r.toJSON());const n=[],c=o([i,n],r);for(const t of ee(r))!e&&ne(te(r[t]))||n.push([a(t),a(r[t])]);return c}case 3:return o([i,r.toISOString()],r);case 4:{const{source:e,flags:t}=r;return o([i,{source:e,flags:t}],r)}case 5:{const t=[],n=o([i,t],r);for(const[n,o]of r)(e||!ne(te(n))&&!ne(te(o)))&&t.push([a(n),a(o)]);return n}case 6:{const t=[],n=o([i,t],r);for(const n of r)!e&&ne(te(n))||t.push(a(n));return n}}const{message:c}=r;return o([i,{name:s,message:c}],r)};return a})(!(t||n),!!t,new Map,r)(e),r};var oe="function"==typeof structuredClone?(e,t)=>t&&("json"in t||"lossy"in t)?Q(re(e,t)):structuredClone(e):(e,t)=>Q(re(e,t));const ae=se("end"),ie=se("start");function se(e){return function(t){const n=t&&t.position&&t.position[e]||{};if("number"==typeof n.line&&n.line>0&&"number"==typeof n.column&&n.column>0)return{line:n.line,column:n.column,offset:"number"==typeof n.offset&&n.offset>-1?n.offset:void 0}}}var ce={}.hasOwnProperty;function ue(e,t){if(t&&"object"==typeof t){var n=t;switch("string"==typeof n.type?n.type:""){case"comment":return function(e,t){if(e.schema.allowComments){var n="string"==typeof t.value?t.value:"",r=n.indexOf("--\x3e"),o={type:"comment",value:r<0?n:n.slice(0,r)};return de(o,t),o}}(e,n);case"doctype":return function(e,t){if(e.schema.allowDoctypes){var n={type:"doctype"};return de(n,t),n}}(e,n);case"element":return function(e,t){var n="string"==typeof t.tagName?t.tagName:"";e.stack.push(n);var r=le(e,t.children),o=fe(e,t.properties);e.stack.pop();var a=!1;if(n&&"*"!==n&&(!e.schema.tagNames||e.schema.tagNames.includes(n))&&(a=!0,e.schema.ancestors&&ce.call(e.schema.ancestors,n))){var i=e.schema.ancestors[n],s=-1;for(a=!1;++s<i.length;)e.stack.includes(i[s])&&(a=!0)}if(!a)return e.schema.strip&&!e.schema.strip.includes(n)?r:void 0;var c={type:"element",tagName:n,properties:o,children:r};return de(c,t),c}(e,n);case"root":return function(e,t){var n={type:"root",children:le(e,t.children)};return de(n,t),n}(e,n);case"text":return function(e,t){var n={type:"text",value:"string"==typeof t.value?t.value:""};return de(n,t),n}(0,n);case"mdxJsxTextElement":case"mdxJsxFlowElement":return function(e,t){var n="string"==typeof t.name?t.name:"";e.stack.push(n);var r=le(e,t.children),o=fe(e,t.attributes);e.stack.pop();var a=!1;if(n&&"*"!==n&&(!e.schema.tagNames||e.schema.tagNames.includes(n))&&(a=!0,e.schema.ancestors&&ce.call(e.schema.ancestors,n))){var i=e.schema.ancestors[n],s=-1;for(a=!1;++s<i.length;)e.stack.includes(i[s])&&(a=!0)}if(!a)return e.schema.strip&&!e.schema.strip.includes(n)?r:void 0;var c={type:"element",tagName:n,properties:o,children:r};return de(c,t),c}(e,n)}}}function le(e,t){var n=[];if(Array.isArray(t))for(var r=t,o=-1;++o<r.length;){var a=ue(e,r[o]);a&&(Array.isArray(a)?n.push.apply(n,a):n.push(a))}return n}function fe(e,t){var n,r=e.stack[e.stack.length-1],o=e.schema.attributes,a=e.schema.required,i=o&&ce.call(o,r)?o[r]:void 0,s=o&&ce.call(o,"*")?o["*"]:void 0,c=t&&"object"==typeof t?Array.isArray(t)?t.reduce(function(e,t){var n;return"mdxJsxAttribute"===t.type&&(e[t.name]="mdxJsxAttributeValueExpression"===(null==(n=t.value)?void 0:n.type)?t.value:null===t.value||t.value),e},{}):t:{},u={};for(n in c)if(ce.call(c,n)){var l=c[n],f=me(e,he(i,n),n,l);null==f&&(f=me(e,he(s,n),n,l)),null!=f&&(u[n]=f)}if(a&&ce.call(a,r)){var m=a[r];for(n in m)ce.call(m,n)&&!ce.call(u,n)&&(u[n]=m[n])}return u}function me(e,t,n,r){return t?Array.isArray(r)?function(e,t,n,r){for(var o=-1,a=[];++o<r.length;){var i=pe(e,t,n,r[o]);"number"!=typeof i&&"string"!=typeof i||a.push(i)}return a}(e,t,n,r):pe(e,t,n,r):void 0}function pe(e,t,n,r){if("mdxJsxAttributeValueExpression"===(null==r?void 0:r.type))return pe(e,t,n,"undefined"===r.value?void 0:"true"===r.value||("false"===r.value?void 0:r.value));if(("boolean"==typeof r||"number"==typeof r||"string"==typeof r)&&function(e,t,n){var r=e.schema.protocols&&ce.call(e.schema.protocols,t)?e.schema.protocols[t]:void 0;if(!r||0===r.length)return!0;var o=String(n),a=o.indexOf(":"),i=o.indexOf("?"),s=o.indexOf("#"),c=o.indexOf("/");if(a<0||c>-1&&a>c||i>-1&&a>i||s>-1&&a>s)return!0;for(var u=-1;++u<r.length;){var l=r[u];if(a===l.length&&o.slice(0,l.length)===l)return!0}return!1}(e,n,r)){if("object"==typeof t&&t.length>1){for(var o=!1,a=0;++a<t.length;){var i=t[a];if(i&&"object"==typeof i&&"flags"in i){if(i.test(String(r))){o=!0;break}}else if(i===r){o=!0;break}}if(!o)return}return e.schema.clobber&&e.schema.clobberPrefix&&e.schema.clobber.includes(n)?e.schema.clobberPrefix+r:r}}function de(e,t){var n=function(e){const t=ie(e),n=ae(e);if(t&&n)return{start:t,end:n}}(t);t.data&&(e.data=oe(t.data)),n&&(e.position=n)}function he(e,t){var n,r=-1;if(e)for(;++r<e.length;){var o=e[r],a="string"==typeof o?o:o[0];if(a===t)return o;if("data*"===a&&(n=o),"*"===a)return o}if(t.length>4&&"data"===t.slice(0,4).toLowerCase())return n}function ve(e){return new A({basename:"example.mdx",value:e})}function ge(t,n){var r;try{t.result=m(t,z({},e,{development:!1,useDynamicImport:!0,remarkPlugins:[N,j,O,k,function(){return function(e){t.data.mdast=e}}],rehypePlugins:[y,G,(r=Object.keys(n),void 0===r&&(r=[]),function(){var e=r.reduce(function(e,t){return e[t]=["*"],e},{}),t=S(V,{tagNames:r,attributes:z({"*":["className"],code:[["className",/^language-./,"math-inline","math-display"]]},e),clobberPrefix:""});return function(e){var n,r,o,a;return n=e,o={type:"root",children:[]},(a=ue({schema:(r=t)?z({},V,r):V,stack:[]},n))&&(Array.isArray(a)?1===a.length?o=a[0]:o.children=a:o=a),o}}),[b,{tagName:"code"}],x],recmaPlugins:[]})).default}catch(e){var o=e instanceof P?e:new P(e);t.messages.includes(o)||t.messages.push(o),o.fatal=!0}}var ye=function(e,t){void 0===t&&(t={});var n=e.mdast?E(e.mdast,{extensions:[g(),h(),v(),w,d()]}):"",r=ve(n);return ge(r,t),z({},e,{value:n,file:r})};function be(e,t,n){void 0===t&&(t=!1),void 0===n&&(n={});var r=c(function(){return ye(e,n)}),o=r[0],a=r[1];return u(function(){t&&a(ye(e,n))},[e,t]),[o,p(function(e){try{var t=ve(e.value);return ge(t,n),a(z({},e,{file:t})),Promise.resolve()}catch(e){return Promise.reject(e)}},{leading:!0,trailing:!0,wait:200}).run]}var xe=function(e){var r=e.error,o=e.resetErrorBoundary;return t(I,{status:"error",children:[n(J,{}),n(U,{children:"Something went wrong"}),t(B,{children:[n("pre",{children:r.message}),n(C,{onClick:o,children:"Try again"})]})]})},we=function(e){var t,o=e.stats;return n(r,{children:o.fatal||o.warn?n("pre",{children:n("code",{children:(t=e.state.file,JSON.stringify(t.messages,null,2))})}):null})},ke=["className"],je=function(e){var t=new P(e.error);return t.fatal=!0,n("pre",{children:n("code",{children:String(t)})})},Ne=function(e){var t=e.state,r=e.components;try{if("function"!=typeof t.file.result)throw console.error(t),new Error("Preview could not be generated.");return t.file.result({components:z({code:function(e){var t=e.className,r=X(e,ke),o=/language-(\w+)/.exec(t||"");return o?n(M,z({language:o[1],PreTag:"div"},r)):n("code",z({className:t},r))}},r,{wrapper:function(e){var t=null==r?void 0:r.wrapper,o=n(D,{w:"full",sx:{"mjx-container":{display:"inline-block !important",verticalAlign:"text-bottom !important"}},children:e.children});return t?n(t,{children:o}):o}})})}catch(e){throw e}},Oe=s.memo(function(e){var o,a,i=e.state,s=e.stats,l=e.components,f=c(function(){return Ne({state:i,components:l})}),m=f[0],p=f[1],d=c(null),h=d[0],v=d[1];return u(function(){!function(){try{var e=function(e,t){try{var n=Promise.resolve(Ne({state:i,components:l})).then(function(e){p(e),v(null)})}catch(e){return t(e)}return n&&n.then?n.then(void 0,t):n}(0,function(e){v(e)});return Promise.resolve(e&&e.then?e.then(function(){}):void 0)}catch(e){return Promise.reject(e)}}()},[null==(o=i.file)?void 0:o.value,l]),t(T,{FallbackComponent:xe,children:[n("noscript",{children:"Enable JavaScript for the rendered result."}),(null==(a=i.file)?void 0:a.result)&&n(r,{children:m}),h&&n(je,{error:h}),n(we,{state:i,stats:s})]})}),Ae=s.memo(function(e){var t=e.components,r=e.mdast,o=be(l(function(){return{gfm:!0,frontmatter:!0,math:!0,directive:!0,mdast:r}},[r]),!0,t)[0],a=l(function(){return o.file?f(o.file):{}},[o.file]);return n(Oe,{state:o,stats:a,components:t})}),Pe=["name","defaultValue","alt"],Ee=["to","children"],Se=function(e){var t=e.name,r=e.defaultValue,a=e.alt,i=X(e,Pe);return n(L,z({},i,{children:n(o.Image,{name:t,defaultValue:r,alt:a})}))};Se.defaultProps={name:function(){return"image-"+(Math.random()+1).toString(36).substring(7)},alt:"Placeholder Image Alt",defaultValue:"https://via.placeholder.com/150"};var Ve={position:"relative",color:"brand.600",textDecoration:"none",w:"fit-content",_hover:{color:"brand.600",_before:{transform:"scaleX(1)"}},_before:{content:'""',position:"absolute",display:"block",width:"100%",height:"2px",bottom:-.5,left:0,backgroundColor:"brand.600",transform:"scaleX(0)",transformOrigin:"top left",transition:"transform 0.3s ease"}},Te=function(e){var t=e.to,r=e.children,o=X(e,Ee),a=void 0!==o.isExternal?o.isExternal:t.startsWith("http://")||t.startsWith("https://");return n(F,z(a?{href:t,isExternal:!0}:{as:_,to:t},Ve,{children:r}))};Te.defaultProps={to:"/",children:"My Link"};var Me={type:"root",children:[{type:"heading",depth:1,children:[{type:"text",value:"Hello, world!",position:{start:{line:1,column:3,offset:2},end:{line:1,column:16,offset:15}}}],position:{start:{line:1,column:1,offset:0},end:{line:1,column:16,offset:15}}},{type:"paragraph",children:[{type:"text",value:"// This is a ",position:{start:{line:3,column:1,offset:17},end:{line:3,column:14,offset:30}}},{type:"strong",children:[{type:"text",value:"jaen",position:{start:{line:3,column:16,offset:32},end:{line:3,column:20,offset:36}}}],position:{start:{line:3,column:14,offset:30},end:{line:3,column:22,offset:38}}},{type:"text",value:" MDX field.",position:{start:{line:3,column:22,offset:38},end:{line:3,column:33,offset:49}}}],position:{start:{line:3,column:1,offset:17},end:{line:3,column:33,offset:49}}},{type:"paragraph",children:[{type:"text",value:"// ## Usage",position:{start:{line:5,column:1,offset:51},end:{line:5,column:12,offset:62}}}],position:{start:{line:5,column:1,offset:51},end:{line:5,column:12,offset:62}}},{type:"paragraph",children:[{type:"text",value:"// You can use this field to write markdown content.\n//",position:{start:{line:7,column:1,offset:64},end:{line:8,column:3,offset:119}}}],position:{start:{line:7,column:1,offset:64},end:{line:8,column:4,offset:120}}}],position:{start:{line:1,column:1,offset:0},end:{line:15,column:8,offset:228}}},Ie={Image:Se,Link:Te,a:function(e){return n(Te,{to:e.href,children:e.children})},img:function(e){var t=e.src,r=e.alt;return n(Se,{name:t+"-"+r,defaultValue:t,alt:r})}},Je=a(function(e){var t=e.jaenField,r=e.components,o=e.tabsTemplate,a=s.useState(t.staticValue||Me),i=a[0],c=a[1];u(function(){c(t.value||t.staticValue||Me)},[t.value]);var f=l(function(){return z({},Ie,r)},[Ie,JSON.stringify(r)]);return t.isEditing?n(Be,{components:f,onUpdateValue:t.onUpdateValue,rawValue:i,tabsTemplate:o}):n(Ae,{components:f,mdast:i})},{fieldType:"IMA:MdxField"}),Ue=function(e){var t=e.components,r=e.onUpdateValue,o=e.value,a=e.isEditing,s=e.tabsTemplate,c=l(function(){return z({},Ie,t)},[Ie,t]);return a?n(i,{isEditing:a,children:n(Be,{components:c,onUpdateValue:r,rawValue:o,tabsTemplate:s})}):n(Ae,{components:c,mdast:o})},Be=function(e){var t=e.components,r=e.onUpdateValue,o=e.rawValue,a=e.tabsTemplate,i=s.lazy(function(){try{return Promise.resolve(import("./Editor-e30d9d26.js"))}catch(e){return Promise.reject(e)}}),c=s.useMemo(function(){return i},[]);return n(s.Suspense,{fallback:n("div",{children:"Loading..."}),children:n(c,{components:t,onUpdateValue:r,mode:"editAndPreview",mdast:o,tabsTemplate:a})})};export{xe as E,Je as M,Oe as P,Ue as U,z as _,be as u};
+//# sourceMappingURL=index-aa32301e.js.map
diff --git a/node_modules/@atsnek/jaen-fields-mdx/dist/index-aa32301e.js.map b/node_modules/@atsnek/jaen-fields-mdx/dist/index-aa32301e.js.map
new file mode 100644
index 0000000..a4f09d2
--- /dev/null
+++ b/node_modules/@atsnek/jaen-fields-mdx/dist/index-aa32301e.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"index-aa32301e.js","sources":["../../../node_modules/unist-util-is/lib/index.js","../../../node_modules/unist-util-visit-parents/lib/index.js","../src/MdxField/rehype-unwrap-images.tsx","../../../node_modules/unist-util-visit/lib/index.js","../../../node_modules/@ungap/structured-clone/esm/types.js","../../../node_modules/@ungap/structured-clone/esm/deserialize.js","../../../node_modules/@ungap/structured-clone/esm/serialize.js","../../../node_modules/@ungap/structured-clone/esm/index.js","../../../node_modules/unist-util-position/lib/index.js","../src/hast-util-sanitize-mdx/sanitize.ts","../src/MdxField/use-mdx.tsx","../src/rehype-sanitize-mdx/index.ts","../src/MdxField/components/ErrorFallback.tsx","../src/MdxField/components/StatsReporterError.tsx","../src/MdxField/components/PreviewComponent.tsx","../src/MdxField/components/Preview.tsx","../src/MdxField/default-components.tsx","../src/MdxField/default-data.ts","../src/MdxField/MdxField.tsx"],"sourcesContent":["/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","import {Element} from 'hast'\nimport {Plugin} from 'unified'\nimport {visit} from 'unist-util-visit'\n\nexport const rehypeUnwrapImages: Plugin<[]> = () => {\n  return tree => {\n    visit(tree as any, 'element', visitor)\n  }\n\n  function visitor(node: Element, _: number, parent: Element | undefined) {\n    if (node.tagName === 'img' && parent && parent.tagName === 'p') {\n      parent.tagName = 'div'\n    }\n  }\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","// @ts-nocheck\n\n/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n */\n\n/**\n * @typedef {[string, ...Array<Exclude<Properties[keyof Properties], Array<any>> | RegExp>] | string} PropertyDefinition\n *   Definition for a property.\n *\n * @typedef Schema\n *   Schema that defines what nodes and properties are allowed.\n *\n *   The default schema is `defaultSchema`, which follows how GitHub cleans.\n *   If any top-level key is missing in the given schema, the corresponding\n *   value of the default schema is used.\n *\n *   To extend the standard schema with a few changes, clone `defaultSchema`\n *   like so:\n *\n *   ```js\n *   import deepmerge from 'deepmerge'\n *   import {h} from 'hastscript'\n *   import {defaultSchema, sanitize} from 'hast-util-sanitize'\n *\n *   // This allows `className` on all elements.\n *   const schema = deepmerge(defaultSchema, {attributes: {'*': ['className']}})\n *\n *   const tree = sanitize(h('div', {className: ['foo']}), schema)\n *\n *   // `tree` still has `className`.\n *   console.log(tree)\n *   // {\n *   //   type: 'element',\n *   //   tagName: 'div',\n *   //   properties: {className: ['foo']},\n *   //   children: []\n *   // }\n *   ```\n * @property {boolean | null | undefined} [allowComments=false]\n *   Whether to allow comment nodes (default: `false`).\n *\n *   For example:\n *\n *   ```js\n *   allowComments: true\n *   ```\n * @property {boolean | null | undefined} [allowDoctypes=false]\n *   Whether to allow doctype nodes (default: `false`).\n *\n *   For example:\n *\n *   ```js\n *   allowDoctypes: true\n *   ```\n * @property {Record<string, Array<string>> | null | undefined} [ancestors]\n *   Map of tag names to a list of tag names which are required ancestors\n *   (default: `defaultSchema.ancestors`).\n *\n *   Elements with these tag names will be ignored if they occur outside of one\n *   of their allowed parents.\n *\n *   For example:\n *\n *   ```js\n *   ancestors: {\n *     tbody: ['table'],\n *     // …\n *     tr: ['table']\n *   }\n *   ```\n * @property {Record<string, Array<PropertyDefinition>> | null | undefined} [attributes]\n *   Map of tag names to allowed property names (default:\n *   `defaultSchema.attributes`).\n *\n *   The special key `'*'` as a tag name defines property names allowed on all\n *   elements.\n *\n *   The special value `'data*'` as a property name can be used to allow all\n *   `data` properties.\n *\n *   For example:\n *\n *   ```js\n *   attributes: {\n *     'ariaDescribedBy', 'ariaLabel', 'ariaLabelledBy', …, 'href'\n *     // …\n *     '*': [\n *       'abbr',\n *       'accept',\n *       'acceptCharset',\n *       // …\n *       'vAlign',\n *       'value',\n *       'width'\n *     ]\n *   }\n *   ```\n *\n *   Instead of a single string in the array, which allows any property value\n *   for the field, you can use an array to allow several values.\n *   For example, `input: ['type']` allows `type` set to any value on `input`s.\n *   But `input: [['type', 'checkbox', 'radio']]` allows `type` when set to\n *   `'checkbox'` or `'radio'`.\n *\n *   You can use regexes, so for example `span: [['className', /^hljs-/]]`\n *   allows any class that starts with `hljs-` on `span`s.\n *\n *   When comma- or space-separated values are used (such as `className`), each\n *   value in is checked individually.\n *   For example, to allow certain classes on `span`s for syntax highlighting,\n *   use `span: [['className', 'number', 'operator', 'token']]`.\n *   This will allow `'number'`, `'operator'`, and `'token'` classes, but drop\n *   others.\n * @property {Array<string> | null | undefined} [clobber]\n *   List of property names that clobber (default: `defaultSchema.clobber`).\n *\n *   For example:\n *\n *   ```js\n *   clobber: ['ariaDescribedBy', 'ariaLabelledBy', 'id', 'name']\n *   ```\n * @property {string | null | undefined} [clobberPrefix]\n *   Prefix to use before clobbering properties (default:\n *   `defaultSchema.clobberPrefix`).\n *\n *   For example:\n *\n *   ```js\n *   clobberPrefix: 'user-content-'\n *   ```\n * @property {Record<string, Array<string> | null | undefined> | null | undefined} [protocols]\n *   Map of *property names* to allowed protocols (default:\n *   `defaultSchema.protocols`).\n *\n *   This defines URLs that are always allowed to have local URLs (relative to\n *   the current website, such as `this`, `#this`, `/this`, or `?this`), and\n *   only allowed to have remote URLs (such as `https://example.com`) if they\n *   use a known protocol.\n *\n *   For example:\n *\n *   ```js\n *   protocols: {\n *     cite: ['http', 'https'],\n *     // …\n *     src: ['http', 'https']\n *   }\n *   ```\n * @property {Record<string, Record<string, Properties[keyof Properties]>> | null | undefined} [required]\n *   Map of tag names to required property names with a default value\n *   (default: `defaultSchema.required`).\n *\n *   This defines properties that must be set.\n *   If a field does not exist (after the element was made safe), these will be\n *   added with the given value.\n *\n *   For example:\n *\n *   ```js\n *   required: {\n *     input: {disabled: true, type: 'checkbox'}\n *   }\n *   ```\n *\n *   > 👉 **Note**: properties are first checked based on `schema.attributes`,\n *   > then on `schema.required`.\n *   > That means properties could be removed by `attributes` and then added\n *   > again with `required`.\n * @property {Array<string> | null | undefined} [strip]\n *   List of tag names to strip from the tree (default: `defaultSchema.strip`).\n *\n *   By default, unsafe elements (those not in `schema.tagNames`) are replaced\n *   by what they contain.\n *   This option can drop their contents.\n *\n *   For example:\n *\n *   ```js\n *   strip: ['script']\n *   ```\n * @property {Array<string> | null | undefined} [tagNames]\n *   List of allowed tag names (default: `defaultSchema.tagNames`).\n *\n *   For example:\n *\n *   ```js\n *   tagNames: [\n *     'a',\n *     'b',\n *     // …\n *     'ul',\n *     'var'\n *   ]\n *   ```\n *\n * @typedef State\n *   Info passed around.\n * @property {Readonly<Schema>} schema\n *   Schema.\n * @property {Array<string>} stack\n *   Tag names of ancestors.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {position} from 'unist-util-position'\nimport {defaultSchema} from 'hast-util-sanitize'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Sanitize a tree.\n *\n * @param {Readonly<Nodes>} node\n *   Unsafe tree.\n * @param {Readonly<Schema> | null | undefined} [options]\n *   Configuration (default: `defaultSchema`).\n * @returns {Nodes}\n *   New, safe tree.\n */\nexport function sanitize(node, options) {\n  /** @type {Nodes} */\n  let ctx = {type: 'root', children: []}\n\n  /** @type {State} */\n  const state = {\n    schema: options ? {...defaultSchema, ...options} : defaultSchema,\n    stack: []\n  }\n  const replace = transform(state, node)\n\n  if (replace) {\n    if (Array.isArray(replace)) {\n      if (replace.length === 1) {\n        ctx = replace[0]\n      } else {\n        ctx.children = replace\n      }\n    } else {\n      ctx = replace\n    }\n  }\n\n  return ctx\n}\n\n/**\n * Sanitize `node`.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<unknown>} node\n *   Unsafe node.\n * @returns {Array<ElementContent> | Nodes | undefined}\n *   Safe result.\n */\nfunction transform(state, node) {\n  if (node && typeof node === 'object') {\n    const unsafe = /** @type {Record<string, Readonly<unknown>>} */ node\n\n    const type = typeof unsafe.type === 'string' ? unsafe.type : ''\n\n    switch (type) {\n      case 'comment': {\n        return comment(state, unsafe)\n      }\n\n      case 'doctype': {\n        return doctype(state, unsafe)\n      }\n\n      case 'element': {\n        return element(state, unsafe)\n      }\n\n      case 'root': {\n        return root(state, unsafe)\n      }\n\n      case 'text': {\n        return text(state, unsafe)\n      }\n\n      case 'mdxJsxTextElement':\n      case 'mdxJsxFlowElement': {\n        return mdxJsxFlowElement(state, unsafe)\n      }\n\n      default:\n    }\n  }\n}\n\n/**\n * Make a safe comment.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe comment-like value.\n * @returns {Comment | undefined}\n *   Safe comment (if with `allowComments`).\n */\nfunction comment(state, unsafe) {\n  if (state.schema.allowComments) {\n    // See <https://html.spec.whatwg.org/multipage/parsing.html#serialising-html-fragments>\n    const result = typeof unsafe.value === 'string' ? unsafe.value : ''\n    const index = result.indexOf('-->')\n    const value = index < 0 ? result : result.slice(0, index)\n\n    /** @type {Comment} */\n    const node = {type: 'comment', value}\n\n    patch(node, unsafe)\n\n    return node\n  }\n}\n\n/**\n * Make a safe doctype.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe doctype-like value.\n * @returns {Doctype | undefined}\n *   Safe doctype (if with `allowDoctypes`).\n */\nfunction doctype(state, unsafe) {\n  if (state.schema.allowDoctypes) {\n    /** @type {Doctype} */\n    const node = {type: 'doctype'}\n\n    patch(node, unsafe)\n\n    return node\n  }\n}\n\n/**\n * Make a safe element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe element-like value.\n * @returns {Array<ElementContent> | Element | undefined}\n *   Safe element.\n */\nfunction element(state, unsafe) {\n  const name = typeof unsafe.tagName === 'string' ? unsafe.tagName : ''\n\n  state.stack.push(name)\n\n  const content = /** @type {Array<ElementContent>} */ children(\n    state,\n    unsafe.children\n  )\n\n  const props = properties(state, unsafe.properties)\n\n  state.stack.pop()\n\n  let safeElement = false\n\n  if (\n    name &&\n    name !== '*' &&\n    (!state.schema.tagNames || state.schema.tagNames.includes(name))\n  ) {\n    safeElement = true\n\n    // Some nodes can break out of their context if they don’t have a certain\n    // ancestor.\n    if (state.schema.ancestors && own.call(state.schema.ancestors, name)) {\n      const ancestors = state.schema.ancestors[name]\n      let index = -1\n\n      safeElement = false\n\n      while (++index < ancestors.length) {\n        if (state.stack.includes(ancestors[index])) {\n          safeElement = true\n        }\n      }\n    }\n  }\n\n  if (!safeElement) {\n    return state.schema.strip && !state.schema.strip.includes(name)\n      ? content\n      : undefined\n  }\n\n  /** @type {Element} */\n  const node = {\n    type: 'element',\n    tagName: name,\n    properties: props,\n    children: content\n  }\n\n  patch(node, unsafe)\n\n  return node\n}\n\n/**\n * Make a safe mdxJsxFlowElement.\n *\n * @param {State} state\n *  Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>} unsafe\n * Unsafe mdxJsxFlowElement-like value.\n * @returns {Array<ElementContent> | Element | undefined}\n * Safe element.\n */\nfunction mdxJsxFlowElement(state, unsafe) {\n  const name = typeof unsafe.name === 'string' ? unsafe.name : ''\n\n  state.stack.push(name)\n\n  const content = /** @type {Array<ElementContent>} */ children(\n    state,\n    unsafe.children\n  )\n\n  const props = properties(state, unsafe.attributes)\n\n  state.stack.pop()\n\n  let safeElement = false\n\n  if (\n    name &&\n    name !== '*' &&\n    (!state.schema.tagNames || state.schema.tagNames.includes(name))\n  ) {\n    safeElement = true\n\n    // Some nodes can break out of their context if they don’t have a certain\n    // ancestor.\n    if (state.schema.ancestors && own.call(state.schema.ancestors, name)) {\n      const ancestors = state.schema.ancestors[name]\n      let index = -1\n\n      safeElement = false\n\n      while (++index < ancestors.length) {\n        if (state.stack.includes(ancestors[index])) {\n          safeElement = true\n        }\n      }\n    }\n  }\n\n  if (!safeElement) {\n    return state.schema.strip && !state.schema.strip.includes(name)\n      ? content\n      : undefined\n  }\n\n  /** @type {Element} */\n  const node = {\n    type: 'element',\n    tagName: name,\n    properties: props,\n    children: content\n  }\n\n  patch(node, unsafe)\n\n  return node\n}\n\n/**\n * Make a safe root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe root-like value.\n * @returns {Root}\n *   Safe root.\n */\nfunction root(state, unsafe) {\n  const content = /** @type {Array<RootContent>} */ children(\n    state,\n    unsafe.children\n  )\n\n  /** @type {Root} */\n  const node = {type: 'root', children: content}\n\n  patch(node, unsafe)\n\n  return node\n}\n\n/**\n * Make a safe text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe text-like value.\n * @returns {Text}\n *   Safe text.\n */\nfunction text(_, unsafe) {\n  const value = typeof unsafe.value === 'string' ? unsafe.value : ''\n  /** @type {Text} */\n  const node = {type: 'text', value}\n\n  patch(node, unsafe)\n\n  return node\n}\n\n/**\n * Make children safe.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<unknown>} children\n *   Unsafe value.\n * @returns {Array<Nodes>}\n *   Safe children.\n */\nfunction children(state, children) {\n  /** @type {Array<Nodes>} */\n  const results = []\n\n  if (Array.isArray(children)) {\n    const childrenUnknown = /** @type {Array<Readonly<unknown>>} */ children\n    let index = -1\n\n    while (++index < childrenUnknown.length) {\n      const value = transform(state, childrenUnknown[index])\n\n      if (value) {\n        if (Array.isArray(value)) {\n          results.push(...value)\n        } else {\n          results.push(value)\n        }\n      }\n    }\n  }\n\n  return results\n}\n\n/**\n * Make element properties safe.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<unknown>} properties\n *   Unsafe value.\n * @returns {Properties}\n *   Safe value.\n */\nfunction properties(state, properties) {\n  const tagName = state.stack[state.stack.length - 1]\n  const attributes = state.schema.attributes\n  const required = state.schema.required\n  const specific =\n    attributes && own.call(attributes, tagName)\n      ? attributes[tagName]\n      : undefined\n  const defaults =\n    attributes && own.call(attributes, '*') ? attributes['*'] : undefined\n  const props =\n    /** @type {Readonly<Record<string, Readonly<unknown>>>} */ properties &&\n    typeof properties === 'object'\n      ? Array.isArray(properties)\n        ? // Reduce to an object.\n          properties.reduce((acc, prop) => {\n            if (prop.type === 'mdxJsxAttribute') {\n              if (prop.value?.type === 'mdxJsxAttributeValueExpression') {\n                acc[prop.name] = prop.value\n              } else {\n                // Use `true` for boolean attributes. When prop={null} is passed, it’s\n                // is a of type `mdxJsxAttributeValueExpression` with value `null`.\n\n                if (prop.value === null) {\n                  acc[prop.name] = true\n                } else {\n                  acc[prop.name] = prop.value\n                }\n              }\n            }\n            return acc\n          }, {})\n        : properties\n      : {}\n\n  /** @type {Properties} */\n  const result = {}\n  /** @type {string} */\n  let key\n\n  for (key in props) {\n    if (own.call(props, key)) {\n      const unsafe = props[key]\n\n      let safe = propertyValue(\n        state,\n        findDefinition(specific, key),\n        key,\n        unsafe\n      )\n\n      if (safe === null || safe === undefined) {\n        safe = propertyValue(state, findDefinition(defaults, key), key, unsafe)\n      }\n\n      if (safe !== null && safe !== undefined) {\n        result[key] = safe\n      }\n    }\n  }\n\n  if (required && own.call(required, tagName)) {\n    const properties = required[tagName]\n\n    for (key in properties) {\n      if (own.call(properties, key) && !own.call(result, key)) {\n        result[key] = properties[key]\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Sanitize a property value.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<PropertyDefinition> | undefined} definition\n *   Definition.\n * @param {string} key\n *   Field name.\n * @param {Readonly<unknown>} value\n *   Unsafe value (but an array).\n * @returns {Array<number | string> | boolean | number | string | undefined}\n *   Safe value.\n */\nfunction propertyValue(state, definition, key, value) {\n  return definition\n    ? Array.isArray(value)\n      ? propertyValueMany(state, definition, key, value)\n      : propertyValuePrimitive(state, definition, key, value)\n    : undefined\n}\n\n/**\n * Sanitize a property value which is a list.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<PropertyDefinition>} definition\n *   Definition.\n * @param {string} key\n *   Field name.\n * @param {Readonly<Array<Readonly<unknown>>>} values\n *   Unsafe value (but an array).\n * @returns {Array<number | string>}\n *   Safe value.\n */\nfunction propertyValueMany(state, definition, key, values) {\n  let index = -1\n  /** @type {Array<number | string>} */\n  const result = []\n\n  while (++index < values.length) {\n    const value = propertyValuePrimitive(state, definition, key, values[index])\n\n    if (typeof value === 'number' || typeof value === 'string') {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Sanitize a property value which is a primitive.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<PropertyDefinition>} definition\n *   Definition.\n * @param {string} key\n *   Field name.\n * @param {Readonly<unknown>} value\n *   Unsafe value (but not an array).\n * @returns {boolean | number | string | undefined}\n *   Safe value.\n */\nfunction propertyValuePrimitive(state, definition, key, value) {\n  if (value?.type === 'mdxJsxAttributeValueExpression') {\n    if (value.value === 'undefined') {\n      return propertyValuePrimitive(state, definition, key, undefined)\n    } else if (value.value === 'true') {\n      return propertyValuePrimitive(state, definition, key, true)\n    } else if (value.value === 'false') {\n      return propertyValuePrimitive(state, definition, key, undefined)\n    } else {\n      return propertyValuePrimitive(state, definition, key, value.value)\n    }\n  }\n\n  if (\n    typeof value !== 'boolean' &&\n    typeof value !== 'number' &&\n    typeof value !== 'string'\n  ) {\n    return\n  }\n\n  if (!safeProtocol(state, key, value)) {\n    return\n  }\n\n  // Just a string, or only one item in an array, means all values are OK.\n  // More than one item means an allow list.\n  if (typeof definition === 'object' && definition.length > 1) {\n    let ok = false\n    let index = 0 // Ignore `key`, which is the first item.\n\n    while (++index < definition.length) {\n      const allowed = definition[index]\n\n      // Expression.\n      if (allowed && typeof allowed === 'object' && 'flags' in allowed) {\n        if (allowed.test(String(value))) {\n          ok = true\n          break\n        }\n      }\n      // Primitive.\n      else if (allowed === value) {\n        ok = true\n        break\n      }\n    }\n\n    if (!ok) return\n  }\n\n  return state.schema.clobber &&\n    state.schema.clobberPrefix &&\n    state.schema.clobber.includes(key)\n    ? state.schema.clobberPrefix + value\n    : value\n}\n\n/**\n * Check whether `value` is a safe URL.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} key\n *   Field name.\n * @param {Readonly<unknown>} value\n *   Unsafe value.\n * @returns {boolean}\n *   Whether it’s a safe value.\n */\nfunction safeProtocol(state, key, value) {\n  const protocols =\n    state.schema.protocols && own.call(state.schema.protocols, key)\n      ? state.schema.protocols[key]\n      : undefined\n\n  // No protocols defined? Then everything is fine.\n  if (!protocols || protocols.length === 0) {\n    return true\n  }\n\n  const url = String(value)\n  const colon = url.indexOf(':')\n  const questionMark = url.indexOf('?')\n  const numberSign = url.indexOf('#')\n  const slash = url.indexOf('/')\n\n  if (\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign)\n  ) {\n    return true\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length) === protocol\n    ) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Add data and position.\n *\n * @param {Nodes} node\n *   Node to patch safe data and position on.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe node-like value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(node, unsafe) {\n  const cleanPosition = position(\n    // @ts-expect-error: looks like a node.\n    unsafe\n  )\n\n  if (unsafe.data) {\n    node.data = structuredClone(unsafe.data)\n  }\n\n  if (cleanPosition) node.position = cleanPosition\n}\n\n/**\n *\n * @param {Readonly<Array<PropertyDefinition>> | undefined} definitions\n * @param {string} key\n * @returns {Readonly<PropertyDefinition> | undefined}\n */\nfunction findDefinition(definitions, key) {\n  /** @type {PropertyDefinition | undefined} */\n  let dataDefault\n  let index = -1\n\n  if (definitions) {\n    while (++index < definitions.length) {\n      const entry = definitions[index]\n      const name = typeof entry === 'string' ? entry : entry[0]\n\n      if (name === key) {\n        return entry\n      }\n\n      if (name === 'data*') dataDefault = entry\n\n      if (name === '*') return entry\n    }\n  }\n\n  if (key.length > 4 && key.slice(0, 4).toLowerCase() === 'data') {\n    return dataDefault\n  }\n}\n","import {evaluateSync} from '@mdx-js/mdx'\nimport {useDebounceFn} from 'ahooks'\nimport {frontmatterToMarkdown} from 'mdast-util-frontmatter'\nimport {gfmToMarkdown} from 'mdast-util-gfm'\nimport {mathToMarkdown} from 'mdast-util-math'\nimport {mdxToMarkdown} from 'mdast-util-mdx'\nimport {useEffect, useState} from 'react'\nimport * as runtime from 'react/jsx-runtime'\nimport rehypeSlug from 'rehype-slug-custom-id'\nimport rehypeMdxCodeProps from 'rehype-mdx-code-props'\nimport {rehypeUnwrapImages} from './rehype-unwrap-images'\nimport rehypeMathjax from 'rehype-mathjax/svg'\n\nimport {directiveToMarkdown} from 'mdast-util-directive'\nimport remarkDirective from 'remark-directive'\nimport remarkFrontmatter from 'remark-frontmatter'\nimport remarkGfm from 'remark-gfm'\nimport remarkMath from 'remark-math'\nimport {VFile} from 'vfile'\nimport {VFileMessage} from 'vfile-message'\n\nimport {toMarkdown} from 'mdast-util-to-markdown'\n\nimport {MdastRoot} from './components/types.js'\n\nimport rehypeSanitize from '../rehype-sanitize-mdx/index.js'\n\nconst parseMdast = (tree: MdastRoot) => {\n  const out = toMarkdown(tree as any, {\n    extensions: [\n      mdxToMarkdown(),\n      gfmToMarkdown(),\n      mathToMarkdown(),\n      directiveToMarkdown,\n      frontmatterToMarkdown()\n    ] as any\n  })\n\n  return out\n}\n\nfunction createFile(value: string) {\n  return new VFile({basename: 'example.mdx', value})\n}\n\nfunction evaluateFile(file: VFile, components: {[key: string]: any}) {\n  const capture = (name: string) => () => (tree: any) => {\n    file.data[name] = tree\n  }\n\n  try {\n    file.result = evaluateSync(file as any, {\n      ...(runtime as any),\n      development: false,\n\n      useDynamicImport: true,\n      remarkPlugins: [\n        remarkGfm,\n        remarkFrontmatter,\n        remarkMath,\n        remarkDirective,\n        capture('mdast')\n      ],\n      rehypePlugins: [\n        rehypeSlug,\n        rehypeUnwrapImages,\n        rehypeSanitize(Object.keys(components)),\n        [\n          rehypeMdxCodeProps,\n          {\n            tagName: 'code'\n          }\n        ],\n        rehypeMathjax\n      ],\n      recmaPlugins: []\n    }).default\n  } catch (error) {\n    const message =\n      error instanceof VFileMessage ? error : new VFileMessage(error)\n\n    if (!file.messages.includes(message as any)) {\n      file.messages.push(message as any)\n    }\n\n    message.fatal = true\n  }\n}\ninterface Defaults {\n  gfm: boolean\n  frontmatter: boolean\n  math: boolean\n  directive: boolean\n  mdast?: MdastRoot\n}\nconst initializeState = (\n  defaults: Defaults,\n  components: {\n    [key: string]: any\n  } = {}\n) => {\n  const markdown = defaults.mdast ? parseMdast(defaults.mdast) : ''\n\n  const file = createFile(markdown)\n\n  evaluateFile(file, components)\n\n  return {\n    ...defaults,\n    value: markdown,\n    file\n  }\n}\n\nexport function useMdx(\n  defaults: Defaults,\n  live: boolean = false,\n  components: {\n    [key: string]: any\n  } = {}\n) {\n  const [state, setState] = useState(() =>\n    initializeState(defaults, components)\n  )\n\n  useEffect(() => {\n    if (live) {\n      setState(initializeState(defaults, components))\n    }\n  }, [defaults, live])\n\n  const {run: setConfig} = useDebounceFn(\n    async config => {\n      const file = createFile(config.value)\n\n      evaluateFile(file, components)\n\n      setState({...config, file})\n    },\n    {leading: true, trailing: true, wait: 200}\n  )\n\n  return [state, setConfig]\n}\n","import deepmerge from 'deepmerge'\nimport {Root} from 'hast'\nimport {defaultSchema, sanitize} from '../hast-util-sanitize-mdx'\n\n/**\n * Sanitize HTML.\n */\nexport default function rehypeSanitize(componentsNames: string[] = []) {\n  return () => {\n    const allowAllAttributes = componentsNames.reduce<{\n      [key: string]: string[]\n    }>((acc, componentName) => {\n      acc[componentName] = ['*']\n      return acc\n    }, {})\n\n    const schema = deepmerge(defaultSchema, {\n      tagNames: componentsNames,\n      attributes: {\n        '*': ['className'],\n        // Allow rehype-mathjax classes.\n        code: [['className', /^language-./, 'math-inline', 'math-display']],\n        // Allow all attributes for components. The security of the components is the responsibility of the user.\n        ...allowAllAttributes\n      },\n      clobberPrefix: ''\n    })\n\n    return function (tree: Root) {\n      const result = sanitize(tree, schema) as Root\n\n      return result\n    }\n  }\n}\n","import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertTitle,\n  Button\n} from '@chakra-ui/react'\nimport React from 'react'\n\nexport const ErrorFallback: React.FC<{\n  error: Error\n  resetErrorBoundary: () => void\n}> = ({error, resetErrorBoundary}) => {\n  return (\n    <Alert status=\"error\">\n      <AlertIcon />\n      <AlertTitle>Something went wrong</AlertTitle>\n      <AlertDescription>\n        <pre>{error.message}</pre>\n\n        <Button onClick={resetErrorBoundary}>Try again</Button>\n      </AlertDescription>\n    </Alert>\n  )\n}\n","import type {VFile} from 'vfile'\nimport {Statistics} from 'vfile-statistics'\n\nexport const StatsErrorReporter: React.FC<{\n  stats: Statistics\n  state: any\n}> = ({stats, state}) => {\n  const vfileReporter = (file: VFile) => {\n    return JSON.stringify(file.messages, null, 2)\n  }\n\n  return (\n    <>\n      {stats.fatal || stats.warn ? (\n        <pre>\n          <code>{vfileReporter(state.file)}</code>\n        </pre>\n      ) : null}\n    </>\n  )\n}\n\nexport default StatsErrorReporter\n","import React, {useEffect, useState} from 'react'\nimport {ErrorBoundary} from 'react-error-boundary'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport {VFileMessage} from 'vfile-message'\nimport {Statistics} from 'vfile-statistics'\n\nimport {ErrorFallback} from './ErrorFallback.js'\nimport {BaseEditorProps} from './types.js'\n\nimport {Stack} from '@chakra-ui/react'\nimport StatsReporterError from './StatsReporterError.js'\n\nconst FallbackComponent: React.FC<{error: Error}> = ({error}) => {\n  const message = new VFileMessage(error)\n  message.fatal = true\n  return (\n    <pre>\n      <code>{String(message)}</code>\n    </pre>\n  )\n}\n\nexport interface PreviewComponentProps {\n  state: any\n  stats: Statistics\n  components: BaseEditorProps['components']\n}\n\nconst processContent = ({\n  state,\n  components\n}: {\n  state: PreviewComponentProps['state']\n  components: PreviewComponentProps['components']\n}) => {\n  try {\n    // check if state.file.result is a functio, if not throw error\n\n    if (typeof state.file.result !== 'function') {\n      console.error(state)\n      throw new Error(`Preview could not be generated.`)\n    }\n\n    return state.file.result({\n      components: {\n        code: ({className, ...props}: any) => {\n          const match = /language-(\\w+)/.exec(className || '')\n          return match ? (\n            <SyntaxHighlighter language={match[1]} PreTag=\"div\" {...props} />\n          ) : (\n            <code className={className} {...props} />\n          )\n        },\n        ...components,\n        wrapper: ({children}: any) => {\n          const Wrapper = components?.wrapper\n          const el = (\n            <Stack\n              w=\"full\"\n              sx={{\n                'mjx-container': {\n                  display: 'inline-block !important',\n                  verticalAlign: 'text-bottom !important'\n                }\n              }}>\n              {children}\n            </Stack>\n          )\n\n          if (Wrapper) {\n            return <Wrapper>{el}</Wrapper>\n          }\n\n          return el\n        }\n      }\n    })\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const PreviewComponent: React.FC<PreviewComponentProps> = React.memo(\n  ({state, stats, components}) => {\n    const [content, setContent] = useState<React.ReactNode>(() =>\n      processContent({state, components})\n    )\n    const [error, setError] = useState<Error | null>(null)\n\n    useEffect(() => {\n      async function processState() {\n        try {\n          const result = await processContent({\n            state,\n            components\n          })\n          setContent(result)\n          setError(null)\n        } catch (error) {\n          setError(error)\n        }\n      }\n\n      processState()\n    }, [state.file?.value, components])\n\n    return (\n      <ErrorBoundary FallbackComponent={ErrorFallback}>\n        <noscript>Enable JavaScript for the rendered result.</noscript>\n\n        {state.file?.result && <>{content}</>}\n\n        {error && <FallbackComponent error={error} />}\n\n        <StatsReporterError state={state} stats={stats} />\n      </ErrorBoundary>\n    )\n  }\n)\n","import {BaseEditorProps, MdastRoot} from './types.js'\n// @ts-nocheck\nimport React, {useMemo} from 'react'\nimport {Statistics, statistics} from 'vfile-statistics'\n\nimport {useMdx} from '../use-mdx.js'\nimport {PreviewComponent} from './PreviewComponent'\n\nexport interface BuildEditorProps {\n  components: BaseEditorProps['components']\n\n  mdast?: MdastRoot\n}\n\nexport const Preview = React.memo<BuildEditorProps>(({components, mdast}) => {\n  const defaults = useMemo(\n    () => ({\n      gfm: true,\n      frontmatter: true,\n      math: true,\n      directive: true,\n      mdast\n    }),\n    [mdast]\n  )\n\n  const [state, _] = useMdx(defaults, true, components) as any\n\n  const stats = useMemo(() => {\n    return state.file ? statistics(state.file) : ({} as Statistics)\n  }, [state.file])\n\n  // useEffect(() => {\n  //   console.log('useEffect', defaultValue)\n  //   setConfig({value: defaultValue})\n  // }, [defaultValue, setConfig])\n\n  return (\n    <PreviewComponent state={state} stats={stats} components={components} />\n  )\n})\n","import {Box, Link as ChakraLink, LinkProps} from '@chakra-ui/react'\nimport {Link as GatsbyLink} from 'gatsby'\nimport {Field} from '@atsnek/jaen'\n\nexport const Image = ({name, defaultValue, alt, ...rest}: any) => {\n  return (\n    <Box {...rest}>\n      <Field.Image name={name} defaultValue={defaultValue} alt={alt} />\n    </Box>\n  )\n}\n\nImage.defaultProps = {\n  name: () => `image-${(Math.random() + 1).toString(36).substring(7)}`,\n  alt: 'Placeholder Image Alt',\n  defaultValue: 'https://via.placeholder.com/150'\n}\n\nconst linkProps: LinkProps = {\n  position: 'relative',\n  color: 'brand.600',\n  textDecoration: 'none',\n  w: 'fit-content',\n  _hover: {\n    color: 'brand.600',\n    _before: {\n      transform: 'scaleX(1)'\n    }\n  },\n  _before: {\n    content: '\"\"',\n    position: 'absolute',\n    display: 'block',\n    width: '100%',\n    height: '2px',\n    bottom: -0.5,\n    left: 0,\n    backgroundColor: 'brand.600',\n    transform: 'scaleX(0)',\n    transformOrigin: 'top left',\n    transition: 'transform 0.3s ease'\n  }\n}\n\nexport const Link: React.FC<{\n  to: string\n  isExternal?: boolean\n  children: React.ReactNode\n}> = ({to, children, ...props}) => {\n  const isExternal =\n    props.isExternal !== undefined\n      ? props.isExternal\n      : to.startsWith('http://') || to.startsWith('https://')\n\n  if (isExternal) {\n    return (\n      <ChakraLink href={to} isExternal {...linkProps}>\n        {children}\n      </ChakraLink>\n    )\n  }\n\n  return (\n    <ChakraLink as={GatsbyLink} to={to} {...linkProps}>\n      {children}\n    </ChakraLink>\n  )\n}\n\nLink.defaultProps = {\n  to: '/',\n  children: 'My Link'\n}\n","import {MdastRoot} from './components/types.js'\n\nexport const defaultData = {\n  type: 'root',\n  children: [\n    {\n      type: 'heading',\n      depth: 1,\n      children: [\n        {\n          type: 'text',\n          value: 'Hello, world!',\n          position: {\n            start: {\n              line: 1,\n              column: 3,\n              offset: 2\n            },\n            end: {\n              line: 1,\n              column: 16,\n              offset: 15\n            }\n          }\n        }\n      ],\n      position: {\n        start: {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n        end: {\n          line: 1,\n          column: 16,\n          offset: 15\n        }\n      }\n    },\n    {\n      type: 'paragraph',\n      children: [\n        {\n          type: 'text',\n          value: '// This is a ',\n          position: {\n            start: {\n              line: 3,\n              column: 1,\n              offset: 17\n            },\n            end: {\n              line: 3,\n              column: 14,\n              offset: 30\n            }\n          }\n        },\n        {\n          type: 'strong',\n          children: [\n            {\n              type: 'text',\n              value: 'jaen',\n              position: {\n                start: {\n                  line: 3,\n                  column: 16,\n                  offset: 32\n                },\n                end: {\n                  line: 3,\n                  column: 20,\n                  offset: 36\n                }\n              }\n            }\n          ],\n          position: {\n            start: {\n              line: 3,\n              column: 14,\n              offset: 30\n            },\n            end: {\n              line: 3,\n              column: 22,\n              offset: 38\n            }\n          }\n        },\n        {\n          type: 'text',\n          value: ' MDX field.',\n          position: {\n            start: {\n              line: 3,\n              column: 22,\n              offset: 38\n            },\n            end: {\n              line: 3,\n              column: 33,\n              offset: 49\n            }\n          }\n        }\n      ],\n      position: {\n        start: {\n          line: 3,\n          column: 1,\n          offset: 17\n        },\n        end: {\n          line: 3,\n          column: 33,\n          offset: 49\n        }\n      }\n    },\n    {\n      type: 'paragraph',\n      children: [\n        {\n          type: 'text',\n          value: '// ## Usage',\n          position: {\n            start: {\n              line: 5,\n              column: 1,\n              offset: 51\n            },\n            end: {\n              line: 5,\n              column: 12,\n              offset: 62\n            }\n          }\n        }\n      ],\n      position: {\n        start: {\n          line: 5,\n          column: 1,\n          offset: 51\n        },\n        end: {\n          line: 5,\n          column: 12,\n          offset: 62\n        }\n      }\n    },\n    {\n      type: 'paragraph',\n      children: [\n        {\n          type: 'text',\n          value: '// You can use this field to write markdown content.\\n//',\n          position: {\n            start: {\n              line: 7,\n              column: 1,\n              offset: 64\n            },\n            end: {\n              line: 8,\n              column: 3,\n              offset: 119\n            }\n          }\n        }\n      ],\n      position: {\n        start: {\n          line: 7,\n          column: 1,\n          offset: 64\n        },\n        end: {\n          line: 8,\n          column: 4,\n          offset: 120\n        }\n      }\n    }\n  ],\n  position: {\n    start: {\n      line: 1,\n      column: 1,\n      offset: 0\n    },\n    end: {\n      line: 15,\n      column: 8,\n      offset: 228\n    }\n  }\n} as MdastRoot\n","import {connectField, EditingProvider} from '@atsnek/jaen'\nimport React, {useEffect, useMemo} from 'react'\n\nimport {Preview} from './components/Preview.js'\nimport {BaseEditorProps, MdastRoot} from './components/types.js'\n\nimport {Image, Link} from './default-components.js'\nimport {defaultData} from './default-data.js'\n\nimport { TabsProps } from './components/TabsTemplate.js'\ntype MdxFieldValue = MdastRoot\n\nconst baseComponents = {\n  Image,\n  Link,\n  a: (props: any) => {\n    return <Link to={props.href}>{props.children}</Link>\n  },\n  img: (props: any) => {\n    const src = props.src\n    const alt = props.alt\n\n    const name = `${src}-${alt}`\n\n    return <Image name={name} defaultValue={src} alt={alt} />\n  }\n}\n\nexport interface MdxFieldProps {\n  components: BaseEditorProps['components']\n  tabsTemplate?: React.FC<TabsProps> // Ensure this is React.FC<TabsProps>\n}\n\nexport const MdxField = connectField<MdxFieldValue, MdxFieldProps>(\n  ({jaenField, components, tabsTemplate}) => {\n    const [rawValue, setRawValue] = React.useState<MdastRoot | undefined>(\n      jaenField.staticValue || defaultData\n    )\n\n    useEffect(() => {\n      setRawValue(jaenField.value || jaenField.staticValue || defaultData)\n    }, [jaenField.value])\n\n    const combinedComponents = useMemo(() => {\n      return {\n        ...baseComponents,\n        ...components\n      }\n    }, [baseComponents, JSON.stringify(components)])\n\n    if (jaenField.isEditing) {\n      // Render editor in edit mode\n\n      return (\n        <LayzEditor\n          components={combinedComponents}\n          onUpdateValue={jaenField.onUpdateValue}\n          rawValue={rawValue}\n          tabsTemplate={tabsTemplate} // Pass tabsTemplate to LayzEditor\n        />\n      )\n    } else {\n      return <Preview components={combinedComponents} mdast={rawValue} />\n    }\n  },\n  {\n    fieldType: 'IMA:MdxField'\n  }\n)\n\nexport const UncontrolledMdxField: React.FC<{\n  components: BaseEditorProps['components']\n  onUpdateValue: (value: MdastRoot) => void\n  value?: MdastRoot\n  isEditing?: boolean\n  tabsTemplate?: React.FC<TabsProps> // Ensure this is React.FC<TabsProps>\n}> = ({components, onUpdateValue, value, isEditing, tabsTemplate}) => {\n  const combinedComponents = useMemo(() => {\n    return {\n      ...baseComponents,\n      ...components\n    }\n  }, [baseComponents, components])\n\n  if (isEditing) {\n    // Render editor in edit mode\n\n    return (\n      <EditingProvider isEditing={isEditing}>\n        <LayzEditor\n          components={combinedComponents}\n          onUpdateValue={onUpdateValue}\n          rawValue={value}\n          tabsTemplate={tabsTemplate} // Pass tabsTemplate to LayzEditor\n        />\n      </EditingProvider>\n    )\n  } else {\n    return <Preview components={combinedComponents} mdast={value} />\n  }\n}\n\nconst LayzEditor: React.FC<{\n  components: BaseEditorProps['components']\n  onUpdateValue: (value: MdastRoot) => void\n  rawValue?: MdastRoot\n  tabsTemplate?: BaseEditorProps['tabsTemplate'] // Ensure this is React.FC<TabsProps>\n}> = ({components, onUpdateValue, rawValue, tabsTemplate}) => {\n  const Editor = React.lazy(async () => await import('./components/Editor.js'))\n\n  const MemoedEditor = React.useMemo(() => Editor, [])\n\n  return (\n    <React.Suspense fallback={<div>Loading...</div>}>\n      <MemoedEditor\n        components={components}\n        onUpdateValue={onUpdateValue}\n        mode=\"editAndPreview\"\n        mdast={rawValue}\n        tabsTemplate={tabsTemplate} // Pass tabsTemplate to Editor\n      />\n    </React.Suspense>\n  )\n}\n"],"names":["convert","test","ok","castFactory","Array","isArray","tests","checks","index","length","parameters","apply","this","anyFactory","check","checkAsRecord","node","nodeAsRecord","key","propsFactory","type","Error","testFunction","value","parent","Boolean","looksLikeANode","call","undefined","empty","EXIT","rehypeUnwrapImages","tree","testOrVisitor","visitorOrReverse","maybeReverse","reverse","visitor","visit","is","factory","parents","name","tagName","Object","defineProperty","subresult","offset","grandparents","result","toResult","children","nodeAsParent","concat","visitParents","indexOf","_","env","self","globalThis","deserialize","serialized","$","as","out","set","unpair","has","get","arr","push","object","Date","source","flags","RegExp","map","Map","Set","add","message","BigInt","deserializer","EMPTY","toString","keys","typeOf","asString","slice","includes","shouldSkip","TYPE","serialize","json","lossy","strict","pair","entry","TypeError","valueOf","toJSON","entries","toISOString","serializer","structuredClone$1","structuredClone","any","options","pointEnd","point","pointStart","position","line","column","own","hasOwnProperty","transform","state","unsafe","schema","allowComments","patch","comment","allowDoctypes","doctype","stack","content","props","properties","pop","safeElement","tagNames","ancestors","strip","element","root","text","attributes","mdxJsxFlowElement","results","childrenUnknown","required","specific","defaults","reduce","acc","prop","_prop$value","safe","propertyValue","findDefinition","definition","values","propertyValuePrimitive","propertyValueMany","protocols","url","String","colon","questionMark","numberSign","slash","protocol","safeProtocol","allowed","clobber","clobberPrefix","cleanPosition","start","end","data","definitions","dataDefault","toLowerCase","createFile","VFile","basename","evaluateFile","file","components","componentsNames","evaluateSync","_extends","runtime","development","useDynamicImport","remarkPlugins","remarkGfm","remarkFrontmatter","remarkMath","remarkDirective","rehypePlugins","rehypeSlug","allowAllAttributes","componentName","deepmerge","defaultSchema","code","ctx","replace","rehypeMdxCodeProps","rehypeMathjax","recmaPlugins","error","VFileMessage","messages","fatal","initializeState","markdown","mdast","toMarkdown","extensions","mdxToMarkdown","gfmToMarkdown","mathToMarkdown","directiveToMarkdown","frontmatterToMarkdown","useMdx","live","_useState","useState","setState","useEffect","useDebounceFn","config","Promise","resolve","e","reject","leading","trailing","wait","run","ErrorFallback","_ref","resetErrorBoundary","_jsxs","Alert","status","_jsx","AlertIcon","AlertTitle","AlertDescription","Button","onClick","StatsErrorReporter","stats","_Fragment","warn","JSON","stringify","FallbackComponent","processContent","_ref2","console","_ref3","className","_objectWithoutPropertiesLoose","_excluded","match","exec","SyntaxHighlighter","language","PreTag","wrapper","_ref4","Wrapper","el","Stack","w","sx","display","verticalAlign","PreviewComponent","React","memo","_ref5","_state$file","_state$file2","setContent","_useState2","setError","_temp","then","_catch","processState","ErrorBoundary","StatsReporterError","Preview","useMemo","gfm","frontmatter","math","directive","statistics","Image","defaultValue","alt","rest","Box","Field","defaultProps","Math","random","substring","linkProps","color","textDecoration","_hover","_before","width","height","bottom","left","backgroundColor","transformOrigin","transition","Link","to","_excluded2","isExternal","startsWith","ChakraLink","href","GatsbyLink","defaultData","depth","baseComponents","a","img","src","MdxField","connectField","jaenField","tabsTemplate","_React$useState","staticValue","rawValue","setRawValue","combinedComponents","isEditing","LayzEditor","onUpdateValue","fieldType","UncontrolledMdxField","EditingProvider","Editor","lazy","import","MemoedEditor","Suspense","fallback","mode"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@atsnek/jaen-fields-mdx/dist/index-c7899b5b.js b/node_modules/@atsnek/jaen-fields-mdx/dist/index-c7899b5b.js
deleted file mode 100644
index 1078bb0..0000000
--- a/node_modules/@atsnek/jaen-fields-mdx/dist/index-c7899b5b.js
+++ /dev/null
@@ -1,2 +0,0 @@
-var e=require("react/jsx-runtime"),t=require("@atsnek/jaen"),r=require("react"),n=require("vfile-statistics"),a=require("@mdx-js/mdx"),o=require("ahooks"),s=require("mdast-util-frontmatter"),i=require("mdast-util-gfm"),c=require("mdast-util-math"),l=require("mdast-util-mdx"),u=require("rehype-slug-custom-id"),f=require("rehype-mdx-code-props"),d=require("rehype-mathjax/svg"),m=require("mdast-util-directive"),p=require("remark-directive"),h=require("remark-frontmatter"),v=require("remark-gfm"),g=require("remark-math"),y=require("vfile"),b=require("vfile-message"),x=require("mdast-util-to-markdown"),j=require("deepmerge"),w=require("react-error-boundary"),k=require("react-syntax-highlighter"),q=require("@chakra-ui/react"),N=require("gatsby");function S(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function O(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach(function(r){if("default"!==r){var n=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,n.get?n:{enumerable:!0,get:function(){return e[r]}})}}),t.default=e,t}var P=/*#__PURE__*/O(e),M=/*#__PURE__*/S(r),A=/*#__PURE__*/S(u),E=/*#__PURE__*/S(f),V=/*#__PURE__*/S(d),F=/*#__PURE__*/S(p),T=/*#__PURE__*/S(h),B=/*#__PURE__*/S(v),D=/*#__PURE__*/S(g),I=/*#__PURE__*/S(j),L=/*#__PURE__*/S(k);function J(){return J=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},J.apply(this,arguments)}function C(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t.indexOf(r=o[n])>=0||(a[r]=e[r]);return a}const U=function(e){if(null==e)return z;if("function"==typeof e)return _(e);if("object"==typeof e)return Array.isArray(e)?function(e){const t=[];let r=-1;for(;++r<e.length;)t[r]=U(e[r]);return _(function(...e){let r=-1;for(;++r<t.length;)if(t[r].apply(this,e))return!0;return!1})}(e):function(e){const t=e;return _(function(r){const n=r;let a;for(a in e)if(n[a]!==t[a])return!1;return!0})}(e);if("string"==typeof e)return t=e,_(function(e){return e&&e.type===t});var t;throw new Error("Expected function, string, or object as test")};function _(e){return function(t,r,n){return Boolean(function(e){return null!==e&&"object"==typeof e&&"type"in e}(t)&&e.call(this,t,"number"==typeof r?r:void 0,n||void 0))}}function z(){return!0}const R=[],W=!1;var X=function(){return function(t){!function(e,t,r,n){let a,o,s;o="element",s=r,a=void 0,function(e,t,r,n){let a;a="element";const o=U("element");!function e(t,n,a){const s=t&&"object"==typeof t?t:{};if("string"==typeof s.type){const e="string"==typeof s.tagName?s.tagName:"string"==typeof s.name?s.name:void 0;Object.defineProperty(i,"name",{value:"node ("+t.type+(e?"<"+e+">":"")+")"})}return i;function i(){let s,i,c,l=R;if(o(t,n,a[a.length-1]||void 0)&&(l=function(e){return Array.isArray(e)?e:"number"==typeof e?[!0,e]:null==e?R:[e]}(r(t,a)),l[0]===W))return l;if("children"in t&&t.children){const r=t;if(r.children&&"skip"!==l[0])for(i=0,c=a.concat(r);i>-1&&i<r.children.length;){if(s=e(r.children[i],i,c)(),s[0]===W)return s;i="number"==typeof s[1]?s[1]:i+1}}return l}}(e,void 0,[])()}(e,0,function(e,t){const r=t[t.length-1],n=r?r.children.indexOf(e):void 0;return s(e,n,r)})}(t,0,e)};function e(e,t,r){"img"===e.tagName&&r&&"p"===r.tagName&&(r.tagName="div")}};const H="object"==typeof self?self:globalThis,K=e=>((e,t)=>{const r=(t,r)=>(e.set(r,t),t),n=a=>{if(e.has(a))return e.get(a);const[o,s]=t[a];switch(o){case 0:case-1:return r(s,a);case 1:{const e=r([],a);for(const t of s)e.push(n(t));return e}case 2:{const e=r({},a);for(const[t,r]of s)e[n(t)]=n(r);return e}case 3:return r(new Date(s),a);case 4:{const{source:e,flags:t}=s;return r(new RegExp(e,t),a)}case 5:{const e=r(new Map,a);for(const[t,r]of s)e.set(n(t),n(r));return e}case 6:{const e=r(new Set,a);for(const t of s)e.add(n(t));return e}case 7:{const{name:e,message:t}=s;return r(new H[e](t),a)}case 8:return r(BigInt(s),a);case"BigInt":return r(Object(BigInt(s)),a)}return r(new H[o](s),a)};return n})(new Map,e)(0),Y="",{toString:G}={},{keys:Q}=Object,Z=e=>{const t=typeof e;if("object"!==t||!e)return[0,t];const r=G.call(e).slice(8,-1);switch(r){case"Array":return[1,Y];case"Object":return[2,Y];case"Date":return[3,Y];case"RegExp":return[4,Y];case"Map":return[5,Y];case"Set":return[6,Y]}return r.includes("Array")?[1,r]:r.includes("Error")?[7,r]:[2,r]},$=([e,t])=>0===e&&("function"===t||"symbol"===t),ee=(e,{json:t,lossy:r}={})=>{const n=[];return((e,t,r,n)=>{const a=(e,t)=>{const a=n.push(e)-1;return r.set(t,a),a},o=n=>{if(r.has(n))return r.get(n);let[s,i]=Z(n);switch(s){case 0:{let t=n;switch(i){case"bigint":s=8,t=n.toString();break;case"function":case"symbol":if(e)throw new TypeError("unable to serialize "+i);t=null;break;case"undefined":return a([-1],n)}return a([s,t],n)}case 1:{if(i)return a([i,[...n]],n);const e=[],t=a([s,e],n);for(const t of n)e.push(o(t));return t}case 2:{if(i)switch(i){case"BigInt":return a([i,n.toString()],n);case"Boolean":case"Number":case"String":return a([i,n.valueOf()],n)}if(t&&"toJSON"in n)return o(n.toJSON());const r=[],c=a([s,r],n);for(const t of Q(n))!e&&$(Z(n[t]))||r.push([o(t),o(n[t])]);return c}case 3:return a([s,n.toISOString()],n);case 4:{const{source:e,flags:t}=n;return a([s,{source:e,flags:t}],n)}case 5:{const t=[],r=a([s,t],n);for(const[r,a]of n)(e||!$(Z(r))&&!$(Z(a)))&&t.push([o(r),o(a)]);return r}case 6:{const t=[],r=a([s,t],n);for(const r of n)!e&&$(Z(r))||t.push(o(r));return r}}const{message:c}=n;return a([s,{name:i,message:c}],n)};return o})(!(t||r),!!t,new Map,n)(e),n};var te="function"==typeof structuredClone?(e,t)=>t&&("json"in t||"lossy"in t)?K(ee(e,t)):structuredClone(e):(e,t)=>K(ee(e,t));const re=ae("end"),ne=ae("start");function ae(e){return function(t){const r=t&&t.position&&t.position[e]||{};if("number"==typeof r.line&&r.line>0&&"number"==typeof r.column&&r.column>0)return{line:r.line,column:r.column,offset:"number"==typeof r.offset&&r.offset>-1?r.offset:void 0}}}const oe=["ariaDescribedBy","ariaLabel","ariaLabelledBy"],se={ancestors:{tbody:["table"],td:["table"],th:["table"],thead:["table"],tfoot:["table"],tr:["table"]},attributes:{a:[...oe,"dataFootnoteBackref","dataFootnoteRef",["className","data-footnote-backref"],"href"],blockquote:["cite"],code:[["className",/^language-./]],del:["cite"],div:["itemScope","itemType"],dl:[...oe],h2:[["className","sr-only"]],img:[...oe,"longDesc","src"],input:[["disabled",!0],["type","checkbox"]],ins:["cite"],li:[["className","task-list-item"]],ol:[...oe,["className","contains-task-list"]],q:["cite"],section:["dataFootnotes",["className","footnotes"]],source:["srcSet"],summary:[...oe],table:[...oe],ul:[...oe,["className","contains-task-list"]],"*":["abbr","accept","acceptCharset","accessKey","action","align","alt","axis","border","cellPadding","cellSpacing","char","charOff","charSet","checked","clear","colSpan","color","cols","compact","coords","dateTime","dir","encType","frame","hSpace","headers","height","hrefLang","htmlFor","id","isMap","itemProp","label","lang","maxLength","media","method","multiple","name","noHref","noShade","noWrap","open","prompt","readOnly","rev","rowSpan","rows","rules","scope","selected","shape","size","span","start","summary","tabIndex","title","useMap","vAlign","value","width"]},clobber:["ariaDescribedBy","ariaLabelledBy","id","name"],clobberPrefix:"user-content-",protocols:{cite:["http","https"],href:["http","https","irc","ircs","mailto","xmpp"],longDesc:["http","https"],src:["http","https"]},required:{input:{disabled:!0,type:"checkbox"}},strip:["script"],tagNames:["a","b","blockquote","br","code","dd","del","details","div","dl","dt","em","h1","h2","h3","h4","h5","h6","hr","i","img","input","ins","kbd","li","ol","p","picture","pre","q","rp","rt","ruby","s","samp","section","source","span","strike","strong","sub","summary","sup","table","tbody","td","tfoot","th","thead","tr","tt","ul","var"]};var ie={}.hasOwnProperty;function ce(e,t){if(t&&"object"==typeof t){var r=t;switch("string"==typeof r.type?r.type:""){case"comment":return function(e,t){if(e.schema.allowComments){var r="string"==typeof t.value?t.value:"",n=r.indexOf("--\x3e"),a={type:"comment",value:n<0?r:r.slice(0,n)};return me(a,t),a}}(e,r);case"doctype":return function(e,t){if(e.schema.allowDoctypes){var r={type:"doctype"};return me(r,t),r}}(e,r);case"element":return function(e,t){var r="string"==typeof t.tagName?t.tagName:"";e.stack.push(r);var n=le(e,t.children),a=ue(e,t.properties);e.stack.pop();var o=!1;if(r&&"*"!==r&&(!e.schema.tagNames||e.schema.tagNames.includes(r))&&(o=!0,e.schema.ancestors&&ie.call(e.schema.ancestors,r))){var s=e.schema.ancestors[r],i=-1;for(o=!1;++i<s.length;)e.stack.includes(s[i])&&(o=!0)}if(!o)return e.schema.strip&&!e.schema.strip.includes(r)?n:void 0;var c={type:"element",tagName:r,properties:a,children:n};return me(c,t),c}(e,r);case"root":return function(e,t){var r={type:"root",children:le(e,t.children)};return me(r,t),r}(e,r);case"text":return function(e,t){var r={type:"text",value:"string"==typeof t.value?t.value:""};return me(r,t),r}(0,r);case"mdxJsxTextElement":case"mdxJsxFlowElement":return function(e,t){var r="string"==typeof t.name?t.name:"";e.stack.push(r);var n=le(e,t.children),a=ue(e,t.attributes);e.stack.pop();var o=!1;if(r&&"*"!==r&&(!e.schema.tagNames||e.schema.tagNames.includes(r))&&(o=!0,e.schema.ancestors&&ie.call(e.schema.ancestors,r))){var s=e.schema.ancestors[r],i=-1;for(o=!1;++i<s.length;)e.stack.includes(s[i])&&(o=!0)}if(!o)return e.schema.strip&&!e.schema.strip.includes(r)?n:void 0;var c={type:"element",tagName:r,properties:a,children:n};return me(c,t),c}(e,r)}}}function le(e,t){var r=[];if(Array.isArray(t))for(var n=t,a=-1;++a<n.length;){var o=ce(e,n[a]);o&&(Array.isArray(o)?r.push.apply(r,o):r.push(o))}return r}function ue(e,t){var r,n=e.stack[e.stack.length-1],a=e.schema.attributes,o=e.schema.required,s=a&&ie.call(a,n)?a[n]:void 0,i=a&&ie.call(a,"*")?a["*"]:void 0,c=t&&"object"==typeof t?Array.isArray(t)?t.reduce(function(e,t){var r;return"mdxJsxAttribute"===t.type&&(e[t.name]="mdxJsxAttributeValueExpression"===(null==(r=t.value)?void 0:r.type)?t.value:null===t.value||t.value),e},{}):t:{},l={};for(r in c)if(ie.call(c,r)){var u=c[r],f=fe(e,pe(s,r),r,u);null==f&&(f=fe(e,pe(i,r),r,u)),null!=f&&(l[r]=f)}if(o&&ie.call(o,n)){var d=o[n];for(r in d)ie.call(d,r)&&!ie.call(l,r)&&(l[r]=d[r])}return l}function fe(e,t,r,n){return t?Array.isArray(n)?function(e,t,r,n){for(var a=-1,o=[];++a<n.length;){var s=de(e,t,r,n[a]);"number"!=typeof s&&"string"!=typeof s||o.push(s)}return o}(e,t,r,n):de(e,t,r,n):void 0}function de(e,t,r,n){if("mdxJsxAttributeValueExpression"===(null==n?void 0:n.type))return de(e,t,r,"undefined"===n.value?void 0:"true"===n.value||("false"===n.value?void 0:n.value));if(("boolean"==typeof n||"number"==typeof n||"string"==typeof n)&&function(e,t,r){var n=e.schema.protocols&&ie.call(e.schema.protocols,t)?e.schema.protocols[t]:void 0;if(!n||0===n.length)return!0;var a=String(r),o=a.indexOf(":"),s=a.indexOf("?"),i=a.indexOf("#"),c=a.indexOf("/");if(o<0||c>-1&&o>c||s>-1&&o>s||i>-1&&o>i)return!0;for(var l=-1;++l<n.length;){var u=n[l];if(o===u.length&&a.slice(0,u.length)===u)return!0}return!1}(e,r,n)){if("object"==typeof t&&t.length>1){for(var a=!1,o=0;++o<t.length;){var s=t[o];if(s&&"object"==typeof s&&"flags"in s){if(s.test(String(n))){a=!0;break}}else if(s===n){a=!0;break}}if(!a)return}return e.schema.clobber&&e.schema.clobberPrefix&&e.schema.clobber.includes(r)?e.schema.clobberPrefix+n:n}}function me(e,t){var r=function(e){const t=ne(e),r=re(e);if(t&&r)return{start:t,end:r}}(t);t.data&&(e.data=te(t.data)),r&&(e.position=r)}function pe(e,t){var r,n=-1;if(e)for(;++n<e.length;){var a=e[n],o="string"==typeof a?a:a[0];if(o===t)return a;if("data*"===o&&(r=a),"*"===o)return a}if(t.length>4&&"data"===t.slice(0,4).toLowerCase())return r}function he(e){return new y.VFile({basename:"example.mdx",value:e})}function ve(e,t){var r;try{e.result=a.evaluateSync(e,J({},P,{development:!1,useDynamicImport:!0,remarkPlugins:[B.default,T.default,D.default,F.default,function(){return function(t){e.data.mdast=t}}],rehypePlugins:[A.default,X,(r=Object.keys(t),void 0===r&&(r=[]),function(){var e=r.reduce(function(e,t){return e[t]=["*"],e},{}),t=I.default(se,{tagNames:r,attributes:J({"*":["className"],code:[["className",/^language-./,"math-inline","math-display"]]},e),clobberPrefix:""});return function(e){var r,n,a,o;return r=e,a={type:"root",children:[]},(o=ce({schema:(n=t)?J({},se,n):se,stack:[]},r))&&(Array.isArray(o)?1===o.length?a=o[0]:a.children=o:a=o),a}}),[E.default,{tagName:"code"}],V.default],recmaPlugins:[]})).default}catch(t){var n=t instanceof b.VFileMessage?t:new b.VFileMessage(t);e.messages.includes(n)||e.messages.push(n),n.fatal=!0}}var ge=function(e,t){void 0===t&&(t={});var r=e.mdast?x.toMarkdown(e.mdast,{extensions:[l.mdxToMarkdown(),i.gfmToMarkdown(),c.mathToMarkdown(),m.directiveToMarkdown,s.frontmatterToMarkdown()]}):"",n=he(r);return ve(n,t),J({},e,{value:r,file:n})};function ye(e,t,n){void 0===t&&(t=!1),void 0===n&&(n={});var a=r.useState(function(){return ge(e,n)}),s=a[0],i=a[1];return r.useEffect(function(){t&&i(ge(e,n))},[e,t]),[s,o.useDebounceFn(function(e){try{var t=he(e.value);return ve(t,n),i(J({},e,{file:t})),Promise.resolve()}catch(e){return Promise.reject(e)}},{leading:!0,trailing:!0,wait:200}).run]}var be=function(t){var r=t.error,n=t.resetErrorBoundary;return e.jsxs(q.Alert,{status:"error",children:[e.jsx(q.AlertIcon,{}),e.jsx(q.AlertTitle,{children:"Something went wrong"}),e.jsxs(q.AlertDescription,{children:[e.jsx("pre",{children:r.message}),e.jsx(q.Button,{onClick:n,children:"Try again"})]})]})},xe=function(t){var r,n=t.stats;return e.jsx(e.Fragment,{children:n.fatal||n.warn?e.jsx("pre",{children:e.jsx("code",{children:(r=t.state.file,JSON.stringify(r.messages,null,2))})}):null})},je=["className"],we=function(t){var r=new b.VFileMessage(t.error);return r.fatal=!0,e.jsx("pre",{children:e.jsx("code",{children:String(r)})})},ke=function(t){var r=t.state,n=t.components;try{if("function"!=typeof r.file.result)throw console.error(r),new Error("Preview could not be generated.");return r.file.result({components:J({code:function(t){var r=t.className,n=C(t,je),a=/language-(\w+)/.exec(r||"");return a?e.jsx(L.default,J({language:a[1],PreTag:"div"},n)):e.jsx("code",J({className:r},n))}},n,{wrapper:function(t){var r=null==n?void 0:n.wrapper,a=e.jsx(q.Stack,{w:"full",sx:{"mjx-container":{display:"inline-block !important",verticalAlign:"text-bottom !important"}},children:t.children});return r?e.jsx(r,{children:a}):a}})})}catch(e){throw e}},qe=M.default.memo(function(t){var n,a,o=t.state,s=t.stats,i=t.components,c=r.useState(function(){return ke({state:o,components:i})}),l=c[0],u=c[1],f=r.useState(null),d=f[0],m=f[1];return r.useEffect(function(){!function(){try{var e=function(e,t){try{var r=Promise.resolve(ke({state:o,components:i})).then(function(e){u(e),m(null)})}catch(e){return t(e)}return r&&r.then?r.then(void 0,t):r}(0,function(e){m(e)});return Promise.resolve(e&&e.then?e.then(function(){}):void 0)}catch(e){return Promise.reject(e)}}()},[null==(n=o.file)?void 0:n.value,i]),e.jsxs(w.ErrorBoundary,{FallbackComponent:be,children:[e.jsx("noscript",{children:"Enable JavaScript for the rendered result."}),(null==(a=o.file)?void 0:a.result)&&e.jsx(e.Fragment,{children:l}),d&&e.jsx(we,{error:d}),e.jsx(xe,{state:o,stats:s})]})}),Ne=M.default.memo(function(t){var a=t.components,o=t.mdast,s=ye(r.useMemo(function(){return{gfm:!0,frontmatter:!0,math:!0,directive:!0,mdast:o}},[o]),!0,a)[0],i=r.useMemo(function(){return s.file?n.statistics(s.file):{}},[s.file]);return e.jsx(qe,{state:s,stats:i,components:a})}),Se=["name","defaultValue","alt"],Oe=["to","children"],Pe=function(r){var n=r.name,a=r.defaultValue,o=r.alt,s=C(r,Se);return e.jsx(q.Box,J({},s,{children:e.jsx(t.Field.Image,{name:n,defaultValue:a,alt:o})}))};Pe.defaultProps={name:function(){return"image-"+(Math.random()+1).toString(36).substring(7)},alt:"Placeholder Image Alt",defaultValue:"https://via.placeholder.com/150"};var Me={position:"relative",color:"brand.600",textDecoration:"none",w:"fit-content",_hover:{color:"brand.600",_before:{transform:"scaleX(1)"}},_before:{content:'""',position:"absolute",display:"block",width:"100%",height:"2px",bottom:-.5,left:0,backgroundColor:"brand.600",transform:"scaleX(0)",transformOrigin:"top left",transition:"transform 0.3s ease"}},Ae=function(t){var r=t.to,n=t.children,a=C(t,Oe),o=void 0!==a.isExternal?a.isExternal:r.startsWith("http://")||r.startsWith("https://");return e.jsx(q.Link,J(o?{href:r,isExternal:!0}:{as:N.Link,to:r},Me,{children:n}))};Ae.defaultProps={to:"/",children:"My Link"};var Ee={type:"root",children:[{type:"heading",depth:1,children:[{type:"text",value:"Hello, world!",position:{start:{line:1,column:3,offset:2},end:{line:1,column:16,offset:15}}}],position:{start:{line:1,column:1,offset:0},end:{line:1,column:16,offset:15}}},{type:"paragraph",children:[{type:"text",value:"// This is a ",position:{start:{line:3,column:1,offset:17},end:{line:3,column:14,offset:30}}},{type:"strong",children:[{type:"text",value:"jaen",position:{start:{line:3,column:16,offset:32},end:{line:3,column:20,offset:36}}}],position:{start:{line:3,column:14,offset:30},end:{line:3,column:22,offset:38}}},{type:"text",value:" MDX field.",position:{start:{line:3,column:22,offset:38},end:{line:3,column:33,offset:49}}}],position:{start:{line:3,column:1,offset:17},end:{line:3,column:33,offset:49}}},{type:"paragraph",children:[{type:"text",value:"// ## Usage",position:{start:{line:5,column:1,offset:51},end:{line:5,column:12,offset:62}}}],position:{start:{line:5,column:1,offset:51},end:{line:5,column:12,offset:62}}},{type:"paragraph",children:[{type:"text",value:"// You can use this field to write markdown content.\n//",position:{start:{line:7,column:1,offset:64},end:{line:8,column:3,offset:119}}}],position:{start:{line:7,column:1,offset:64},end:{line:8,column:4,offset:120}}}],position:{start:{line:1,column:1,offset:0},end:{line:15,column:8,offset:228}}},Ve={Image:Pe,Link:Ae,a:function(t){return e.jsx(Ae,{to:t.href,children:t.children})},img:function(t){var r=t.src,n=t.alt;return e.jsx(Pe,{name:r+"-"+n,defaultValue:r,alt:n})}},Fe=t.connectField(function(t){var n=t.jaenField,a=t.components,o=M.default.useState(n.staticValue||Ee),s=o[0],i=o[1];r.useEffect(function(){i(n.value||n.staticValue||Ee)},[n.value]);var c=r.useMemo(function(){return J({},Ve,a)},[Ve,JSON.stringify(a)]);return n.isEditing?e.jsx(Te,{components:c,onUpdateValue:n.onUpdateValue,rawValue:s}):e.jsx(Ne,{components:c,mdast:s})},{fieldType:"IMA:MdxField"}),Te=function(t){var r=t.components,n=t.onUpdateValue,a=t.rawValue,o=M.default.lazy(function(){try{return Promise.resolve(Promise.resolve().then(function(){return require("./Editor-2144fe7f.js")}))}catch(e){return Promise.reject(e)}}),s=M.default.useMemo(function(){return o},[]);return e.jsx(M.default.Suspense,{fallback:e.jsx("div",{children:"Loading..."}),children:e.jsx(s,{components:r,onUpdateValue:n,mode:"editAndPreview",mdast:a})})};exports.ErrorFallback=be,exports.MdxField=Fe,exports.PreviewComponent=qe,exports.UncontrolledMdxField=function(n){var a=n.components,o=n.onUpdateValue,s=n.value,i=n.isEditing,c=r.useMemo(function(){return J({},Ve,a)},[Ve,a]);return i?e.jsx(t.EditingProvider,{isEditing:i,children:e.jsx(Te,{components:c,onUpdateValue:o,rawValue:s})}):e.jsx(Ne,{components:c,mdast:s})},exports._extends=J,exports.useMdx=ye;
-//# sourceMappingURL=index-c7899b5b.js.map
diff --git a/node_modules/@atsnek/jaen-fields-mdx/dist/index-c7899b5b.js.map b/node_modules/@atsnek/jaen-fields-mdx/dist/index-c7899b5b.js.map
deleted file mode 100644
index 7af9480..0000000
--- a/node_modules/@atsnek/jaen-fields-mdx/dist/index-c7899b5b.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"index-c7899b5b.js","sources":["../../../node_modules/unist-util-is/lib/index.js","../../../node_modules/unist-util-visit-parents/lib/index.js","../src/MdxField/rehype-unwrap-images.tsx","../../../node_modules/unist-util-visit/lib/index.js","../../../node_modules/@ungap/structured-clone/esm/types.js","../../../node_modules/@ungap/structured-clone/esm/deserialize.js","../../../node_modules/@ungap/structured-clone/esm/serialize.js","../../../node_modules/@ungap/structured-clone/esm/index.js","../../../node_modules/unist-util-position/lib/index.js","../../../node_modules/hast-util-sanitize/lib/schema.js","../src/hast-util-sanitize-mdx/sanitize.ts","../src/MdxField/use-mdx.tsx","../src/rehype-sanitize-mdx/index.ts","../src/MdxField/components/ErrorFallback.tsx","../src/MdxField/components/StatsReporterError.tsx","../src/MdxField/components/PreviewComponent.tsx","../src/MdxField/components/Preview.tsx","../src/MdxField/default-components.tsx","../src/MdxField/default-data.ts","../src/MdxField/MdxField.tsx"],"sourcesContent":["/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","import {Element} from 'hast'\nimport {Plugin} from 'unified'\nimport {visit} from 'unist-util-visit'\n\nexport const rehypeUnwrapImages: Plugin<[]> = () => {\n  return tree => {\n    visit(tree as any, 'element', visitor)\n  }\n\n  function visitor(node: Element, _: number, parent: Element | undefined) {\n    if (node.tagName === 'img' && parent && parent.tagName === 'p') {\n      parent.tagName = 'div'\n    }\n  }\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","// Couple of ARIA attributes allowed in several, but not all, places.\nconst aria = ['ariaDescribedBy', 'ariaLabel', 'ariaLabelledBy']\n\n/**\n * Default schema.\n *\n * Follows GitHub style sanitation.\n *\n * @type {import('./index.js').Schema}\n */\nexport const defaultSchema = {\n  ancestors: {\n    tbody: ['table'],\n    td: ['table'],\n    th: ['table'],\n    thead: ['table'],\n    tfoot: ['table'],\n    tr: ['table']\n  },\n  attributes: {\n    a: [\n      ...aria,\n      // Note: these 3 are used by GFM footnotes, they do work on all links.\n      'dataFootnoteBackref',\n      'dataFootnoteRef',\n      ['className', 'data-footnote-backref'],\n      'href'\n    ],\n    blockquote: ['cite'],\n    // Note: this class is not normally allowed by GH, when manually writing\n    // `code` as HTML in markdown, they adds it some other way.\n    // We can’t do that, so we have to allow it.\n    code: [['className', /^language-./]],\n    del: ['cite'],\n    div: ['itemScope', 'itemType'],\n    dl: [...aria],\n    // Note: this is used by GFM footnotes.\n    h2: [['className', 'sr-only']],\n    img: [...aria, 'longDesc', 'src'],\n    // Note: `input` is not normally allowed by GH, when manually writing\n    // it in markdown, they add it from tasklists some other way.\n    // We can’t do that, so we have to allow it.\n    input: [\n      ['disabled', true],\n      ['type', 'checkbox']\n    ],\n    ins: ['cite'],\n    // Note: this class is not normally allowed by GH, when manually writing\n    // `li` as HTML in markdown, they adds it some other way.\n    // We can’t do that, so we have to allow it.\n    li: [['className', 'task-list-item']],\n    // Note: this class is not normally allowed by GH, when manually writing\n    // `ol` as HTML in markdown, they adds it some other way.\n    // We can’t do that, so we have to allow it.\n    ol: [...aria, ['className', 'contains-task-list']],\n    q: ['cite'],\n    section: ['dataFootnotes', ['className', 'footnotes']],\n    source: ['srcSet'],\n    summary: [...aria],\n    table: [...aria],\n    // Note: this class is not normally allowed by GH, when manually writing\n    // `ol` as HTML in markdown, they adds it some other way.\n    // We can’t do that, so we have to allow it.\n    ul: [...aria, ['className', 'contains-task-list']],\n    '*': [\n      'abbr',\n      'accept',\n      'acceptCharset',\n      'accessKey',\n      'action',\n      'align',\n      'alt',\n      'axis',\n      'border',\n      'cellPadding',\n      'cellSpacing',\n      'char',\n      'charOff',\n      'charSet',\n      'checked',\n      'clear',\n      'colSpan',\n      'color',\n      'cols',\n      'compact',\n      'coords',\n      'dateTime',\n      'dir',\n      // Note: `disabled` is technically allowed on all elements by GH.\n      // But it is useless on everything except `input`.\n      // Because `input`s are normally not allowed, but we allow them for\n      // checkboxes due to tasklists, we allow `disabled` only there.\n      'encType',\n      'frame',\n      'hSpace',\n      'headers',\n      'height',\n      'hrefLang',\n      'htmlFor',\n      'id',\n      'isMap',\n      'itemProp',\n      'label',\n      'lang',\n      'maxLength',\n      'media',\n      'method',\n      'multiple',\n      'name',\n      'noHref',\n      'noShade',\n      'noWrap',\n      'open',\n      'prompt',\n      'readOnly',\n      'rev',\n      'rowSpan',\n      'rows',\n      'rules',\n      'scope',\n      'selected',\n      'shape',\n      'size',\n      'span',\n      'start',\n      'summary',\n      'tabIndex',\n      'title',\n      'useMap',\n      'vAlign',\n      'value',\n      'width'\n    ]\n  },\n  clobber: ['ariaDescribedBy', 'ariaLabelledBy', 'id', 'name'],\n  clobberPrefix: 'user-content-',\n  protocols: {\n    cite: ['http', 'https'],\n    href: ['http', 'https', 'irc', 'ircs', 'mailto', 'xmpp'],\n    longDesc: ['http', 'https'],\n    src: ['http', 'https']\n  },\n  required: {\n    input: {disabled: true, type: 'checkbox'}\n  },\n  strip: ['script'],\n  tagNames: [\n    'a',\n    'b',\n    'blockquote',\n    'br',\n    'code',\n    'dd',\n    'del',\n    'details',\n    'div',\n    'dl',\n    'dt',\n    'em',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'hr',\n    'i',\n    'img',\n    // Note: `input` is not normally allowed by GH, when manually writing\n    // it in markdown, they add it from tasklists some other way.\n    // We can’t do that, so we have to allow it.\n    'input',\n    'ins',\n    'kbd',\n    'li',\n    'ol',\n    'p',\n    'picture',\n    'pre',\n    'q',\n    'rp',\n    'rt',\n    'ruby',\n    's',\n    'samp',\n    'section',\n    'source',\n    'span',\n    'strike',\n    'strong',\n    'sub',\n    'summary',\n    'sup',\n    'table',\n    'tbody',\n    'td',\n    'tfoot',\n    'th',\n    'thead',\n    'tr',\n    'tt',\n    'ul',\n    'var'\n  ]\n}\n","// @ts-nocheck\n\n/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n */\n\n/**\n * @typedef {[string, ...Array<Exclude<Properties[keyof Properties], Array<any>> | RegExp>] | string} PropertyDefinition\n *   Definition for a property.\n *\n * @typedef Schema\n *   Schema that defines what nodes and properties are allowed.\n *\n *   The default schema is `defaultSchema`, which follows how GitHub cleans.\n *   If any top-level key is missing in the given schema, the corresponding\n *   value of the default schema is used.\n *\n *   To extend the standard schema with a few changes, clone `defaultSchema`\n *   like so:\n *\n *   ```js\n *   import deepmerge from 'deepmerge'\n *   import {h} from 'hastscript'\n *   import {defaultSchema, sanitize} from 'hast-util-sanitize'\n *\n *   // This allows `className` on all elements.\n *   const schema = deepmerge(defaultSchema, {attributes: {'*': ['className']}})\n *\n *   const tree = sanitize(h('div', {className: ['foo']}), schema)\n *\n *   // `tree` still has `className`.\n *   console.log(tree)\n *   // {\n *   //   type: 'element',\n *   //   tagName: 'div',\n *   //   properties: {className: ['foo']},\n *   //   children: []\n *   // }\n *   ```\n * @property {boolean | null | undefined} [allowComments=false]\n *   Whether to allow comment nodes (default: `false`).\n *\n *   For example:\n *\n *   ```js\n *   allowComments: true\n *   ```\n * @property {boolean | null | undefined} [allowDoctypes=false]\n *   Whether to allow doctype nodes (default: `false`).\n *\n *   For example:\n *\n *   ```js\n *   allowDoctypes: true\n *   ```\n * @property {Record<string, Array<string>> | null | undefined} [ancestors]\n *   Map of tag names to a list of tag names which are required ancestors\n *   (default: `defaultSchema.ancestors`).\n *\n *   Elements with these tag names will be ignored if they occur outside of one\n *   of their allowed parents.\n *\n *   For example:\n *\n *   ```js\n *   ancestors: {\n *     tbody: ['table'],\n *     // …\n *     tr: ['table']\n *   }\n *   ```\n * @property {Record<string, Array<PropertyDefinition>> | null | undefined} [attributes]\n *   Map of tag names to allowed property names (default:\n *   `defaultSchema.attributes`).\n *\n *   The special key `'*'` as a tag name defines property names allowed on all\n *   elements.\n *\n *   The special value `'data*'` as a property name can be used to allow all\n *   `data` properties.\n *\n *   For example:\n *\n *   ```js\n *   attributes: {\n *     'ariaDescribedBy', 'ariaLabel', 'ariaLabelledBy', …, 'href'\n *     // …\n *     '*': [\n *       'abbr',\n *       'accept',\n *       'acceptCharset',\n *       // …\n *       'vAlign',\n *       'value',\n *       'width'\n *     ]\n *   }\n *   ```\n *\n *   Instead of a single string in the array, which allows any property value\n *   for the field, you can use an array to allow several values.\n *   For example, `input: ['type']` allows `type` set to any value on `input`s.\n *   But `input: [['type', 'checkbox', 'radio']]` allows `type` when set to\n *   `'checkbox'` or `'radio'`.\n *\n *   You can use regexes, so for example `span: [['className', /^hljs-/]]`\n *   allows any class that starts with `hljs-` on `span`s.\n *\n *   When comma- or space-separated values are used (such as `className`), each\n *   value in is checked individually.\n *   For example, to allow certain classes on `span`s for syntax highlighting,\n *   use `span: [['className', 'number', 'operator', 'token']]`.\n *   This will allow `'number'`, `'operator'`, and `'token'` classes, but drop\n *   others.\n * @property {Array<string> | null | undefined} [clobber]\n *   List of property names that clobber (default: `defaultSchema.clobber`).\n *\n *   For example:\n *\n *   ```js\n *   clobber: ['ariaDescribedBy', 'ariaLabelledBy', 'id', 'name']\n *   ```\n * @property {string | null | undefined} [clobberPrefix]\n *   Prefix to use before clobbering properties (default:\n *   `defaultSchema.clobberPrefix`).\n *\n *   For example:\n *\n *   ```js\n *   clobberPrefix: 'user-content-'\n *   ```\n * @property {Record<string, Array<string> | null | undefined> | null | undefined} [protocols]\n *   Map of *property names* to allowed protocols (default:\n *   `defaultSchema.protocols`).\n *\n *   This defines URLs that are always allowed to have local URLs (relative to\n *   the current website, such as `this`, `#this`, `/this`, or `?this`), and\n *   only allowed to have remote URLs (such as `https://example.com`) if they\n *   use a known protocol.\n *\n *   For example:\n *\n *   ```js\n *   protocols: {\n *     cite: ['http', 'https'],\n *     // …\n *     src: ['http', 'https']\n *   }\n *   ```\n * @property {Record<string, Record<string, Properties[keyof Properties]>> | null | undefined} [required]\n *   Map of tag names to required property names with a default value\n *   (default: `defaultSchema.required`).\n *\n *   This defines properties that must be set.\n *   If a field does not exist (after the element was made safe), these will be\n *   added with the given value.\n *\n *   For example:\n *\n *   ```js\n *   required: {\n *     input: {disabled: true, type: 'checkbox'}\n *   }\n *   ```\n *\n *   > 👉 **Note**: properties are first checked based on `schema.attributes`,\n *   > then on `schema.required`.\n *   > That means properties could be removed by `attributes` and then added\n *   > again with `required`.\n * @property {Array<string> | null | undefined} [strip]\n *   List of tag names to strip from the tree (default: `defaultSchema.strip`).\n *\n *   By default, unsafe elements (those not in `schema.tagNames`) are replaced\n *   by what they contain.\n *   This option can drop their contents.\n *\n *   For example:\n *\n *   ```js\n *   strip: ['script']\n *   ```\n * @property {Array<string> | null | undefined} [tagNames]\n *   List of allowed tag names (default: `defaultSchema.tagNames`).\n *\n *   For example:\n *\n *   ```js\n *   tagNames: [\n *     'a',\n *     'b',\n *     // …\n *     'ul',\n *     'var'\n *   ]\n *   ```\n *\n * @typedef State\n *   Info passed around.\n * @property {Readonly<Schema>} schema\n *   Schema.\n * @property {Array<string>} stack\n *   Tag names of ancestors.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {position} from 'unist-util-position'\nimport {defaultSchema} from 'hast-util-sanitize'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Sanitize a tree.\n *\n * @param {Readonly<Nodes>} node\n *   Unsafe tree.\n * @param {Readonly<Schema> | null | undefined} [options]\n *   Configuration (default: `defaultSchema`).\n * @returns {Nodes}\n *   New, safe tree.\n */\nexport function sanitize(node, options) {\n  /** @type {Nodes} */\n  let ctx = {type: 'root', children: []}\n\n  /** @type {State} */\n  const state = {\n    schema: options ? {...defaultSchema, ...options} : defaultSchema,\n    stack: []\n  }\n  const replace = transform(state, node)\n\n  if (replace) {\n    if (Array.isArray(replace)) {\n      if (replace.length === 1) {\n        ctx = replace[0]\n      } else {\n        ctx.children = replace\n      }\n    } else {\n      ctx = replace\n    }\n  }\n\n  return ctx\n}\n\n/**\n * Sanitize `node`.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<unknown>} node\n *   Unsafe node.\n * @returns {Array<ElementContent> | Nodes | undefined}\n *   Safe result.\n */\nfunction transform(state, node) {\n  if (node && typeof node === 'object') {\n    const unsafe = /** @type {Record<string, Readonly<unknown>>} */ node\n\n    const type = typeof unsafe.type === 'string' ? unsafe.type : ''\n\n    switch (type) {\n      case 'comment': {\n        return comment(state, unsafe)\n      }\n\n      case 'doctype': {\n        return doctype(state, unsafe)\n      }\n\n      case 'element': {\n        return element(state, unsafe)\n      }\n\n      case 'root': {\n        return root(state, unsafe)\n      }\n\n      case 'text': {\n        return text(state, unsafe)\n      }\n\n      case 'mdxJsxTextElement':\n      case 'mdxJsxFlowElement': {\n        return mdxJsxFlowElement(state, unsafe)\n      }\n\n      default:\n    }\n  }\n}\n\n/**\n * Make a safe comment.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe comment-like value.\n * @returns {Comment | undefined}\n *   Safe comment (if with `allowComments`).\n */\nfunction comment(state, unsafe) {\n  if (state.schema.allowComments) {\n    // See <https://html.spec.whatwg.org/multipage/parsing.html#serialising-html-fragments>\n    const result = typeof unsafe.value === 'string' ? unsafe.value : ''\n    const index = result.indexOf('-->')\n    const value = index < 0 ? result : result.slice(0, index)\n\n    /** @type {Comment} */\n    const node = {type: 'comment', value}\n\n    patch(node, unsafe)\n\n    return node\n  }\n}\n\n/**\n * Make a safe doctype.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe doctype-like value.\n * @returns {Doctype | undefined}\n *   Safe doctype (if with `allowDoctypes`).\n */\nfunction doctype(state, unsafe) {\n  if (state.schema.allowDoctypes) {\n    /** @type {Doctype} */\n    const node = {type: 'doctype'}\n\n    patch(node, unsafe)\n\n    return node\n  }\n}\n\n/**\n * Make a safe element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe element-like value.\n * @returns {Array<ElementContent> | Element | undefined}\n *   Safe element.\n */\nfunction element(state, unsafe) {\n  const name = typeof unsafe.tagName === 'string' ? unsafe.tagName : ''\n\n  state.stack.push(name)\n\n  const content = /** @type {Array<ElementContent>} */ children(\n    state,\n    unsafe.children\n  )\n\n  const props = properties(state, unsafe.properties)\n\n  state.stack.pop()\n\n  let safeElement = false\n\n  if (\n    name &&\n    name !== '*' &&\n    (!state.schema.tagNames || state.schema.tagNames.includes(name))\n  ) {\n    safeElement = true\n\n    // Some nodes can break out of their context if they don’t have a certain\n    // ancestor.\n    if (state.schema.ancestors && own.call(state.schema.ancestors, name)) {\n      const ancestors = state.schema.ancestors[name]\n      let index = -1\n\n      safeElement = false\n\n      while (++index < ancestors.length) {\n        if (state.stack.includes(ancestors[index])) {\n          safeElement = true\n        }\n      }\n    }\n  }\n\n  if (!safeElement) {\n    return state.schema.strip && !state.schema.strip.includes(name)\n      ? content\n      : undefined\n  }\n\n  /** @type {Element} */\n  const node = {\n    type: 'element',\n    tagName: name,\n    properties: props,\n    children: content\n  }\n\n  patch(node, unsafe)\n\n  return node\n}\n\n/**\n * Make a safe mdxJsxFlowElement.\n *\n * @param {State} state\n *  Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>} unsafe\n * Unsafe mdxJsxFlowElement-like value.\n * @returns {Array<ElementContent> | Element | undefined}\n * Safe element.\n */\nfunction mdxJsxFlowElement(state, unsafe) {\n  const name = typeof unsafe.name === 'string' ? unsafe.name : ''\n\n  state.stack.push(name)\n\n  const content = /** @type {Array<ElementContent>} */ children(\n    state,\n    unsafe.children\n  )\n\n  const props = properties(state, unsafe.attributes)\n\n  state.stack.pop()\n\n  let safeElement = false\n\n  if (\n    name &&\n    name !== '*' &&\n    (!state.schema.tagNames || state.schema.tagNames.includes(name))\n  ) {\n    safeElement = true\n\n    // Some nodes can break out of their context if they don’t have a certain\n    // ancestor.\n    if (state.schema.ancestors && own.call(state.schema.ancestors, name)) {\n      const ancestors = state.schema.ancestors[name]\n      let index = -1\n\n      safeElement = false\n\n      while (++index < ancestors.length) {\n        if (state.stack.includes(ancestors[index])) {\n          safeElement = true\n        }\n      }\n    }\n  }\n\n  if (!safeElement) {\n    return state.schema.strip && !state.schema.strip.includes(name)\n      ? content\n      : undefined\n  }\n\n  /** @type {Element} */\n  const node = {\n    type: 'element',\n    tagName: name,\n    properties: props,\n    children: content\n  }\n\n  patch(node, unsafe)\n\n  return node\n}\n\n/**\n * Make a safe root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe root-like value.\n * @returns {Root}\n *   Safe root.\n */\nfunction root(state, unsafe) {\n  const content = /** @type {Array<RootContent>} */ children(\n    state,\n    unsafe.children\n  )\n\n  /** @type {Root} */\n  const node = {type: 'root', children: content}\n\n  patch(node, unsafe)\n\n  return node\n}\n\n/**\n * Make a safe text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe text-like value.\n * @returns {Text}\n *   Safe text.\n */\nfunction text(_, unsafe) {\n  const value = typeof unsafe.value === 'string' ? unsafe.value : ''\n  /** @type {Text} */\n  const node = {type: 'text', value}\n\n  patch(node, unsafe)\n\n  return node\n}\n\n/**\n * Make children safe.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<unknown>} children\n *   Unsafe value.\n * @returns {Array<Nodes>}\n *   Safe children.\n */\nfunction children(state, children) {\n  /** @type {Array<Nodes>} */\n  const results = []\n\n  if (Array.isArray(children)) {\n    const childrenUnknown = /** @type {Array<Readonly<unknown>>} */ children\n    let index = -1\n\n    while (++index < childrenUnknown.length) {\n      const value = transform(state, childrenUnknown[index])\n\n      if (value) {\n        if (Array.isArray(value)) {\n          results.push(...value)\n        } else {\n          results.push(value)\n        }\n      }\n    }\n  }\n\n  return results\n}\n\n/**\n * Make element properties safe.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<unknown>} properties\n *   Unsafe value.\n * @returns {Properties}\n *   Safe value.\n */\nfunction properties(state, properties) {\n  const tagName = state.stack[state.stack.length - 1]\n  const attributes = state.schema.attributes\n  const required = state.schema.required\n  const specific =\n    attributes && own.call(attributes, tagName)\n      ? attributes[tagName]\n      : undefined\n  const defaults =\n    attributes && own.call(attributes, '*') ? attributes['*'] : undefined\n  const props =\n    /** @type {Readonly<Record<string, Readonly<unknown>>>} */ properties &&\n    typeof properties === 'object'\n      ? Array.isArray(properties)\n        ? // Reduce to an object.\n          properties.reduce((acc, prop) => {\n            if (prop.type === 'mdxJsxAttribute') {\n              if (prop.value?.type === 'mdxJsxAttributeValueExpression') {\n                acc[prop.name] = prop.value\n              } else {\n                // Use `true` for boolean attributes. When prop={null} is passed, it’s\n                // is a of type `mdxJsxAttributeValueExpression` with value `null`.\n\n                if (prop.value === null) {\n                  acc[prop.name] = true\n                } else {\n                  acc[prop.name] = prop.value\n                }\n              }\n            }\n            return acc\n          }, {})\n        : properties\n      : {}\n\n  /** @type {Properties} */\n  const result = {}\n  /** @type {string} */\n  let key\n\n  for (key in props) {\n    if (own.call(props, key)) {\n      const unsafe = props[key]\n\n      let safe = propertyValue(\n        state,\n        findDefinition(specific, key),\n        key,\n        unsafe\n      )\n\n      if (safe === null || safe === undefined) {\n        safe = propertyValue(state, findDefinition(defaults, key), key, unsafe)\n      }\n\n      if (safe !== null && safe !== undefined) {\n        result[key] = safe\n      }\n    }\n  }\n\n  if (required && own.call(required, tagName)) {\n    const properties = required[tagName]\n\n    for (key in properties) {\n      if (own.call(properties, key) && !own.call(result, key)) {\n        result[key] = properties[key]\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Sanitize a property value.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<PropertyDefinition> | undefined} definition\n *   Definition.\n * @param {string} key\n *   Field name.\n * @param {Readonly<unknown>} value\n *   Unsafe value (but an array).\n * @returns {Array<number | string> | boolean | number | string | undefined}\n *   Safe value.\n */\nfunction propertyValue(state, definition, key, value) {\n  return definition\n    ? Array.isArray(value)\n      ? propertyValueMany(state, definition, key, value)\n      : propertyValuePrimitive(state, definition, key, value)\n    : undefined\n}\n\n/**\n * Sanitize a property value which is a list.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<PropertyDefinition>} definition\n *   Definition.\n * @param {string} key\n *   Field name.\n * @param {Readonly<Array<Readonly<unknown>>>} values\n *   Unsafe value (but an array).\n * @returns {Array<number | string>}\n *   Safe value.\n */\nfunction propertyValueMany(state, definition, key, values) {\n  let index = -1\n  /** @type {Array<number | string>} */\n  const result = []\n\n  while (++index < values.length) {\n    const value = propertyValuePrimitive(state, definition, key, values[index])\n\n    if (typeof value === 'number' || typeof value === 'string') {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Sanitize a property value which is a primitive.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<PropertyDefinition>} definition\n *   Definition.\n * @param {string} key\n *   Field name.\n * @param {Readonly<unknown>} value\n *   Unsafe value (but not an array).\n * @returns {boolean | number | string | undefined}\n *   Safe value.\n */\nfunction propertyValuePrimitive(state, definition, key, value) {\n  if (value?.type === 'mdxJsxAttributeValueExpression') {\n    if (value.value === 'undefined') {\n      return propertyValuePrimitive(state, definition, key, undefined)\n    } else if (value.value === 'true') {\n      return propertyValuePrimitive(state, definition, key, true)\n    } else if (value.value === 'false') {\n      return propertyValuePrimitive(state, definition, key, undefined)\n    } else {\n      return propertyValuePrimitive(state, definition, key, value.value)\n    }\n  }\n\n  if (\n    typeof value !== 'boolean' &&\n    typeof value !== 'number' &&\n    typeof value !== 'string'\n  ) {\n    return\n  }\n\n  if (!safeProtocol(state, key, value)) {\n    return\n  }\n\n  // Just a string, or only one item in an array, means all values are OK.\n  // More than one item means an allow list.\n  if (typeof definition === 'object' && definition.length > 1) {\n    let ok = false\n    let index = 0 // Ignore `key`, which is the first item.\n\n    while (++index < definition.length) {\n      const allowed = definition[index]\n\n      // Expression.\n      if (allowed && typeof allowed === 'object' && 'flags' in allowed) {\n        if (allowed.test(String(value))) {\n          ok = true\n          break\n        }\n      }\n      // Primitive.\n      else if (allowed === value) {\n        ok = true\n        break\n      }\n    }\n\n    if (!ok) return\n  }\n\n  return state.schema.clobber &&\n    state.schema.clobberPrefix &&\n    state.schema.clobber.includes(key)\n    ? state.schema.clobberPrefix + value\n    : value\n}\n\n/**\n * Check whether `value` is a safe URL.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} key\n *   Field name.\n * @param {Readonly<unknown>} value\n *   Unsafe value.\n * @returns {boolean}\n *   Whether it’s a safe value.\n */\nfunction safeProtocol(state, key, value) {\n  const protocols =\n    state.schema.protocols && own.call(state.schema.protocols, key)\n      ? state.schema.protocols[key]\n      : undefined\n\n  // No protocols defined? Then everything is fine.\n  if (!protocols || protocols.length === 0) {\n    return true\n  }\n\n  const url = String(value)\n  const colon = url.indexOf(':')\n  const questionMark = url.indexOf('?')\n  const numberSign = url.indexOf('#')\n  const slash = url.indexOf('/')\n\n  if (\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign)\n  ) {\n    return true\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length) === protocol\n    ) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Add data and position.\n *\n * @param {Nodes} node\n *   Node to patch safe data and position on.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe node-like value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(node, unsafe) {\n  const cleanPosition = position(\n    // @ts-expect-error: looks like a node.\n    unsafe\n  )\n\n  if (unsafe.data) {\n    node.data = structuredClone(unsafe.data)\n  }\n\n  if (cleanPosition) node.position = cleanPosition\n}\n\n/**\n *\n * @param {Readonly<Array<PropertyDefinition>> | undefined} definitions\n * @param {string} key\n * @returns {Readonly<PropertyDefinition> | undefined}\n */\nfunction findDefinition(definitions, key) {\n  /** @type {PropertyDefinition | undefined} */\n  let dataDefault\n  let index = -1\n\n  if (definitions) {\n    while (++index < definitions.length) {\n      const entry = definitions[index]\n      const name = typeof entry === 'string' ? entry : entry[0]\n\n      if (name === key) {\n        return entry\n      }\n\n      if (name === 'data*') dataDefault = entry\n\n      if (name === '*') return entry\n    }\n  }\n\n  if (key.length > 4 && key.slice(0, 4).toLowerCase() === 'data') {\n    return dataDefault\n  }\n}\n","import {evaluateSync} from '@mdx-js/mdx'\nimport {useDebounceFn} from 'ahooks'\nimport {frontmatterToMarkdown} from 'mdast-util-frontmatter'\nimport {gfmToMarkdown} from 'mdast-util-gfm'\nimport {mathToMarkdown} from 'mdast-util-math'\nimport {mdxToMarkdown} from 'mdast-util-mdx'\nimport {useEffect, useState} from 'react'\nimport * as runtime from 'react/jsx-runtime'\nimport rehypeSlug from 'rehype-slug-custom-id'\nimport rehypeMdxCodeProps from 'rehype-mdx-code-props'\nimport {rehypeUnwrapImages} from './rehype-unwrap-images'\nimport rehypeMathjax from 'rehype-mathjax/svg'\n\nimport {directiveToMarkdown} from 'mdast-util-directive'\nimport remarkDirective from 'remark-directive'\nimport remarkFrontmatter from 'remark-frontmatter'\nimport remarkGfm from 'remark-gfm'\nimport remarkMath from 'remark-math'\nimport {VFile} from 'vfile'\nimport {VFileMessage} from 'vfile-message'\n\nimport {toMarkdown} from 'mdast-util-to-markdown'\n\nimport {MdastRoot} from './components/types.js'\n\nimport rehypeSanitize from '../rehype-sanitize-mdx/index.js'\n\nconst parseMdast = (tree: MdastRoot) => {\n  const out = toMarkdown(tree as any, {\n    extensions: [\n      mdxToMarkdown(),\n      gfmToMarkdown(),\n      mathToMarkdown(),\n      directiveToMarkdown,\n      frontmatterToMarkdown()\n    ] as any\n  })\n\n  return out\n}\n\nfunction createFile(value: string) {\n  return new VFile({basename: 'example.mdx', value})\n}\n\nfunction evaluateFile(file: VFile, components: {[key: string]: any}) {\n  const capture = (name: string) => () => (tree: any) => {\n    file.data[name] = tree\n  }\n\n  try {\n    file.result = evaluateSync(file as any, {\n      ...(runtime as any),\n      development: false,\n\n      useDynamicImport: true,\n      remarkPlugins: [\n        remarkGfm,\n        remarkFrontmatter,\n        remarkMath,\n        remarkDirective,\n        capture('mdast')\n      ],\n      rehypePlugins: [\n        rehypeSlug,\n        rehypeUnwrapImages,\n        rehypeSanitize(Object.keys(components)),\n        [\n          rehypeMdxCodeProps,\n          {\n            tagName: 'code'\n          }\n        ],\n        rehypeMathjax\n      ],\n      recmaPlugins: []\n    }).default\n  } catch (error) {\n    const message =\n      error instanceof VFileMessage ? error : new VFileMessage(error)\n\n    if (!file.messages.includes(message as any)) {\n      file.messages.push(message as any)\n    }\n\n    message.fatal = true\n  }\n}\ninterface Defaults {\n  gfm: boolean\n  frontmatter: boolean\n  math: boolean\n  directive: boolean\n  mdast?: MdastRoot\n}\nconst initializeState = (\n  defaults: Defaults,\n  components: {\n    [key: string]: any\n  } = {}\n) => {\n  const markdown = defaults.mdast ? parseMdast(defaults.mdast) : ''\n\n  const file = createFile(markdown)\n\n  evaluateFile(file, components)\n\n  return {\n    ...defaults,\n    value: markdown,\n    file\n  }\n}\n\nexport function useMdx(\n  defaults: Defaults,\n  live: boolean = false,\n  components: {\n    [key: string]: any\n  } = {}\n) {\n  const [state, setState] = useState(() =>\n    initializeState(defaults, components)\n  )\n\n  useEffect(() => {\n    if (live) {\n      setState(initializeState(defaults, components))\n    }\n  }, [defaults, live])\n\n  const {run: setConfig} = useDebounceFn(\n    async config => {\n      const file = createFile(config.value)\n\n      evaluateFile(file, components)\n\n      setState({...config, file})\n    },\n    {leading: true, trailing: true, wait: 200}\n  )\n\n  return [state, setConfig]\n}\n","import deepmerge from 'deepmerge'\nimport {Root} from 'hast'\nimport {defaultSchema, sanitize} from '../hast-util-sanitize-mdx'\n\n/**\n * Sanitize HTML.\n */\nexport default function rehypeSanitize(componentsNames: string[] = []) {\n  return () => {\n    const allowAllAttributes = componentsNames.reduce<{\n      [key: string]: string[]\n    }>((acc, componentName) => {\n      acc[componentName] = ['*']\n      return acc\n    }, {})\n\n    const schema = deepmerge(defaultSchema, {\n      tagNames: componentsNames,\n      attributes: {\n        '*': ['className'],\n        // Allow rehype-mathjax classes.\n        code: [['className', /^language-./, 'math-inline', 'math-display']],\n        // Allow all attributes for components. The security of the components is the responsibility of the user.\n        ...allowAllAttributes\n      },\n      clobberPrefix: ''\n    })\n\n    return function (tree: Root) {\n      const result = sanitize(tree, schema) as Root\n\n      return result\n    }\n  }\n}\n","import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertTitle,\n  Button\n} from '@chakra-ui/react'\nimport React from 'react'\n\nexport const ErrorFallback: React.FC<{\n  error: Error\n  resetErrorBoundary: () => void\n}> = ({error, resetErrorBoundary}) => {\n  return (\n    <Alert status=\"error\">\n      <AlertIcon />\n      <AlertTitle>Something went wrong</AlertTitle>\n      <AlertDescription>\n        <pre>{error.message}</pre>\n\n        <Button onClick={resetErrorBoundary}>Try again</Button>\n      </AlertDescription>\n    </Alert>\n  )\n}\n","import type {VFile} from 'vfile'\nimport {Statistics} from 'vfile-statistics'\n\nexport const StatsErrorReporter: React.FC<{\n  stats: Statistics\n  state: any\n}> = ({stats, state}) => {\n  const vfileReporter = (file: VFile) => {\n    return JSON.stringify(file.messages, null, 2)\n  }\n\n  return (\n    <>\n      {stats.fatal || stats.warn ? (\n        <pre>\n          <code>{vfileReporter(state.file)}</code>\n        </pre>\n      ) : null}\n    </>\n  )\n}\n\nexport default StatsErrorReporter\n","import React, {useEffect, useState} from 'react'\nimport {ErrorBoundary} from 'react-error-boundary'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport {VFileMessage} from 'vfile-message'\nimport {Statistics} from 'vfile-statistics'\n\nimport {ErrorFallback} from './ErrorFallback.js'\nimport {BaseEditorProps} from './types.js'\n\nimport {Stack} from '@chakra-ui/react'\nimport StatsReporterError from './StatsReporterError.js'\n\nconst FallbackComponent: React.FC<{error: Error}> = ({error}) => {\n  const message = new VFileMessage(error)\n  message.fatal = true\n  return (\n    <pre>\n      <code>{String(message)}</code>\n    </pre>\n  )\n}\n\nexport interface PreviewComponentProps {\n  state: any\n  stats: Statistics\n  components: BaseEditorProps['components']\n}\n\nconst processContent = ({\n  state,\n  components\n}: {\n  state: PreviewComponentProps['state']\n  components: PreviewComponentProps['components']\n}) => {\n  try {\n    // check if state.file.result is a functio, if not throw error\n\n    if (typeof state.file.result !== 'function') {\n      console.error(state)\n      throw new Error(`Preview could not be generated.`)\n    }\n\n    return state.file.result({\n      components: {\n        code: ({className, ...props}: any) => {\n          const match = /language-(\\w+)/.exec(className || '')\n          return match ? (\n            <SyntaxHighlighter language={match[1]} PreTag=\"div\" {...props} />\n          ) : (\n            <code className={className} {...props} />\n          )\n        },\n        ...components,\n        wrapper: ({children}: any) => {\n          const Wrapper = components?.wrapper\n          const el = (\n            <Stack\n              w=\"full\"\n              sx={{\n                'mjx-container': {\n                  display: 'inline-block !important',\n                  verticalAlign: 'text-bottom !important'\n                }\n              }}>\n              {children}\n            </Stack>\n          )\n\n          if (Wrapper) {\n            return <Wrapper>{el}</Wrapper>\n          }\n\n          return el\n        }\n      }\n    })\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const PreviewComponent: React.FC<PreviewComponentProps> = React.memo(\n  ({state, stats, components}) => {\n    const [content, setContent] = useState<React.ReactNode>(() =>\n      processContent({state, components})\n    )\n    const [error, setError] = useState<Error | null>(null)\n\n    useEffect(() => {\n      async function processState() {\n        try {\n          const result = await processContent({\n            state,\n            components\n          })\n          setContent(result)\n          setError(null)\n        } catch (error) {\n          setError(error)\n        }\n      }\n\n      processState()\n    }, [state.file?.value, components])\n\n    return (\n      <ErrorBoundary FallbackComponent={ErrorFallback}>\n        <noscript>Enable JavaScript for the rendered result.</noscript>\n\n        {state.file?.result && <>{content}</>}\n\n        {error && <FallbackComponent error={error} />}\n\n        <StatsReporterError state={state} stats={stats} />\n      </ErrorBoundary>\n    )\n  }\n)\n","import {BaseEditorProps, MdastRoot} from './types.js'\n// @ts-nocheck\nimport React, {useMemo} from 'react'\nimport {Statistics, statistics} from 'vfile-statistics'\n\nimport {useMdx} from '../use-mdx.js'\nimport {PreviewComponent} from './PreviewComponent'\n\nexport interface BuildEditorProps {\n  components: BaseEditorProps['components']\n\n  mdast?: MdastRoot\n}\n\nexport const Preview = React.memo<BuildEditorProps>(({components, mdast}) => {\n  const defaults = useMemo(\n    () => ({\n      gfm: true,\n      frontmatter: true,\n      math: true,\n      directive: true,\n      mdast\n    }),\n    [mdast]\n  )\n\n  const [state, _] = useMdx(defaults, true, components) as any\n\n  const stats = useMemo(() => {\n    return state.file ? statistics(state.file) : ({} as Statistics)\n  }, [state.file])\n\n  // useEffect(() => {\n  //   console.log('useEffect', defaultValue)\n  //   setConfig({value: defaultValue})\n  // }, [defaultValue, setConfig])\n\n  return (\n    <PreviewComponent state={state} stats={stats} components={components} />\n  )\n})\n","import {Box, Link as ChakraLink, LinkProps} from '@chakra-ui/react'\nimport {Link as GatsbyLink} from 'gatsby'\nimport {Field} from '@atsnek/jaen'\n\nexport const Image = ({name, defaultValue, alt, ...rest}: any) => {\n  return (\n    <Box {...rest}>\n      <Field.Image name={name} defaultValue={defaultValue} alt={alt} />\n    </Box>\n  )\n}\n\nImage.defaultProps = {\n  name: () => `image-${(Math.random() + 1).toString(36).substring(7)}`,\n  alt: 'Placeholder Image Alt',\n  defaultValue: 'https://via.placeholder.com/150'\n}\n\nconst linkProps: LinkProps = {\n  position: 'relative',\n  color: 'brand.600',\n  textDecoration: 'none',\n  w: 'fit-content',\n  _hover: {\n    color: 'brand.600',\n    _before: {\n      transform: 'scaleX(1)'\n    }\n  },\n  _before: {\n    content: '\"\"',\n    position: 'absolute',\n    display: 'block',\n    width: '100%',\n    height: '2px',\n    bottom: -0.5,\n    left: 0,\n    backgroundColor: 'brand.600',\n    transform: 'scaleX(0)',\n    transformOrigin: 'top left',\n    transition: 'transform 0.3s ease'\n  }\n}\n\nexport const Link: React.FC<{\n  to: string\n  isExternal?: boolean\n  children: React.ReactNode\n}> = ({to, children, ...props}) => {\n  const isExternal =\n    props.isExternal !== undefined\n      ? props.isExternal\n      : to.startsWith('http://') || to.startsWith('https://')\n\n  if (isExternal) {\n    return (\n      <ChakraLink href={to} isExternal {...linkProps}>\n        {children}\n      </ChakraLink>\n    )\n  }\n\n  return (\n    <ChakraLink as={GatsbyLink} to={to} {...linkProps}>\n      {children}\n    </ChakraLink>\n  )\n}\n\nLink.defaultProps = {\n  to: '/',\n  children: 'My Link'\n}\n","import {MdastRoot} from './components/types.js'\n\nexport const defaultData = {\n  type: 'root',\n  children: [\n    {\n      type: 'heading',\n      depth: 1,\n      children: [\n        {\n          type: 'text',\n          value: 'Hello, world!',\n          position: {\n            start: {\n              line: 1,\n              column: 3,\n              offset: 2\n            },\n            end: {\n              line: 1,\n              column: 16,\n              offset: 15\n            }\n          }\n        }\n      ],\n      position: {\n        start: {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n        end: {\n          line: 1,\n          column: 16,\n          offset: 15\n        }\n      }\n    },\n    {\n      type: 'paragraph',\n      children: [\n        {\n          type: 'text',\n          value: '// This is a ',\n          position: {\n            start: {\n              line: 3,\n              column: 1,\n              offset: 17\n            },\n            end: {\n              line: 3,\n              column: 14,\n              offset: 30\n            }\n          }\n        },\n        {\n          type: 'strong',\n          children: [\n            {\n              type: 'text',\n              value: 'jaen',\n              position: {\n                start: {\n                  line: 3,\n                  column: 16,\n                  offset: 32\n                },\n                end: {\n                  line: 3,\n                  column: 20,\n                  offset: 36\n                }\n              }\n            }\n          ],\n          position: {\n            start: {\n              line: 3,\n              column: 14,\n              offset: 30\n            },\n            end: {\n              line: 3,\n              column: 22,\n              offset: 38\n            }\n          }\n        },\n        {\n          type: 'text',\n          value: ' MDX field.',\n          position: {\n            start: {\n              line: 3,\n              column: 22,\n              offset: 38\n            },\n            end: {\n              line: 3,\n              column: 33,\n              offset: 49\n            }\n          }\n        }\n      ],\n      position: {\n        start: {\n          line: 3,\n          column: 1,\n          offset: 17\n        },\n        end: {\n          line: 3,\n          column: 33,\n          offset: 49\n        }\n      }\n    },\n    {\n      type: 'paragraph',\n      children: [\n        {\n          type: 'text',\n          value: '// ## Usage',\n          position: {\n            start: {\n              line: 5,\n              column: 1,\n              offset: 51\n            },\n            end: {\n              line: 5,\n              column: 12,\n              offset: 62\n            }\n          }\n        }\n      ],\n      position: {\n        start: {\n          line: 5,\n          column: 1,\n          offset: 51\n        },\n        end: {\n          line: 5,\n          column: 12,\n          offset: 62\n        }\n      }\n    },\n    {\n      type: 'paragraph',\n      children: [\n        {\n          type: 'text',\n          value: '// You can use this field to write markdown content.\\n//',\n          position: {\n            start: {\n              line: 7,\n              column: 1,\n              offset: 64\n            },\n            end: {\n              line: 8,\n              column: 3,\n              offset: 119\n            }\n          }\n        }\n      ],\n      position: {\n        start: {\n          line: 7,\n          column: 1,\n          offset: 64\n        },\n        end: {\n          line: 8,\n          column: 4,\n          offset: 120\n        }\n      }\n    }\n  ],\n  position: {\n    start: {\n      line: 1,\n      column: 1,\n      offset: 0\n    },\n    end: {\n      line: 15,\n      column: 8,\n      offset: 228\n    }\n  }\n} as MdastRoot\n","import {connectField, EditingProvider} from '@atsnek/jaen'\nimport React, {useEffect, useMemo} from 'react'\n\nimport {Preview} from './components/Preview.js'\nimport {BaseEditorProps, MdastRoot} from './components/types.js'\n\nimport {Image, Link} from './default-components.js'\nimport {defaultData} from './default-data.js'\n\ntype MdxFieldValue = MdastRoot\n\nconst baseComponents = {\n  Image,\n  Link,\n  a: (props: any) => {\n    return <Link to={props.href}>{props.children}</Link>\n  },\n  img: (props: any) => {\n    const src = props.src\n    const alt = props.alt\n\n    const name = `${src}-${alt}`\n\n    return <Image name={name} defaultValue={src} alt={alt} />\n  }\n}\n\nexport interface MdxFieldProps {\n  components: BaseEditorProps['components']\n}\n\nexport const MdxField = connectField<MdxFieldValue, MdxFieldProps>(\n  ({jaenField, components}) => {\n    const [rawValue, setRawValue] = React.useState<MdastRoot | undefined>(\n      jaenField.staticValue || defaultData\n    )\n\n    useEffect(() => {\n      setRawValue(jaenField.value || jaenField.staticValue || defaultData)\n    }, [jaenField.value])\n\n    const combinedComponents = useMemo(() => {\n      return {\n        ...baseComponents,\n        ...components\n      }\n    }, [baseComponents, JSON.stringify(components)])\n\n    if (jaenField.isEditing) {\n      // Render editor in edit mode\n\n      return (\n        <LayzEditor\n          components={combinedComponents}\n          onUpdateValue={jaenField.onUpdateValue}\n          rawValue={rawValue}\n        />\n      )\n    } else {\n      return <Preview components={combinedComponents} mdast={rawValue} />\n    }\n  },\n  {\n    fieldType: 'IMA:MdxField'\n  }\n)\n\nexport const UncontrolledMdxField: React.FC<{\n  components: BaseEditorProps['components']\n  onUpdateValue: (value: MdastRoot) => void\n  value?: MdastRoot\n  isEditing?: boolean\n}> = ({components, onUpdateValue, value, isEditing}) => {\n  const combinedComponents = useMemo(() => {\n    return {\n      ...baseComponents,\n      ...components\n    }\n  }, [baseComponents, components])\n\n  if (isEditing) {\n    // Render editor in edit mode\n\n    return (\n      <EditingProvider isEditing={isEditing}>\n        <LayzEditor\n          components={combinedComponents}\n          onUpdateValue={onUpdateValue}\n          rawValue={value}\n        />\n      </EditingProvider>\n    )\n  } else {\n    return <Preview components={combinedComponents} mdast={value} />\n  }\n}\n\nconst LayzEditor: React.FC<{\n  components: BaseEditorProps['components']\n  onUpdateValue: (value: MdastRoot) => void\n  rawValue?: MdastRoot\n}> = ({components, onUpdateValue, rawValue}) => {\n  const Editor = React.lazy(async () => await import('./components/Editor.js'))\n\n  const MemoedEditor = React.useMemo(() => Editor, [])\n\n  return (\n    <React.Suspense fallback={<div>Loading...</div>}>\n      <MemoedEditor\n        components={components}\n        onUpdateValue={onUpdateValue}\n        mode=\"editAndPreview\"\n        mdast={rawValue}></MemoedEditor>\n    </React.Suspense>\n  )\n}\n"],"names":["convert","test","ok","castFactory","Array","isArray","tests","checks","index","length","parameters","apply","this","anyFactory","check","checkAsRecord","node","nodeAsRecord","key","propsFactory","type","Error","testFunction","value","parent","Boolean","looksLikeANode","call","undefined","empty","EXIT","rehypeUnwrapImages","tree","testOrVisitor","visitorOrReverse","maybeReverse","reverse","visitor","visit","is","factory","parents","name","tagName","Object","defineProperty","subresult","offset","grandparents","result","toResult","children","nodeAsParent","concat","visitParents","indexOf","_","env","self","globalThis","deserialize","serialized","$","as","out","set","unpair","has","get","arr","push","object","Date","source","flags","RegExp","map","Map","Set","add","message","BigInt","deserializer","EMPTY","toString","keys","typeOf","asString","slice","includes","shouldSkip","TYPE","serialize","json","lossy","strict","pair","entry","TypeError","valueOf","toJSON","entries","toISOString","serializer","structuredClone$1","structuredClone","any","options","pointEnd","point","pointStart","position","line","column","aria","defaultSchema","ancestors","tbody","td","th","thead","tfoot","tr","attributes","a","blockquote","code","del","div","dl","h2","img","input","ins","li","ol","q","section","summary","table","ul","clobber","clobberPrefix","protocols","cite","href","longDesc","src","required","disabled","strip","tagNames","own","hasOwnProperty","transform","state","unsafe","schema","allowComments","patch","comment","allowDoctypes","doctype","stack","content","props","properties","pop","safeElement","element","root","text","mdxJsxFlowElement","results","childrenUnknown","specific","defaults","reduce","acc","prop","_prop$value","safe","propertyValue","findDefinition","definition","values","propertyValuePrimitive","propertyValueMany","url","String","colon","questionMark","numberSign","slash","protocol","safeProtocol","allowed","cleanPosition","start","end","data","definitions","dataDefault","toLowerCase","createFile","VFile","basename","evaluateFile","file","components","componentsNames","evaluateSync","_extends","runtime","development","useDynamicImport","remarkPlugins","remarkGfm","remarkFrontmatter","remarkMath","remarkDirective","rehypePlugins","rehypeSlug","allowAllAttributes","componentName","deepmerge","ctx","replace","rehypeMdxCodeProps","rehypeMathjax","recmaPlugins","error","VFileMessage","messages","fatal","initializeState","markdown","mdast","toMarkdown","extensions","mdxToMarkdown","gfmToMarkdown","mathToMarkdown","directiveToMarkdown","frontmatterToMarkdown","useMdx","live","_useState","useState","setState","useEffect","useDebounceFn","config","Promise","resolve","e","reject","leading","trailing","wait","run","ErrorFallback","_ref","resetErrorBoundary","_jsxs","Alert","status","_jsx","AlertIcon","jsx","AlertTitle","AlertDescription","Button","onClick","StatsErrorReporter","stats","_Fragment","warn","JSON","stringify","FallbackComponent","processContent","_ref2","console","_ref3","className","_objectWithoutPropertiesLoose","_excluded","match","exec","SyntaxHighlighter","language","PreTag","wrapper","_ref4","Wrapper","el","Stack","w","sx","display","verticalAlign","PreviewComponent","React","memo","_ref5","_state$file","_state$file2","setContent","_useState2","setError","_temp","then","_catch","processState","jsxs","ErrorBoundary","StatsReporterError","Preview","useMemo","gfm","frontmatter","math","directive","statistics","Image","defaultValue","alt","rest","Box","Field","defaultProps","Math","random","substring","linkProps","color","textDecoration","_hover","_before","width","height","bottom","left","backgroundColor","transformOrigin","transition","Link","to","_excluded2","isExternal","startsWith","ChakraLink","GatsbyLink","defaultData","depth","baseComponents","MdxField","connectField","jaenField","_React$useState","staticValue","rawValue","setRawValue","combinedComponents","isEditing","LayzEditor","onUpdateValue","fieldType","Editor","lazy","require","MemoedEditor","Suspense","fallback","mode","EditingProvider"],"mappings":"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S,CAAC,gBAAiB,CAAC,YAAa,cACzChE,OAAQ,CAAC,UACTiE,QAAS,IAAIxB,IACbyB,MAAO,IAAIzB,IAIX0B,GAAI,IAAI1B,GAAM,CAAC,YAAa,uBAC5B,IAAK,CACH,OACA,SACA,gBACA,YACA,SACA,QACA,MACA,OACA,SACA,cACA,cACA,OACA,UACA,UACA,UACA,QACA,UACA,QACA,OACA,UACA,SACA,WACA,MAKA,UACA,QACA,SACA,UACA,SACA,WACA,UACA,KACA,QACA,WACA,QACA,OACA,YACA,QACA,SACA,WACA,OACA,SACA,UACA,SACA,OACA,SACA,WACA,MACA,UACA,OACA,QACA,QACA,WACA,QACA,OACA,OACA,QACA,UACA,WACA,QACA,SACA,SACA,QACA,UAGJ2B,QAAS,CAAC,kBAAmB,iBAAkB,KAAM,QACrDC,cAAe,gBACfC,UAAW,CACTC,KAAM,CAAC,OAAQ,SACfC,KAAM,CAAC,OAAQ,QAAS,MAAO,OAAQ,SAAU,QACjDC,SAAU,CAAC,OAAQ,SACnBC,IAAK,CAAC,OAAQ,UAEhBC,SAAU,CACRhB,MAAO,CAACiB,UAAU,EAAMjI,KAAM,aAEhCkI,MAAO,CAAC,UACRC,SAAU,CACR,IACA,IACA,aACA,KACA,OACA,KACA,MACA,UACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,MAIA,QACA,MACA,MACA,KACA,KACA,IACA,UACA,MACA,IACA,KACA,KACA,OACA,IACA,OACA,UACA,SACA,OACA,SACA,SACA,MACA,UACA,MACA,QACA,QACA,KACA,QACA,KACA,QACA,KACA,KACA,KACA,QCcJ,IAAMC,GAAM,CAAE,EAACC,eAgDf,SAASC,GAAUC,EAAO3I,GACxB,GAAIA,GAAwB,iBAATA,EAAmB,CACpC,IAAM4I,EAA0D5I,EAIhE,OAFoC,iBAAhB4I,EAAOxI,KAAoBwI,EAAOxI,KAAO,IAG3D,IAAK,UACH,OAuCR,SAAiBuI,EAAOC,GACtB,GAAID,EAAME,OAAOC,cAAe,CAE9B,IAAM7G,EAAiC,iBAAjB2G,EAAOr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"}
\ No newline at end of file
diff --git a/node_modules/@atsnek/jaen-fields-mdx/dist/index-d9e23d28.js b/node_modules/@atsnek/jaen-fields-mdx/dist/index-d9e23d28.js
deleted file mode 100644
index eba23f2..0000000
--- a/node_modules/@atsnek/jaen-fields-mdx/dist/index-d9e23d28.js
+++ /dev/null
@@ -1,2 +0,0 @@
-import*as e from"react/jsx-runtime";import{jsxs as t,jsx as r,Fragment as n}from"react/jsx-runtime";import{Field as o,connectField as a,EditingProvider as i}from"@atsnek/jaen";import s,{useState as c,useEffect as l,useMemo as u}from"react";import{statistics as f}from"vfile-statistics";import{evaluateSync as m}from"@mdx-js/mdx";import{useDebounceFn as p}from"ahooks";import{frontmatterToMarkdown as d}from"mdast-util-frontmatter";import{gfmToMarkdown as h}from"mdast-util-gfm";import{mathToMarkdown as v}from"mdast-util-math";import{mdxToMarkdown as g}from"mdast-util-mdx";import y from"rehype-slug-custom-id";import b from"rehype-mdx-code-props";import x from"rehype-mathjax/svg";import{directiveToMarkdown as w}from"mdast-util-directive";import k from"remark-directive";import j from"remark-frontmatter";import N from"remark-gfm";import S from"remark-math";import{VFile as O}from"vfile";import{VFileMessage as P}from"vfile-message";import{toMarkdown as A}from"mdast-util-to-markdown";import E from"deepmerge";import{ErrorBoundary as V}from"react-error-boundary";import M from"react-syntax-highlighter";import{Alert as B,AlertIcon as I,AlertTitle as L,AlertDescription as D,Button as J,Stack as T,Box as C,Link as F}from"@chakra-ui/react";import{Link as U}from"gatsby";function q(){return q=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},q.apply(this,arguments)}function _(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t.indexOf(r=a[n])>=0||(o[r]=e[r]);return o}const z=function(e){if(null==e)return W;if("function"==typeof e)return R(e);if("object"==typeof e)return Array.isArray(e)?function(e){const t=[];let r=-1;for(;++r<e.length;)t[r]=z(e[r]);return R(function(...e){let r=-1;for(;++r<t.length;)if(t[r].apply(this,e))return!0;return!1})}(e):function(e){const t=e;return R(function(r){const n=r;let o;for(o in e)if(n[o]!==t[o])return!1;return!0})}(e);if("string"==typeof e)return t=e,R(function(e){return e&&e.type===t});var t;throw new Error("Expected function, string, or object as test")};function R(e){return function(t,r,n){return Boolean(function(e){return null!==e&&"object"==typeof e&&"type"in e}(t)&&e.call(this,t,"number"==typeof r?r:void 0,n||void 0))}}function W(){return!0}const X=[],H=!1;var K=function(){return function(t){!function(e,t,r,n){let o,a,i;a="element",i=r,o=void 0,function(e,t,r,n){let o;o="element";const a=z("element");!function e(t,n,o){const i=t&&"object"==typeof t?t:{};if("string"==typeof i.type){const e="string"==typeof i.tagName?i.tagName:"string"==typeof i.name?i.name:void 0;Object.defineProperty(s,"name",{value:"node ("+t.type+(e?"<"+e+">":"")+")"})}return s;function s(){let i,s,c,l=X;if(a(t,n,o[o.length-1]||void 0)&&(l=function(e){return Array.isArray(e)?e:"number"==typeof e?[!0,e]:null==e?X:[e]}(r(t,o)),l[0]===H))return l;if("children"in t&&t.children){const r=t;if(r.children&&"skip"!==l[0])for(s=0,c=o.concat(r);s>-1&&s<r.children.length;){if(i=e(r.children[s],s,c)(),i[0]===H)return i;s="number"==typeof i[1]?i[1]:s+1}}return l}}(e,void 0,[])()}(e,0,function(e,t){const r=t[t.length-1],n=r?r.children.indexOf(e):void 0;return i(e,n,r)})}(t,0,e)};function e(e,t,r){"img"===e.tagName&&r&&"p"===r.tagName&&(r.tagName="div")}};const Y="object"==typeof self?self:globalThis,G=e=>((e,t)=>{const r=(t,r)=>(e.set(r,t),t),n=o=>{if(e.has(o))return e.get(o);const[a,i]=t[o];switch(a){case 0:case-1:return r(i,o);case 1:{const e=r([],o);for(const t of i)e.push(n(t));return e}case 2:{const e=r({},o);for(const[t,r]of i)e[n(t)]=n(r);return e}case 3:return r(new Date(i),o);case 4:{const{source:e,flags:t}=i;return r(new RegExp(e,t),o)}case 5:{const e=r(new Map,o);for(const[t,r]of i)e.set(n(t),n(r));return e}case 6:{const e=r(new Set,o);for(const t of i)e.add(n(t));return e}case 7:{const{name:e,message:t}=i;return r(new Y[e](t),o)}case 8:return r(BigInt(i),o);case"BigInt":return r(Object(BigInt(i)),o)}return r(new Y[a](i),o)};return n})(new Map,e)(0),Q="",{toString:Z}={},{keys:$}=Object,ee=e=>{const t=typeof e;if("object"!==t||!e)return[0,t];const r=Z.call(e).slice(8,-1);switch(r){case"Array":return[1,Q];case"Object":return[2,Q];case"Date":return[3,Q];case"RegExp":return[4,Q];case"Map":return[5,Q];case"Set":return[6,Q]}return r.includes("Array")?[1,r]:r.includes("Error")?[7,r]:[2,r]},te=([e,t])=>0===e&&("function"===t||"symbol"===t),re=(e,{json:t,lossy:r}={})=>{const n=[];return((e,t,r,n)=>{const o=(e,t)=>{const o=n.push(e)-1;return r.set(t,o),o},a=n=>{if(r.has(n))return r.get(n);let[i,s]=ee(n);switch(i){case 0:{let t=n;switch(s){case"bigint":i=8,t=n.toString();break;case"function":case"symbol":if(e)throw new TypeError("unable to serialize "+s);t=null;break;case"undefined":return o([-1],n)}return o([i,t],n)}case 1:{if(s)return o([s,[...n]],n);const e=[],t=o([i,e],n);for(const t of n)e.push(a(t));return t}case 2:{if(s)switch(s){case"BigInt":return o([s,n.toString()],n);case"Boolean":case"Number":case"String":return o([s,n.valueOf()],n)}if(t&&"toJSON"in n)return a(n.toJSON());const r=[],c=o([i,r],n);for(const t of $(n))!e&&te(ee(n[t]))||r.push([a(t),a(n[t])]);return c}case 3:return o([i,n.toISOString()],n);case 4:{const{source:e,flags:t}=n;return o([i,{source:e,flags:t}],n)}case 5:{const t=[],r=o([i,t],n);for(const[r,o]of n)(e||!te(ee(r))&&!te(ee(o)))&&t.push([a(r),a(o)]);return r}case 6:{const t=[],r=o([i,t],n);for(const r of n)!e&&te(ee(r))||t.push(a(r));return r}}const{message:c}=n;return o([i,{name:s,message:c}],n)};return a})(!(t||r),!!t,new Map,n)(e),n};var ne="function"==typeof structuredClone?(e,t)=>t&&("json"in t||"lossy"in t)?G(re(e,t)):structuredClone(e):(e,t)=>G(re(e,t));const oe=ie("end"),ae=ie("start");function ie(e){return function(t){const r=t&&t.position&&t.position[e]||{};if("number"==typeof r.line&&r.line>0&&"number"==typeof r.column&&r.column>0)return{line:r.line,column:r.column,offset:"number"==typeof r.offset&&r.offset>-1?r.offset:void 0}}}const se=["ariaDescribedBy","ariaLabel","ariaLabelledBy"],ce={ancestors:{tbody:["table"],td:["table"],th:["table"],thead:["table"],tfoot:["table"],tr:["table"]},attributes:{a:[...se,"dataFootnoteBackref","dataFootnoteRef",["className","data-footnote-backref"],"href"],blockquote:["cite"],code:[["className",/^language-./]],del:["cite"],div:["itemScope","itemType"],dl:[...se],h2:[["className","sr-only"]],img:[...se,"longDesc","src"],input:[["disabled",!0],["type","checkbox"]],ins:["cite"],li:[["className","task-list-item"]],ol:[...se,["className","contains-task-list"]],q:["cite"],section:["dataFootnotes",["className","footnotes"]],source:["srcSet"],summary:[...se],table:[...se],ul:[...se,["className","contains-task-list"]],"*":["abbr","accept","acceptCharset","accessKey","action","align","alt","axis","border","cellPadding","cellSpacing","char","charOff","charSet","checked","clear","colSpan","color","cols","compact","coords","dateTime","dir","encType","frame","hSpace","headers","height","hrefLang","htmlFor","id","isMap","itemProp","label","lang","maxLength","media","method","multiple","name","noHref","noShade","noWrap","open","prompt","readOnly","rev","rowSpan","rows","rules","scope","selected","shape","size","span","start","summary","tabIndex","title","useMap","vAlign","value","width"]},clobber:["ariaDescribedBy","ariaLabelledBy","id","name"],clobberPrefix:"user-content-",protocols:{cite:["http","https"],href:["http","https","irc","ircs","mailto","xmpp"],longDesc:["http","https"],src:["http","https"]},required:{input:{disabled:!0,type:"checkbox"}},strip:["script"],tagNames:["a","b","blockquote","br","code","dd","del","details","div","dl","dt","em","h1","h2","h3","h4","h5","h6","hr","i","img","input","ins","kbd","li","ol","p","picture","pre","q","rp","rt","ruby","s","samp","section","source","span","strike","strong","sub","summary","sup","table","tbody","td","tfoot","th","thead","tr","tt","ul","var"]};var le={}.hasOwnProperty;function ue(e,t){if(t&&"object"==typeof t){var r=t;switch("string"==typeof r.type?r.type:""){case"comment":return function(e,t){if(e.schema.allowComments){var r="string"==typeof t.value?t.value:"",n=r.indexOf("--\x3e"),o={type:"comment",value:n<0?r:r.slice(0,n)};return he(o,t),o}}(e,r);case"doctype":return function(e,t){if(e.schema.allowDoctypes){var r={type:"doctype"};return he(r,t),r}}(e,r);case"element":return function(e,t){var r="string"==typeof t.tagName?t.tagName:"";e.stack.push(r);var n=fe(e,t.children),o=me(e,t.properties);e.stack.pop();var a=!1;if(r&&"*"!==r&&(!e.schema.tagNames||e.schema.tagNames.includes(r))&&(a=!0,e.schema.ancestors&&le.call(e.schema.ancestors,r))){var i=e.schema.ancestors[r],s=-1;for(a=!1;++s<i.length;)e.stack.includes(i[s])&&(a=!0)}if(!a)return e.schema.strip&&!e.schema.strip.includes(r)?n:void 0;var c={type:"element",tagName:r,properties:o,children:n};return he(c,t),c}(e,r);case"root":return function(e,t){var r={type:"root",children:fe(e,t.children)};return he(r,t),r}(e,r);case"text":return function(e,t){var r={type:"text",value:"string"==typeof t.value?t.value:""};return he(r,t),r}(0,r);case"mdxJsxTextElement":case"mdxJsxFlowElement":return function(e,t){var r="string"==typeof t.name?t.name:"";e.stack.push(r);var n=fe(e,t.children),o=me(e,t.attributes);e.stack.pop();var a=!1;if(r&&"*"!==r&&(!e.schema.tagNames||e.schema.tagNames.includes(r))&&(a=!0,e.schema.ancestors&&le.call(e.schema.ancestors,r))){var i=e.schema.ancestors[r],s=-1;for(a=!1;++s<i.length;)e.stack.includes(i[s])&&(a=!0)}if(!a)return e.schema.strip&&!e.schema.strip.includes(r)?n:void 0;var c={type:"element",tagName:r,properties:o,children:n};return he(c,t),c}(e,r)}}}function fe(e,t){var r=[];if(Array.isArray(t))for(var n=t,o=-1;++o<n.length;){var a=ue(e,n[o]);a&&(Array.isArray(a)?r.push.apply(r,a):r.push(a))}return r}function me(e,t){var r,n=e.stack[e.stack.length-1],o=e.schema.attributes,a=e.schema.required,i=o&&le.call(o,n)?o[n]:void 0,s=o&&le.call(o,"*")?o["*"]:void 0,c=t&&"object"==typeof t?Array.isArray(t)?t.reduce(function(e,t){var r;return"mdxJsxAttribute"===t.type&&(e[t.name]="mdxJsxAttributeValueExpression"===(null==(r=t.value)?void 0:r.type)?t.value:null===t.value||t.value),e},{}):t:{},l={};for(r in c)if(le.call(c,r)){var u=c[r],f=pe(e,ve(i,r),r,u);null==f&&(f=pe(e,ve(s,r),r,u)),null!=f&&(l[r]=f)}if(a&&le.call(a,n)){var m=a[n];for(r in m)le.call(m,r)&&!le.call(l,r)&&(l[r]=m[r])}return l}function pe(e,t,r,n){return t?Array.isArray(n)?function(e,t,r,n){for(var o=-1,a=[];++o<n.length;){var i=de(e,t,r,n[o]);"number"!=typeof i&&"string"!=typeof i||a.push(i)}return a}(e,t,r,n):de(e,t,r,n):void 0}function de(e,t,r,n){if("mdxJsxAttributeValueExpression"===(null==n?void 0:n.type))return de(e,t,r,"undefined"===n.value?void 0:"true"===n.value||("false"===n.value?void 0:n.value));if(("boolean"==typeof n||"number"==typeof n||"string"==typeof n)&&function(e,t,r){var n=e.schema.protocols&&le.call(e.schema.protocols,t)?e.schema.protocols[t]:void 0;if(!n||0===n.length)return!0;var o=String(r),a=o.indexOf(":"),i=o.indexOf("?"),s=o.indexOf("#"),c=o.indexOf("/");if(a<0||c>-1&&a>c||i>-1&&a>i||s>-1&&a>s)return!0;for(var l=-1;++l<n.length;){var u=n[l];if(a===u.length&&o.slice(0,u.length)===u)return!0}return!1}(e,r,n)){if("object"==typeof t&&t.length>1){for(var o=!1,a=0;++a<t.length;){var i=t[a];if(i&&"object"==typeof i&&"flags"in i){if(i.test(String(n))){o=!0;break}}else if(i===n){o=!0;break}}if(!o)return}return e.schema.clobber&&e.schema.clobberPrefix&&e.schema.clobber.includes(r)?e.schema.clobberPrefix+n:n}}function he(e,t){var r=function(e){const t=ae(e),r=oe(e);if(t&&r)return{start:t,end:r}}(t);t.data&&(e.data=ne(t.data)),r&&(e.position=r)}function ve(e,t){var r,n=-1;if(e)for(;++n<e.length;){var o=e[n],a="string"==typeof o?o:o[0];if(a===t)return o;if("data*"===a&&(r=o),"*"===a)return o}if(t.length>4&&"data"===t.slice(0,4).toLowerCase())return r}function ge(e){return new O({basename:"example.mdx",value:e})}function ye(t,r){var n;try{t.result=m(t,q({},e,{development:!1,useDynamicImport:!0,remarkPlugins:[N,j,S,k,function(){return function(e){t.data.mdast=e}}],rehypePlugins:[y,K,(n=Object.keys(r),void 0===n&&(n=[]),function(){var e=n.reduce(function(e,t){return e[t]=["*"],e},{}),t=E(ce,{tagNames:n,attributes:q({"*":["className"],code:[["className",/^language-./,"math-inline","math-display"]]},e),clobberPrefix:""});return function(e){var r,n,o,a;return r=e,o={type:"root",children:[]},(a=ue({schema:(n=t)?q({},ce,n):ce,stack:[]},r))&&(Array.isArray(a)?1===a.length?o=a[0]:o.children=a:o=a),o}}),[b,{tagName:"code"}],x],recmaPlugins:[]})).default}catch(e){var o=e instanceof P?e:new P(e);t.messages.includes(o)||t.messages.push(o),o.fatal=!0}}var be=function(e,t){void 0===t&&(t={});var r=e.mdast?A(e.mdast,{extensions:[g(),h(),v(),w,d()]}):"",n=ge(r);return ye(n,t),q({},e,{value:r,file:n})};function xe(e,t,r){void 0===t&&(t=!1),void 0===r&&(r={});var n=c(function(){return be(e,r)}),o=n[0],a=n[1];return l(function(){t&&a(be(e,r))},[e,t]),[o,p(function(e){try{var t=ge(e.value);return ye(t,r),a(q({},e,{file:t})),Promise.resolve()}catch(e){return Promise.reject(e)}},{leading:!0,trailing:!0,wait:200}).run]}var we=function(e){var n=e.error,o=e.resetErrorBoundary;return t(B,{status:"error",children:[r(I,{}),r(L,{children:"Something went wrong"}),t(D,{children:[r("pre",{children:n.message}),r(J,{onClick:o,children:"Try again"})]})]})},ke=function(e){var t,o=e.stats;return r(n,{children:o.fatal||o.warn?r("pre",{children:r("code",{children:(t=e.state.file,JSON.stringify(t.messages,null,2))})}):null})},je=["className"],Ne=function(e){var t=new P(e.error);return t.fatal=!0,r("pre",{children:r("code",{children:String(t)})})},Se=function(e){var t=e.state,n=e.components;try{if("function"!=typeof t.file.result)throw console.error(t),new Error("Preview could not be generated.");return t.file.result({components:q({code:function(e){var t=e.className,n=_(e,je),o=/language-(\w+)/.exec(t||"");return o?r(M,q({language:o[1],PreTag:"div"},n)):r("code",q({className:t},n))}},n,{wrapper:function(e){var t=null==n?void 0:n.wrapper,o=r(T,{w:"full",sx:{"mjx-container":{display:"inline-block !important",verticalAlign:"text-bottom !important"}},children:e.children});return t?r(t,{children:o}):o}})})}catch(e){throw e}},Oe=s.memo(function(e){var o,a,i=e.state,s=e.stats,u=e.components,f=c(function(){return Se({state:i,components:u})}),m=f[0],p=f[1],d=c(null),h=d[0],v=d[1];return l(function(){!function(){try{var e=function(e,t){try{var r=Promise.resolve(Se({state:i,components:u})).then(function(e){p(e),v(null)})}catch(e){return t(e)}return r&&r.then?r.then(void 0,t):r}(0,function(e){v(e)});return Promise.resolve(e&&e.then?e.then(function(){}):void 0)}catch(e){return Promise.reject(e)}}()},[null==(o=i.file)?void 0:o.value,u]),t(V,{FallbackComponent:we,children:[r("noscript",{children:"Enable JavaScript for the rendered result."}),(null==(a=i.file)?void 0:a.result)&&r(n,{children:m}),h&&r(Ne,{error:h}),r(ke,{state:i,stats:s})]})}),Pe=s.memo(function(e){var t=e.components,n=e.mdast,o=xe(u(function(){return{gfm:!0,frontmatter:!0,math:!0,directive:!0,mdast:n}},[n]),!0,t)[0],a=u(function(){return o.file?f(o.file):{}},[o.file]);return r(Oe,{state:o,stats:a,components:t})}),Ae=["name","defaultValue","alt"],Ee=["to","children"],Ve=function(e){var t=e.name,n=e.defaultValue,a=e.alt,i=_(e,Ae);return r(C,q({},i,{children:r(o.Image,{name:t,defaultValue:n,alt:a})}))};Ve.defaultProps={name:function(){return"image-"+(Math.random()+1).toString(36).substring(7)},alt:"Placeholder Image Alt",defaultValue:"https://via.placeholder.com/150"};var Me={position:"relative",color:"brand.600",textDecoration:"none",w:"fit-content",_hover:{color:"brand.600",_before:{transform:"scaleX(1)"}},_before:{content:'""',position:"absolute",display:"block",width:"100%",height:"2px",bottom:-.5,left:0,backgroundColor:"brand.600",transform:"scaleX(0)",transformOrigin:"top left",transition:"transform 0.3s ease"}},Be=function(e){var t=e.to,n=e.children,o=_(e,Ee),a=void 0!==o.isExternal?o.isExternal:t.startsWith("http://")||t.startsWith("https://");return r(F,q(a?{href:t,isExternal:!0}:{as:U,to:t},Me,{children:n}))};Be.defaultProps={to:"/",children:"My Link"};var Ie={type:"root",children:[{type:"heading",depth:1,children:[{type:"text",value:"Hello, world!",position:{start:{line:1,column:3,offset:2},end:{line:1,column:16,offset:15}}}],position:{start:{line:1,column:1,offset:0},end:{line:1,column:16,offset:15}}},{type:"paragraph",children:[{type:"text",value:"// This is a ",position:{start:{line:3,column:1,offset:17},end:{line:3,column:14,offset:30}}},{type:"strong",children:[{type:"text",value:"jaen",position:{start:{line:3,column:16,offset:32},end:{line:3,column:20,offset:36}}}],position:{start:{line:3,column:14,offset:30},end:{line:3,column:22,offset:38}}},{type:"text",value:" MDX field.",position:{start:{line:3,column:22,offset:38},end:{line:3,column:33,offset:49}}}],position:{start:{line:3,column:1,offset:17},end:{line:3,column:33,offset:49}}},{type:"paragraph",children:[{type:"text",value:"// ## Usage",position:{start:{line:5,column:1,offset:51},end:{line:5,column:12,offset:62}}}],position:{start:{line:5,column:1,offset:51},end:{line:5,column:12,offset:62}}},{type:"paragraph",children:[{type:"text",value:"// You can use this field to write markdown content.\n//",position:{start:{line:7,column:1,offset:64},end:{line:8,column:3,offset:119}}}],position:{start:{line:7,column:1,offset:64},end:{line:8,column:4,offset:120}}}],position:{start:{line:1,column:1,offset:0},end:{line:15,column:8,offset:228}}},Le={Image:Ve,Link:Be,a:function(e){return r(Be,{to:e.href,children:e.children})},img:function(e){var t=e.src,n=e.alt;return r(Ve,{name:t+"-"+n,defaultValue:t,alt:n})}},De=a(function(e){var t=e.jaenField,n=e.components,o=s.useState(t.staticValue||Ie),a=o[0],i=o[1];l(function(){i(t.value||t.staticValue||Ie)},[t.value]);var c=u(function(){return q({},Le,n)},[Le,JSON.stringify(n)]);return t.isEditing?r(Te,{components:c,onUpdateValue:t.onUpdateValue,rawValue:a}):r(Pe,{components:c,mdast:a})},{fieldType:"IMA:MdxField"}),Je=function(e){var t=e.components,n=e.onUpdateValue,o=e.value,a=e.isEditing,s=u(function(){return q({},Le,t)},[Le,t]);return a?r(i,{isEditing:a,children:r(Te,{components:s,onUpdateValue:n,rawValue:o})}):r(Pe,{components:s,mdast:o})},Te=function(e){var t=e.components,n=e.onUpdateValue,o=e.rawValue,a=s.lazy(function(){try{return Promise.resolve(import("./Editor-554e9024.js"))}catch(e){return Promise.reject(e)}}),i=s.useMemo(function(){return a},[]);return r(s.Suspense,{fallback:r("div",{children:"Loading..."}),children:r(i,{components:t,onUpdateValue:n,mode:"editAndPreview",mdast:o})})};export{we as E,De as M,Oe as P,Je as U,q as _,xe as u};
-//# sourceMappingURL=index-d9e23d28.js.map
diff --git a/node_modules/@atsnek/jaen-fields-mdx/dist/index-d9e23d28.js.map b/node_modules/@atsnek/jaen-fields-mdx/dist/index-d9e23d28.js.map
deleted file mode 100644
index 4a5d1fa..0000000
--- a/node_modules/@atsnek/jaen-fields-mdx/dist/index-d9e23d28.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"index-d9e23d28.js","sources":["../../../node_modules/unist-util-is/lib/index.js","../../../node_modules/unist-util-visit-parents/lib/index.js","../src/MdxField/rehype-unwrap-images.tsx","../../../node_modules/unist-util-visit/lib/index.js","../../../node_modules/@ungap/structured-clone/esm/types.js","../../../node_modules/@ungap/structured-clone/esm/deserialize.js","../../../node_modules/@ungap/structured-clone/esm/serialize.js","../../../node_modules/@ungap/structured-clone/esm/index.js","../../../node_modules/unist-util-position/lib/index.js","../../../node_modules/hast-util-sanitize/lib/schema.js","../src/hast-util-sanitize-mdx/sanitize.ts","../src/MdxField/use-mdx.tsx","../src/rehype-sanitize-mdx/index.ts","../src/MdxField/components/ErrorFallback.tsx","../src/MdxField/components/StatsReporterError.tsx","../src/MdxField/components/PreviewComponent.tsx","../src/MdxField/components/Preview.tsx","../src/MdxField/default-components.tsx","../src/MdxField/default-data.ts","../src/MdxField/MdxField.tsx"],"sourcesContent":["/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","import {Element} from 'hast'\nimport {Plugin} from 'unified'\nimport {visit} from 'unist-util-visit'\n\nexport const rehypeUnwrapImages: Plugin<[]> = () => {\n  return tree => {\n    visit(tree as any, 'element', visitor)\n  }\n\n  function visitor(node: Element, _: number, parent: Element | undefined) {\n    if (node.tagName === 'img' && parent && parent.tagName === 'p') {\n      parent.tagName = 'div'\n    }\n  }\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","// Couple of ARIA attributes allowed in several, but not all, places.\nconst aria = ['ariaDescribedBy', 'ariaLabel', 'ariaLabelledBy']\n\n/**\n * Default schema.\n *\n * Follows GitHub style sanitation.\n *\n * @type {import('./index.js').Schema}\n */\nexport const defaultSchema = {\n  ancestors: {\n    tbody: ['table'],\n    td: ['table'],\n    th: ['table'],\n    thead: ['table'],\n    tfoot: ['table'],\n    tr: ['table']\n  },\n  attributes: {\n    a: [\n      ...aria,\n      // Note: these 3 are used by GFM footnotes, they do work on all links.\n      'dataFootnoteBackref',\n      'dataFootnoteRef',\n      ['className', 'data-footnote-backref'],\n      'href'\n    ],\n    blockquote: ['cite'],\n    // Note: this class is not normally allowed by GH, when manually writing\n    // `code` as HTML in markdown, they adds it some other way.\n    // We can’t do that, so we have to allow it.\n    code: [['className', /^language-./]],\n    del: ['cite'],\n    div: ['itemScope', 'itemType'],\n    dl: [...aria],\n    // Note: this is used by GFM footnotes.\n    h2: [['className', 'sr-only']],\n    img: [...aria, 'longDesc', 'src'],\n    // Note: `input` is not normally allowed by GH, when manually writing\n    // it in markdown, they add it from tasklists some other way.\n    // We can’t do that, so we have to allow it.\n    input: [\n      ['disabled', true],\n      ['type', 'checkbox']\n    ],\n    ins: ['cite'],\n    // Note: this class is not normally allowed by GH, when manually writing\n    // `li` as HTML in markdown, they adds it some other way.\n    // We can’t do that, so we have to allow it.\n    li: [['className', 'task-list-item']],\n    // Note: this class is not normally allowed by GH, when manually writing\n    // `ol` as HTML in markdown, they adds it some other way.\n    // We can’t do that, so we have to allow it.\n    ol: [...aria, ['className', 'contains-task-list']],\n    q: ['cite'],\n    section: ['dataFootnotes', ['className', 'footnotes']],\n    source: ['srcSet'],\n    summary: [...aria],\n    table: [...aria],\n    // Note: this class is not normally allowed by GH, when manually writing\n    // `ol` as HTML in markdown, they adds it some other way.\n    // We can’t do that, so we have to allow it.\n    ul: [...aria, ['className', 'contains-task-list']],\n    '*': [\n      'abbr',\n      'accept',\n      'acceptCharset',\n      'accessKey',\n      'action',\n      'align',\n      'alt',\n      'axis',\n      'border',\n      'cellPadding',\n      'cellSpacing',\n      'char',\n      'charOff',\n      'charSet',\n      'checked',\n      'clear',\n      'colSpan',\n      'color',\n      'cols',\n      'compact',\n      'coords',\n      'dateTime',\n      'dir',\n      // Note: `disabled` is technically allowed on all elements by GH.\n      // But it is useless on everything except `input`.\n      // Because `input`s are normally not allowed, but we allow them for\n      // checkboxes due to tasklists, we allow `disabled` only there.\n      'encType',\n      'frame',\n      'hSpace',\n      'headers',\n      'height',\n      'hrefLang',\n      'htmlFor',\n      'id',\n      'isMap',\n      'itemProp',\n      'label',\n      'lang',\n      'maxLength',\n      'media',\n      'method',\n      'multiple',\n      'name',\n      'noHref',\n      'noShade',\n      'noWrap',\n      'open',\n      'prompt',\n      'readOnly',\n      'rev',\n      'rowSpan',\n      'rows',\n      'rules',\n      'scope',\n      'selected',\n      'shape',\n      'size',\n      'span',\n      'start',\n      'summary',\n      'tabIndex',\n      'title',\n      'useMap',\n      'vAlign',\n      'value',\n      'width'\n    ]\n  },\n  clobber: ['ariaDescribedBy', 'ariaLabelledBy', 'id', 'name'],\n  clobberPrefix: 'user-content-',\n  protocols: {\n    cite: ['http', 'https'],\n    href: ['http', 'https', 'irc', 'ircs', 'mailto', 'xmpp'],\n    longDesc: ['http', 'https'],\n    src: ['http', 'https']\n  },\n  required: {\n    input: {disabled: true, type: 'checkbox'}\n  },\n  strip: ['script'],\n  tagNames: [\n    'a',\n    'b',\n    'blockquote',\n    'br',\n    'code',\n    'dd',\n    'del',\n    'details',\n    'div',\n    'dl',\n    'dt',\n    'em',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'hr',\n    'i',\n    'img',\n    // Note: `input` is not normally allowed by GH, when manually writing\n    // it in markdown, they add it from tasklists some other way.\n    // We can’t do that, so we have to allow it.\n    'input',\n    'ins',\n    'kbd',\n    'li',\n    'ol',\n    'p',\n    'picture',\n    'pre',\n    'q',\n    'rp',\n    'rt',\n    'ruby',\n    's',\n    'samp',\n    'section',\n    'source',\n    'span',\n    'strike',\n    'strong',\n    'sub',\n    'summary',\n    'sup',\n    'table',\n    'tbody',\n    'td',\n    'tfoot',\n    'th',\n    'thead',\n    'tr',\n    'tt',\n    'ul',\n    'var'\n  ]\n}\n","// @ts-nocheck\n\n/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n */\n\n/**\n * @typedef {[string, ...Array<Exclude<Properties[keyof Properties], Array<any>> | RegExp>] | string} PropertyDefinition\n *   Definition for a property.\n *\n * @typedef Schema\n *   Schema that defines what nodes and properties are allowed.\n *\n *   The default schema is `defaultSchema`, which follows how GitHub cleans.\n *   If any top-level key is missing in the given schema, the corresponding\n *   value of the default schema is used.\n *\n *   To extend the standard schema with a few changes, clone `defaultSchema`\n *   like so:\n *\n *   ```js\n *   import deepmerge from 'deepmerge'\n *   import {h} from 'hastscript'\n *   import {defaultSchema, sanitize} from 'hast-util-sanitize'\n *\n *   // This allows `className` on all elements.\n *   const schema = deepmerge(defaultSchema, {attributes: {'*': ['className']}})\n *\n *   const tree = sanitize(h('div', {className: ['foo']}), schema)\n *\n *   // `tree` still has `className`.\n *   console.log(tree)\n *   // {\n *   //   type: 'element',\n *   //   tagName: 'div',\n *   //   properties: {className: ['foo']},\n *   //   children: []\n *   // }\n *   ```\n * @property {boolean | null | undefined} [allowComments=false]\n *   Whether to allow comment nodes (default: `false`).\n *\n *   For example:\n *\n *   ```js\n *   allowComments: true\n *   ```\n * @property {boolean | null | undefined} [allowDoctypes=false]\n *   Whether to allow doctype nodes (default: `false`).\n *\n *   For example:\n *\n *   ```js\n *   allowDoctypes: true\n *   ```\n * @property {Record<string, Array<string>> | null | undefined} [ancestors]\n *   Map of tag names to a list of tag names which are required ancestors\n *   (default: `defaultSchema.ancestors`).\n *\n *   Elements with these tag names will be ignored if they occur outside of one\n *   of their allowed parents.\n *\n *   For example:\n *\n *   ```js\n *   ancestors: {\n *     tbody: ['table'],\n *     // …\n *     tr: ['table']\n *   }\n *   ```\n * @property {Record<string, Array<PropertyDefinition>> | null | undefined} [attributes]\n *   Map of tag names to allowed property names (default:\n *   `defaultSchema.attributes`).\n *\n *   The special key `'*'` as a tag name defines property names allowed on all\n *   elements.\n *\n *   The special value `'data*'` as a property name can be used to allow all\n *   `data` properties.\n *\n *   For example:\n *\n *   ```js\n *   attributes: {\n *     'ariaDescribedBy', 'ariaLabel', 'ariaLabelledBy', …, 'href'\n *     // …\n *     '*': [\n *       'abbr',\n *       'accept',\n *       'acceptCharset',\n *       // …\n *       'vAlign',\n *       'value',\n *       'width'\n *     ]\n *   }\n *   ```\n *\n *   Instead of a single string in the array, which allows any property value\n *   for the field, you can use an array to allow several values.\n *   For example, `input: ['type']` allows `type` set to any value on `input`s.\n *   But `input: [['type', 'checkbox', 'radio']]` allows `type` when set to\n *   `'checkbox'` or `'radio'`.\n *\n *   You can use regexes, so for example `span: [['className', /^hljs-/]]`\n *   allows any class that starts with `hljs-` on `span`s.\n *\n *   When comma- or space-separated values are used (such as `className`), each\n *   value in is checked individually.\n *   For example, to allow certain classes on `span`s for syntax highlighting,\n *   use `span: [['className', 'number', 'operator', 'token']]`.\n *   This will allow `'number'`, `'operator'`, and `'token'` classes, but drop\n *   others.\n * @property {Array<string> | null | undefined} [clobber]\n *   List of property names that clobber (default: `defaultSchema.clobber`).\n *\n *   For example:\n *\n *   ```js\n *   clobber: ['ariaDescribedBy', 'ariaLabelledBy', 'id', 'name']\n *   ```\n * @property {string | null | undefined} [clobberPrefix]\n *   Prefix to use before clobbering properties (default:\n *   `defaultSchema.clobberPrefix`).\n *\n *   For example:\n *\n *   ```js\n *   clobberPrefix: 'user-content-'\n *   ```\n * @property {Record<string, Array<string> | null | undefined> | null | undefined} [protocols]\n *   Map of *property names* to allowed protocols (default:\n *   `defaultSchema.protocols`).\n *\n *   This defines URLs that are always allowed to have local URLs (relative to\n *   the current website, such as `this`, `#this`, `/this`, or `?this`), and\n *   only allowed to have remote URLs (such as `https://example.com`) if they\n *   use a known protocol.\n *\n *   For example:\n *\n *   ```js\n *   protocols: {\n *     cite: ['http', 'https'],\n *     // …\n *     src: ['http', 'https']\n *   }\n *   ```\n * @property {Record<string, Record<string, Properties[keyof Properties]>> | null | undefined} [required]\n *   Map of tag names to required property names with a default value\n *   (default: `defaultSchema.required`).\n *\n *   This defines properties that must be set.\n *   If a field does not exist (after the element was made safe), these will be\n *   added with the given value.\n *\n *   For example:\n *\n *   ```js\n *   required: {\n *     input: {disabled: true, type: 'checkbox'}\n *   }\n *   ```\n *\n *   > 👉 **Note**: properties are first checked based on `schema.attributes`,\n *   > then on `schema.required`.\n *   > That means properties could be removed by `attributes` and then added\n *   > again with `required`.\n * @property {Array<string> | null | undefined} [strip]\n *   List of tag names to strip from the tree (default: `defaultSchema.strip`).\n *\n *   By default, unsafe elements (those not in `schema.tagNames`) are replaced\n *   by what they contain.\n *   This option can drop their contents.\n *\n *   For example:\n *\n *   ```js\n *   strip: ['script']\n *   ```\n * @property {Array<string> | null | undefined} [tagNames]\n *   List of allowed tag names (default: `defaultSchema.tagNames`).\n *\n *   For example:\n *\n *   ```js\n *   tagNames: [\n *     'a',\n *     'b',\n *     // …\n *     'ul',\n *     'var'\n *   ]\n *   ```\n *\n * @typedef State\n *   Info passed around.\n * @property {Readonly<Schema>} schema\n *   Schema.\n * @property {Array<string>} stack\n *   Tag names of ancestors.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {position} from 'unist-util-position'\nimport {defaultSchema} from 'hast-util-sanitize'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Sanitize a tree.\n *\n * @param {Readonly<Nodes>} node\n *   Unsafe tree.\n * @param {Readonly<Schema> | null | undefined} [options]\n *   Configuration (default: `defaultSchema`).\n * @returns {Nodes}\n *   New, safe tree.\n */\nexport function sanitize(node, options) {\n  /** @type {Nodes} */\n  let ctx = {type: 'root', children: []}\n\n  /** @type {State} */\n  const state = {\n    schema: options ? {...defaultSchema, ...options} : defaultSchema,\n    stack: []\n  }\n  const replace = transform(state, node)\n\n  if (replace) {\n    if (Array.isArray(replace)) {\n      if (replace.length === 1) {\n        ctx = replace[0]\n      } else {\n        ctx.children = replace\n      }\n    } else {\n      ctx = replace\n    }\n  }\n\n  return ctx\n}\n\n/**\n * Sanitize `node`.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<unknown>} node\n *   Unsafe node.\n * @returns {Array<ElementContent> | Nodes | undefined}\n *   Safe result.\n */\nfunction transform(state, node) {\n  if (node && typeof node === 'object') {\n    const unsafe = /** @type {Record<string, Readonly<unknown>>} */ node\n\n    const type = typeof unsafe.type === 'string' ? unsafe.type : ''\n\n    switch (type) {\n      case 'comment': {\n        return comment(state, unsafe)\n      }\n\n      case 'doctype': {\n        return doctype(state, unsafe)\n      }\n\n      case 'element': {\n        return element(state, unsafe)\n      }\n\n      case 'root': {\n        return root(state, unsafe)\n      }\n\n      case 'text': {\n        return text(state, unsafe)\n      }\n\n      case 'mdxJsxTextElement':\n      case 'mdxJsxFlowElement': {\n        return mdxJsxFlowElement(state, unsafe)\n      }\n\n      default:\n    }\n  }\n}\n\n/**\n * Make a safe comment.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe comment-like value.\n * @returns {Comment | undefined}\n *   Safe comment (if with `allowComments`).\n */\nfunction comment(state, unsafe) {\n  if (state.schema.allowComments) {\n    // See <https://html.spec.whatwg.org/multipage/parsing.html#serialising-html-fragments>\n    const result = typeof unsafe.value === 'string' ? unsafe.value : ''\n    const index = result.indexOf('-->')\n    const value = index < 0 ? result : result.slice(0, index)\n\n    /** @type {Comment} */\n    const node = {type: 'comment', value}\n\n    patch(node, unsafe)\n\n    return node\n  }\n}\n\n/**\n * Make a safe doctype.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe doctype-like value.\n * @returns {Doctype | undefined}\n *   Safe doctype (if with `allowDoctypes`).\n */\nfunction doctype(state, unsafe) {\n  if (state.schema.allowDoctypes) {\n    /** @type {Doctype} */\n    const node = {type: 'doctype'}\n\n    patch(node, unsafe)\n\n    return node\n  }\n}\n\n/**\n * Make a safe element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe element-like value.\n * @returns {Array<ElementContent> | Element | undefined}\n *   Safe element.\n */\nfunction element(state, unsafe) {\n  const name = typeof unsafe.tagName === 'string' ? unsafe.tagName : ''\n\n  state.stack.push(name)\n\n  const content = /** @type {Array<ElementContent>} */ children(\n    state,\n    unsafe.children\n  )\n\n  const props = properties(state, unsafe.properties)\n\n  state.stack.pop()\n\n  let safeElement = false\n\n  if (\n    name &&\n    name !== '*' &&\n    (!state.schema.tagNames || state.schema.tagNames.includes(name))\n  ) {\n    safeElement = true\n\n    // Some nodes can break out of their context if they don’t have a certain\n    // ancestor.\n    if (state.schema.ancestors && own.call(state.schema.ancestors, name)) {\n      const ancestors = state.schema.ancestors[name]\n      let index = -1\n\n      safeElement = false\n\n      while (++index < ancestors.length) {\n        if (state.stack.includes(ancestors[index])) {\n          safeElement = true\n        }\n      }\n    }\n  }\n\n  if (!safeElement) {\n    return state.schema.strip && !state.schema.strip.includes(name)\n      ? content\n      : undefined\n  }\n\n  /** @type {Element} */\n  const node = {\n    type: 'element',\n    tagName: name,\n    properties: props,\n    children: content\n  }\n\n  patch(node, unsafe)\n\n  return node\n}\n\n/**\n * Make a safe mdxJsxFlowElement.\n *\n * @param {State} state\n *  Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>} unsafe\n * Unsafe mdxJsxFlowElement-like value.\n * @returns {Array<ElementContent> | Element | undefined}\n * Safe element.\n */\nfunction mdxJsxFlowElement(state, unsafe) {\n  const name = typeof unsafe.name === 'string' ? unsafe.name : ''\n\n  state.stack.push(name)\n\n  const content = /** @type {Array<ElementContent>} */ children(\n    state,\n    unsafe.children\n  )\n\n  const props = properties(state, unsafe.attributes)\n\n  state.stack.pop()\n\n  let safeElement = false\n\n  if (\n    name &&\n    name !== '*' &&\n    (!state.schema.tagNames || state.schema.tagNames.includes(name))\n  ) {\n    safeElement = true\n\n    // Some nodes can break out of their context if they don’t have a certain\n    // ancestor.\n    if (state.schema.ancestors && own.call(state.schema.ancestors, name)) {\n      const ancestors = state.schema.ancestors[name]\n      let index = -1\n\n      safeElement = false\n\n      while (++index < ancestors.length) {\n        if (state.stack.includes(ancestors[index])) {\n          safeElement = true\n        }\n      }\n    }\n  }\n\n  if (!safeElement) {\n    return state.schema.strip && !state.schema.strip.includes(name)\n      ? content\n      : undefined\n  }\n\n  /** @type {Element} */\n  const node = {\n    type: 'element',\n    tagName: name,\n    properties: props,\n    children: content\n  }\n\n  patch(node, unsafe)\n\n  return node\n}\n\n/**\n * Make a safe root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe root-like value.\n * @returns {Root}\n *   Safe root.\n */\nfunction root(state, unsafe) {\n  const content = /** @type {Array<RootContent>} */ children(\n    state,\n    unsafe.children\n  )\n\n  /** @type {Root} */\n  const node = {type: 'root', children: content}\n\n  patch(node, unsafe)\n\n  return node\n}\n\n/**\n * Make a safe text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe text-like value.\n * @returns {Text}\n *   Safe text.\n */\nfunction text(_, unsafe) {\n  const value = typeof unsafe.value === 'string' ? unsafe.value : ''\n  /** @type {Text} */\n  const node = {type: 'text', value}\n\n  patch(node, unsafe)\n\n  return node\n}\n\n/**\n * Make children safe.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<unknown>} children\n *   Unsafe value.\n * @returns {Array<Nodes>}\n *   Safe children.\n */\nfunction children(state, children) {\n  /** @type {Array<Nodes>} */\n  const results = []\n\n  if (Array.isArray(children)) {\n    const childrenUnknown = /** @type {Array<Readonly<unknown>>} */ children\n    let index = -1\n\n    while (++index < childrenUnknown.length) {\n      const value = transform(state, childrenUnknown[index])\n\n      if (value) {\n        if (Array.isArray(value)) {\n          results.push(...value)\n        } else {\n          results.push(value)\n        }\n      }\n    }\n  }\n\n  return results\n}\n\n/**\n * Make element properties safe.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<unknown>} properties\n *   Unsafe value.\n * @returns {Properties}\n *   Safe value.\n */\nfunction properties(state, properties) {\n  const tagName = state.stack[state.stack.length - 1]\n  const attributes = state.schema.attributes\n  const required = state.schema.required\n  const specific =\n    attributes && own.call(attributes, tagName)\n      ? attributes[tagName]\n      : undefined\n  const defaults =\n    attributes && own.call(attributes, '*') ? attributes['*'] : undefined\n  const props =\n    /** @type {Readonly<Record<string, Readonly<unknown>>>} */ properties &&\n    typeof properties === 'object'\n      ? Array.isArray(properties)\n        ? // Reduce to an object.\n          properties.reduce((acc, prop) => {\n            if (prop.type === 'mdxJsxAttribute') {\n              if (prop.value?.type === 'mdxJsxAttributeValueExpression') {\n                acc[prop.name] = prop.value\n              } else {\n                // Use `true` for boolean attributes. When prop={null} is passed, it’s\n                // is a of type `mdxJsxAttributeValueExpression` with value `null`.\n\n                if (prop.value === null) {\n                  acc[prop.name] = true\n                } else {\n                  acc[prop.name] = prop.value\n                }\n              }\n            }\n            return acc\n          }, {})\n        : properties\n      : {}\n\n  /** @type {Properties} */\n  const result = {}\n  /** @type {string} */\n  let key\n\n  for (key in props) {\n    if (own.call(props, key)) {\n      const unsafe = props[key]\n\n      let safe = propertyValue(\n        state,\n        findDefinition(specific, key),\n        key,\n        unsafe\n      )\n\n      if (safe === null || safe === undefined) {\n        safe = propertyValue(state, findDefinition(defaults, key), key, unsafe)\n      }\n\n      if (safe !== null && safe !== undefined) {\n        result[key] = safe\n      }\n    }\n  }\n\n  if (required && own.call(required, tagName)) {\n    const properties = required[tagName]\n\n    for (key in properties) {\n      if (own.call(properties, key) && !own.call(result, key)) {\n        result[key] = properties[key]\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Sanitize a property value.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<PropertyDefinition> | undefined} definition\n *   Definition.\n * @param {string} key\n *   Field name.\n * @param {Readonly<unknown>} value\n *   Unsafe value (but an array).\n * @returns {Array<number | string> | boolean | number | string | undefined}\n *   Safe value.\n */\nfunction propertyValue(state, definition, key, value) {\n  return definition\n    ? Array.isArray(value)\n      ? propertyValueMany(state, definition, key, value)\n      : propertyValuePrimitive(state, definition, key, value)\n    : undefined\n}\n\n/**\n * Sanitize a property value which is a list.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<PropertyDefinition>} definition\n *   Definition.\n * @param {string} key\n *   Field name.\n * @param {Readonly<Array<Readonly<unknown>>>} values\n *   Unsafe value (but an array).\n * @returns {Array<number | string>}\n *   Safe value.\n */\nfunction propertyValueMany(state, definition, key, values) {\n  let index = -1\n  /** @type {Array<number | string>} */\n  const result = []\n\n  while (++index < values.length) {\n    const value = propertyValuePrimitive(state, definition, key, values[index])\n\n    if (typeof value === 'number' || typeof value === 'string') {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Sanitize a property value which is a primitive.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<PropertyDefinition>} definition\n *   Definition.\n * @param {string} key\n *   Field name.\n * @param {Readonly<unknown>} value\n *   Unsafe value (but not an array).\n * @returns {boolean | number | string | undefined}\n *   Safe value.\n */\nfunction propertyValuePrimitive(state, definition, key, value) {\n  if (value?.type === 'mdxJsxAttributeValueExpression') {\n    if (value.value === 'undefined') {\n      return propertyValuePrimitive(state, definition, key, undefined)\n    } else if (value.value === 'true') {\n      return propertyValuePrimitive(state, definition, key, true)\n    } else if (value.value === 'false') {\n      return propertyValuePrimitive(state, definition, key, undefined)\n    } else {\n      return propertyValuePrimitive(state, definition, key, value.value)\n    }\n  }\n\n  if (\n    typeof value !== 'boolean' &&\n    typeof value !== 'number' &&\n    typeof value !== 'string'\n  ) {\n    return\n  }\n\n  if (!safeProtocol(state, key, value)) {\n    return\n  }\n\n  // Just a string, or only one item in an array, means all values are OK.\n  // More than one item means an allow list.\n  if (typeof definition === 'object' && definition.length > 1) {\n    let ok = false\n    let index = 0 // Ignore `key`, which is the first item.\n\n    while (++index < definition.length) {\n      const allowed = definition[index]\n\n      // Expression.\n      if (allowed && typeof allowed === 'object' && 'flags' in allowed) {\n        if (allowed.test(String(value))) {\n          ok = true\n          break\n        }\n      }\n      // Primitive.\n      else if (allowed === value) {\n        ok = true\n        break\n      }\n    }\n\n    if (!ok) return\n  }\n\n  return state.schema.clobber &&\n    state.schema.clobberPrefix &&\n    state.schema.clobber.includes(key)\n    ? state.schema.clobberPrefix + value\n    : value\n}\n\n/**\n * Check whether `value` is a safe URL.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} key\n *   Field name.\n * @param {Readonly<unknown>} value\n *   Unsafe value.\n * @returns {boolean}\n *   Whether it’s a safe value.\n */\nfunction safeProtocol(state, key, value) {\n  const protocols =\n    state.schema.protocols && own.call(state.schema.protocols, key)\n      ? state.schema.protocols[key]\n      : undefined\n\n  // No protocols defined? Then everything is fine.\n  if (!protocols || protocols.length === 0) {\n    return true\n  }\n\n  const url = String(value)\n  const colon = url.indexOf(':')\n  const questionMark = url.indexOf('?')\n  const numberSign = url.indexOf('#')\n  const slash = url.indexOf('/')\n\n  if (\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign)\n  ) {\n    return true\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length) === protocol\n    ) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Add data and position.\n *\n * @param {Nodes} node\n *   Node to patch safe data and position on.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe node-like value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(node, unsafe) {\n  const cleanPosition = position(\n    // @ts-expect-error: looks like a node.\n    unsafe\n  )\n\n  if (unsafe.data) {\n    node.data = structuredClone(unsafe.data)\n  }\n\n  if (cleanPosition) node.position = cleanPosition\n}\n\n/**\n *\n * @param {Readonly<Array<PropertyDefinition>> | undefined} definitions\n * @param {string} key\n * @returns {Readonly<PropertyDefinition> | undefined}\n */\nfunction findDefinition(definitions, key) {\n  /** @type {PropertyDefinition | undefined} */\n  let dataDefault\n  let index = -1\n\n  if (definitions) {\n    while (++index < definitions.length) {\n      const entry = definitions[index]\n      const name = typeof entry === 'string' ? entry : entry[0]\n\n      if (name === key) {\n        return entry\n      }\n\n      if (name === 'data*') dataDefault = entry\n\n      if (name === '*') return entry\n    }\n  }\n\n  if (key.length > 4 && key.slice(0, 4).toLowerCase() === 'data') {\n    return dataDefault\n  }\n}\n","import {evaluateSync} from '@mdx-js/mdx'\nimport {useDebounceFn} from 'ahooks'\nimport {frontmatterToMarkdown} from 'mdast-util-frontmatter'\nimport {gfmToMarkdown} from 'mdast-util-gfm'\nimport {mathToMarkdown} from 'mdast-util-math'\nimport {mdxToMarkdown} from 'mdast-util-mdx'\nimport {useEffect, useState} from 'react'\nimport * as runtime from 'react/jsx-runtime'\nimport rehypeSlug from 'rehype-slug-custom-id'\nimport rehypeMdxCodeProps from 'rehype-mdx-code-props'\nimport {rehypeUnwrapImages} from './rehype-unwrap-images'\nimport rehypeMathjax from 'rehype-mathjax/svg'\n\nimport {directiveToMarkdown} from 'mdast-util-directive'\nimport remarkDirective from 'remark-directive'\nimport remarkFrontmatter from 'remark-frontmatter'\nimport remarkGfm from 'remark-gfm'\nimport remarkMath from 'remark-math'\nimport {VFile} from 'vfile'\nimport {VFileMessage} from 'vfile-message'\n\nimport {toMarkdown} from 'mdast-util-to-markdown'\n\nimport {MdastRoot} from './components/types.js'\n\nimport rehypeSanitize from '../rehype-sanitize-mdx/index.js'\n\nconst parseMdast = (tree: MdastRoot) => {\n  const out = toMarkdown(tree as any, {\n    extensions: [\n      mdxToMarkdown(),\n      gfmToMarkdown(),\n      mathToMarkdown(),\n      directiveToMarkdown,\n      frontmatterToMarkdown()\n    ] as any\n  })\n\n  return out\n}\n\nfunction createFile(value: string) {\n  return new VFile({basename: 'example.mdx', value})\n}\n\nfunction evaluateFile(file: VFile, components: {[key: string]: any}) {\n  const capture = (name: string) => () => (tree: any) => {\n    file.data[name] = tree\n  }\n\n  try {\n    file.result = evaluateSync(file as any, {\n      ...(runtime as any),\n      development: false,\n\n      useDynamicImport: true,\n      remarkPlugins: [\n        remarkGfm,\n        remarkFrontmatter,\n        remarkMath,\n        remarkDirective,\n        capture('mdast')\n      ],\n      rehypePlugins: [\n        rehypeSlug,\n        rehypeUnwrapImages,\n        rehypeSanitize(Object.keys(components)),\n        [\n          rehypeMdxCodeProps,\n          {\n            tagName: 'code'\n          }\n        ],\n        rehypeMathjax\n      ],\n      recmaPlugins: []\n    }).default\n  } catch (error) {\n    const message =\n      error instanceof VFileMessage ? error : new VFileMessage(error)\n\n    if (!file.messages.includes(message as any)) {\n      file.messages.push(message as any)\n    }\n\n    message.fatal = true\n  }\n}\ninterface Defaults {\n  gfm: boolean\n  frontmatter: boolean\n  math: boolean\n  directive: boolean\n  mdast?: MdastRoot\n}\nconst initializeState = (\n  defaults: Defaults,\n  components: {\n    [key: string]: any\n  } = {}\n) => {\n  const markdown = defaults.mdast ? parseMdast(defaults.mdast) : ''\n\n  const file = createFile(markdown)\n\n  evaluateFile(file, components)\n\n  return {\n    ...defaults,\n    value: markdown,\n    file\n  }\n}\n\nexport function useMdx(\n  defaults: Defaults,\n  live: boolean = false,\n  components: {\n    [key: string]: any\n  } = {}\n) {\n  const [state, setState] = useState(() =>\n    initializeState(defaults, components)\n  )\n\n  useEffect(() => {\n    if (live) {\n      setState(initializeState(defaults, components))\n    }\n  }, [defaults, live])\n\n  const {run: setConfig} = useDebounceFn(\n    async config => {\n      const file = createFile(config.value)\n\n      evaluateFile(file, components)\n\n      setState({...config, file})\n    },\n    {leading: true, trailing: true, wait: 200}\n  )\n\n  return [state, setConfig]\n}\n","import deepmerge from 'deepmerge'\nimport {Root} from 'hast'\nimport {defaultSchema, sanitize} from '../hast-util-sanitize-mdx'\n\n/**\n * Sanitize HTML.\n */\nexport default function rehypeSanitize(componentsNames: string[] = []) {\n  return () => {\n    const allowAllAttributes = componentsNames.reduce<{\n      [key: string]: string[]\n    }>((acc, componentName) => {\n      acc[componentName] = ['*']\n      return acc\n    }, {})\n\n    const schema = deepmerge(defaultSchema, {\n      tagNames: componentsNames,\n      attributes: {\n        '*': ['className'],\n        // Allow rehype-mathjax classes.\n        code: [['className', /^language-./, 'math-inline', 'math-display']],\n        // Allow all attributes for components. The security of the components is the responsibility of the user.\n        ...allowAllAttributes\n      },\n      clobberPrefix: ''\n    })\n\n    return function (tree: Root) {\n      const result = sanitize(tree, schema) as Root\n\n      return result\n    }\n  }\n}\n","import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertTitle,\n  Button\n} from '@chakra-ui/react'\nimport React from 'react'\n\nexport const ErrorFallback: React.FC<{\n  error: Error\n  resetErrorBoundary: () => void\n}> = ({error, resetErrorBoundary}) => {\n  return (\n    <Alert status=\"error\">\n      <AlertIcon />\n      <AlertTitle>Something went wrong</AlertTitle>\n      <AlertDescription>\n        <pre>{error.message}</pre>\n\n        <Button onClick={resetErrorBoundary}>Try again</Button>\n      </AlertDescription>\n    </Alert>\n  )\n}\n","import type {VFile} from 'vfile'\nimport {Statistics} from 'vfile-statistics'\n\nexport const StatsErrorReporter: React.FC<{\n  stats: Statistics\n  state: any\n}> = ({stats, state}) => {\n  const vfileReporter = (file: VFile) => {\n    return JSON.stringify(file.messages, null, 2)\n  }\n\n  return (\n    <>\n      {stats.fatal || stats.warn ? (\n        <pre>\n          <code>{vfileReporter(state.file)}</code>\n        </pre>\n      ) : null}\n    </>\n  )\n}\n\nexport default StatsErrorReporter\n","import React, {useEffect, useState} from 'react'\nimport {ErrorBoundary} from 'react-error-boundary'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport {VFileMessage} from 'vfile-message'\nimport {Statistics} from 'vfile-statistics'\n\nimport {ErrorFallback} from './ErrorFallback.js'\nimport {BaseEditorProps} from './types.js'\n\nimport {Stack} from '@chakra-ui/react'\nimport StatsReporterError from './StatsReporterError.js'\n\nconst FallbackComponent: React.FC<{error: Error}> = ({error}) => {\n  const message = new VFileMessage(error)\n  message.fatal = true\n  return (\n    <pre>\n      <code>{String(message)}</code>\n    </pre>\n  )\n}\n\nexport interface PreviewComponentProps {\n  state: any\n  stats: Statistics\n  components: BaseEditorProps['components']\n}\n\nconst processContent = ({\n  state,\n  components\n}: {\n  state: PreviewComponentProps['state']\n  components: PreviewComponentProps['components']\n}) => {\n  try {\n    // check if state.file.result is a functio, if not throw error\n\n    if (typeof state.file.result !== 'function') {\n      console.error(state)\n      throw new Error(`Preview could not be generated.`)\n    }\n\n    return state.file.result({\n      components: {\n        code: ({className, ...props}: any) => {\n          const match = /language-(\\w+)/.exec(className || '')\n          return match ? (\n            <SyntaxHighlighter language={match[1]} PreTag=\"div\" {...props} />\n          ) : (\n            <code className={className} {...props} />\n          )\n        },\n        ...components,\n        wrapper: ({children}: any) => {\n          const Wrapper = components?.wrapper\n          const el = (\n            <Stack\n              w=\"full\"\n              sx={{\n                'mjx-container': {\n                  display: 'inline-block !important',\n                  verticalAlign: 'text-bottom !important'\n                }\n              }}>\n              {children}\n            </Stack>\n          )\n\n          if (Wrapper) {\n            return <Wrapper>{el}</Wrapper>\n          }\n\n          return el\n        }\n      }\n    })\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const PreviewComponent: React.FC<PreviewComponentProps> = React.memo(\n  ({state, stats, components}) => {\n    const [content, setContent] = useState<React.ReactNode>(() =>\n      processContent({state, components})\n    )\n    const [error, setError] = useState<Error | null>(null)\n\n    useEffect(() => {\n      async function processState() {\n        try {\n          const result = await processContent({\n            state,\n            components\n          })\n          setContent(result)\n          setError(null)\n        } catch (error) {\n          setError(error)\n        }\n      }\n\n      processState()\n    }, [state.file?.value, components])\n\n    return (\n      <ErrorBoundary FallbackComponent={ErrorFallback}>\n        <noscript>Enable JavaScript for the rendered result.</noscript>\n\n        {state.file?.result && <>{content}</>}\n\n        {error && <FallbackComponent error={error} />}\n\n        <StatsReporterError state={state} stats={stats} />\n      </ErrorBoundary>\n    )\n  }\n)\n","import {BaseEditorProps, MdastRoot} from './types.js'\n// @ts-nocheck\nimport React, {useMemo} from 'react'\nimport {Statistics, statistics} from 'vfile-statistics'\n\nimport {useMdx} from '../use-mdx.js'\nimport {PreviewComponent} from './PreviewComponent'\n\nexport interface BuildEditorProps {\n  components: BaseEditorProps['components']\n\n  mdast?: MdastRoot\n}\n\nexport const Preview = React.memo<BuildEditorProps>(({components, mdast}) => {\n  const defaults = useMemo(\n    () => ({\n      gfm: true,\n      frontmatter: true,\n      math: true,\n      directive: true,\n      mdast\n    }),\n    [mdast]\n  )\n\n  const [state, _] = useMdx(defaults, true, components) as any\n\n  const stats = useMemo(() => {\n    return state.file ? statistics(state.file) : ({} as Statistics)\n  }, [state.file])\n\n  // useEffect(() => {\n  //   console.log('useEffect', defaultValue)\n  //   setConfig({value: defaultValue})\n  // }, [defaultValue, setConfig])\n\n  return (\n    <PreviewComponent state={state} stats={stats} components={components} />\n  )\n})\n","import {Box, Link as ChakraLink, LinkProps} from '@chakra-ui/react'\nimport {Link as GatsbyLink} from 'gatsby'\nimport {Field} from '@atsnek/jaen'\n\nexport const Image = ({name, defaultValue, alt, ...rest}: any) => {\n  return (\n    <Box {...rest}>\n      <Field.Image name={name} defaultValue={defaultValue} alt={alt} />\n    </Box>\n  )\n}\n\nImage.defaultProps = {\n  name: () => `image-${(Math.random() + 1).toString(36).substring(7)}`,\n  alt: 'Placeholder Image Alt',\n  defaultValue: 'https://via.placeholder.com/150'\n}\n\nconst linkProps: LinkProps = {\n  position: 'relative',\n  color: 'brand.600',\n  textDecoration: 'none',\n  w: 'fit-content',\n  _hover: {\n    color: 'brand.600',\n    _before: {\n      transform: 'scaleX(1)'\n    }\n  },\n  _before: {\n    content: '\"\"',\n    position: 'absolute',\n    display: 'block',\n    width: '100%',\n    height: '2px',\n    bottom: -0.5,\n    left: 0,\n    backgroundColor: 'brand.600',\n    transform: 'scaleX(0)',\n    transformOrigin: 'top left',\n    transition: 'transform 0.3s ease'\n  }\n}\n\nexport const Link: React.FC<{\n  to: string\n  isExternal?: boolean\n  children: React.ReactNode\n}> = ({to, children, ...props}) => {\n  const isExternal =\n    props.isExternal !== undefined\n      ? props.isExternal\n      : to.startsWith('http://') || to.startsWith('https://')\n\n  if (isExternal) {\n    return (\n      <ChakraLink href={to} isExternal {...linkProps}>\n        {children}\n      </ChakraLink>\n    )\n  }\n\n  return (\n    <ChakraLink as={GatsbyLink} to={to} {...linkProps}>\n      {children}\n    </ChakraLink>\n  )\n}\n\nLink.defaultProps = {\n  to: '/',\n  children: 'My Link'\n}\n","import {MdastRoot} from './components/types.js'\n\nexport const defaultData = {\n  type: 'root',\n  children: [\n    {\n      type: 'heading',\n      depth: 1,\n      children: [\n        {\n          type: 'text',\n          value: 'Hello, world!',\n          position: {\n            start: {\n              line: 1,\n              column: 3,\n              offset: 2\n            },\n            end: {\n              line: 1,\n              column: 16,\n              offset: 15\n            }\n          }\n        }\n      ],\n      position: {\n        start: {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n        end: {\n          line: 1,\n          column: 16,\n          offset: 15\n        }\n      }\n    },\n    {\n      type: 'paragraph',\n      children: [\n        {\n          type: 'text',\n          value: '// This is a ',\n          position: {\n            start: {\n              line: 3,\n              column: 1,\n              offset: 17\n            },\n            end: {\n              line: 3,\n              column: 14,\n              offset: 30\n            }\n          }\n        },\n        {\n          type: 'strong',\n          children: [\n            {\n              type: 'text',\n              value: 'jaen',\n              position: {\n                start: {\n                  line: 3,\n                  column: 16,\n                  offset: 32\n                },\n                end: {\n                  line: 3,\n                  column: 20,\n                  offset: 36\n                }\n              }\n            }\n          ],\n          position: {\n            start: {\n              line: 3,\n              column: 14,\n              offset: 30\n            },\n            end: {\n              line: 3,\n              column: 22,\n              offset: 38\n            }\n          }\n        },\n        {\n          type: 'text',\n          value: ' MDX field.',\n          position: {\n            start: {\n              line: 3,\n              column: 22,\n              offset: 38\n            },\n            end: {\n              line: 3,\n              column: 33,\n              offset: 49\n            }\n          }\n        }\n      ],\n      position: {\n        start: {\n          line: 3,\n          column: 1,\n          offset: 17\n        },\n        end: {\n          line: 3,\n          column: 33,\n          offset: 49\n        }\n      }\n    },\n    {\n      type: 'paragraph',\n      children: [\n        {\n          type: 'text',\n          value: '// ## Usage',\n          position: {\n            start: {\n              line: 5,\n              column: 1,\n              offset: 51\n            },\n            end: {\n              line: 5,\n              column: 12,\n              offset: 62\n            }\n          }\n        }\n      ],\n      position: {\n        start: {\n          line: 5,\n          column: 1,\n          offset: 51\n        },\n        end: {\n          line: 5,\n          column: 12,\n          offset: 62\n        }\n      }\n    },\n    {\n      type: 'paragraph',\n      children: [\n        {\n          type: 'text',\n          value: '// You can use this field to write markdown content.\\n//',\n          position: {\n            start: {\n              line: 7,\n              column: 1,\n              offset: 64\n            },\n            end: {\n              line: 8,\n              column: 3,\n              offset: 119\n            }\n          }\n        }\n      ],\n      position: {\n        start: {\n          line: 7,\n          column: 1,\n          offset: 64\n        },\n        end: {\n          line: 8,\n          column: 4,\n          offset: 120\n        }\n      }\n    }\n  ],\n  position: {\n    start: {\n      line: 1,\n      column: 1,\n      offset: 0\n    },\n    end: {\n      line: 15,\n      column: 8,\n      offset: 228\n    }\n  }\n} as MdastRoot\n","import {connectField, EditingProvider} from '@atsnek/jaen'\nimport React, {useEffect, useMemo} from 'react'\n\nimport {Preview} from './components/Preview.js'\nimport {BaseEditorProps, MdastRoot} from './components/types.js'\n\nimport {Image, Link} from './default-components.js'\nimport {defaultData} from './default-data.js'\n\ntype MdxFieldValue = MdastRoot\n\nconst baseComponents = {\n  Image,\n  Link,\n  a: (props: any) => {\n    return <Link to={props.href}>{props.children}</Link>\n  },\n  img: (props: any) => {\n    const src = props.src\n    const alt = props.alt\n\n    const name = `${src}-${alt}`\n\n    return <Image name={name} defaultValue={src} alt={alt} />\n  }\n}\n\nexport interface MdxFieldProps {\n  components: BaseEditorProps['components']\n}\n\nexport const MdxField = connectField<MdxFieldValue, MdxFieldProps>(\n  ({jaenField, components}) => {\n    const [rawValue, setRawValue] = React.useState<MdastRoot | undefined>(\n      jaenField.staticValue || defaultData\n    )\n\n    useEffect(() => {\n      setRawValue(jaenField.value || jaenField.staticValue || defaultData)\n    }, [jaenField.value])\n\n    const combinedComponents = useMemo(() => {\n      return {\n        ...baseComponents,\n        ...components\n      }\n    }, [baseComponents, JSON.stringify(components)])\n\n    if (jaenField.isEditing) {\n      // Render editor in edit mode\n\n      return (\n        <LayzEditor\n          components={combinedComponents}\n          onUpdateValue={jaenField.onUpdateValue}\n          rawValue={rawValue}\n        />\n      )\n    } else {\n      return <Preview components={combinedComponents} mdast={rawValue} />\n    }\n  },\n  {\n    fieldType: 'IMA:MdxField'\n  }\n)\n\nexport const UncontrolledMdxField: React.FC<{\n  components: BaseEditorProps['components']\n  onUpdateValue: (value: MdastRoot) => void\n  value?: MdastRoot\n  isEditing?: boolean\n}> = ({components, onUpdateValue, value, isEditing}) => {\n  const combinedComponents = useMemo(() => {\n    return {\n      ...baseComponents,\n      ...components\n    }\n  }, [baseComponents, components])\n\n  if (isEditing) {\n    // Render editor in edit mode\n\n    return (\n      <EditingProvider isEditing={isEditing}>\n        <LayzEditor\n          components={combinedComponents}\n          onUpdateValue={onUpdateValue}\n          rawValue={value}\n        />\n      </EditingProvider>\n    )\n  } else {\n    return <Preview components={combinedComponents} mdast={value} />\n  }\n}\n\nconst LayzEditor: React.FC<{\n  components: BaseEditorProps['components']\n  onUpdateValue: (value: MdastRoot) => void\n  rawValue?: MdastRoot\n}> = ({components, onUpdateValue, rawValue}) => {\n  const Editor = React.lazy(async () => await import('./components/Editor.js'))\n\n  const MemoedEditor = React.useMemo(() => Editor, [])\n\n  return (\n    <React.Suspense fallback={<div>Loading...</div>}>\n      <MemoedEditor\n        components={components}\n        onUpdateValue={onUpdateValue}\n        mode=\"editAndPreview\"\n        mdast={rawValue}></MemoedEditor>\n    </React.Suspense>\n  )\n}\n"],"names":["convert","test","ok","castFactory","Array","isArray","tests","checks","index","length","parameters","apply","this","anyFactory","check","checkAsRecord","node","nodeAsRecord","key","propsFactory","type","Error","testFunction","value","parent","Boolean","looksLikeANode","call","undefined","empty","EXIT","rehypeUnwrapImages","tree","testOrVisitor","visitorOrReverse","maybeReverse","reverse","visitor","visit","is","factory","parents","name","tagName","Object","defineProperty","subresult","offset","grandparents","result","toResult","children","nodeAsParent","concat","visitParents","indexOf","_","env","self","globalThis","deserialize","serialized","$","as","out","set","unpair","has","get","arr","push","object","Date","source","flags","RegExp","map","Map","Set","add","message","BigInt","deserializer","EMPTY","toString","keys","typeOf","asString","slice","includes","shouldSkip","TYPE","serialize","json","lossy","strict","pair","entry","TypeError","valueOf","toJSON","entries","toISOString","serializer","structuredClone$1","structuredClone","any","options","pointEnd","point","pointStart","position","line","column","aria","defaultSchema","ancestors","tbody","td","th","thead","tfoot","tr","attributes","a","blockquote","code","del","div","dl","h2","img","input","ins","li","ol","q","section","summary","table","ul","clobber","clobberPrefix","protocols","cite","href","longDesc","src","required","disabled","strip","tagNames","own","hasOwnProperty","transform","state","unsafe","schema","allowComments","patch","comment","allowDoctypes","doctype","stack","content","props","properties","pop","safeElement","element","root","text","mdxJsxFlowElement","results","childrenUnknown","specific","defaults","reduce","acc","prop","_prop$value","safe","propertyValue","findDefinition","definition","values","propertyValuePrimitive","propertyValueMany","url","String","colon","questionMark","numberSign","slash","protocol","safeProtocol","allowed","cleanPosition","start","end","data","definitions","dataDefault","toLowerCase","createFile","VFile","basename","evaluateFile","file","components","componentsNames","evaluateSync","_extends","runtime","development","useDynamicImport","remarkPlugins","remarkGfm","remarkFrontmatter","remarkMath","remarkDirective","rehypePlugins","rehypeSlug","allowAllAttributes","componentName","deepmerge","ctx","replace","rehypeMdxCodeProps","rehypeMathjax","recmaPlugins","error","VFileMessage","messages","fatal","initializeState","markdown","mdast","toMarkdown","extensions","mdxToMarkdown","gfmToMarkdown","mathToMarkdown","directiveToMarkdown","frontmatterToMarkdown","useMdx","live","_useState","useState","setState","useEffect","useDebounceFn","config","Promise","resolve","e","reject","leading","trailing","wait","run","ErrorFallback","_ref","resetErrorBoundary","_jsxs","Alert","status","_jsx","AlertIcon","AlertTitle","AlertDescription","Button","onClick","StatsErrorReporter","stats","_Fragment","warn","JSON","stringify","FallbackComponent","processContent","_ref2","console","_ref3","className","_objectWithoutPropertiesLoose","_excluded","match","exec","SyntaxHighlighter","language","PreTag","wrapper","_ref4","Wrapper","el","Stack","w","sx","display","verticalAlign","PreviewComponent","React","memo","_ref5","_state$file","_state$file2","setContent","_useState2","setError","_temp","then","_catch","processState","ErrorBoundary","StatsReporterError","Preview","useMemo","gfm","frontmatter","math","directive","statistics","Image","defaultValue","alt","rest","Box","Field","defaultProps","Math","random","substring","linkProps","color","textDecoration","_hover","_before","width","height","bottom","left","backgroundColor","transformOrigin","transition","Link","to","_excluded2","isExternal","startsWith","ChakraLink","GatsbyLink","defaultData","depth","baseComponents","MdxField","connectField","jaenField","_React$useState","staticValue","rawValue","setRawValue","combinedComponents","isEditing","LayzEditor","onUpdateValue","fieldType","UncontrolledMdxField","EditingProvider","Editor","lazy","import","MemoedEditor","Suspense","fallback","mode"],"mappings":"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S,CAAC,gBAAiB,CAAC,YAAa,cACzChE,OAAQ,CAAC,UACTiE,QAAS,IAAIxB,IACbyB,MAAO,IAAIzB,IAIX0B,GAAI,IAAI1B,GAAM,CAAC,YAAa,uBAC5B,IAAK,CACH,OACA,SACA,gBACA,YACA,SACA,QACA,MACA,OACA,SACA,cACA,cACA,OACA,UACA,UACA,UACA,QACA,UACA,QACA,OACA,UACA,SACA,WACA,MAKA,UACA,QACA,SACA,UACA,SACA,WACA,UACA,KACA,QACA,WACA,QACA,OACA,YACA,QACA,SACA,WACA,OACA,SACA,UACA,SACA,OACA,SACA,WACA,MACA,UACA,OACA,QACA,QACA,WACA,QACA,OACA,OACA,QACA,UACA,WACA,QACA,SACA,SACA,QACA,UAGJ2B,QAAS,CAAC,kBAAmB,iBAAkB,KAAM,QACrDC,cAAe,gBACfC,UAAW,CACTC,KAAM,CAAC,OAAQ,SACfC,KAAM,CAAC,OAAQ,QAAS,MAAO,OAAQ,SAAU,QACjDC,SAAU,CAAC,OAAQ,SACnBC,IAAK,CAAC,OAAQ,UAEhBC,SAAU,CACRhB,MAAO,CAACiB,UAAU,EAAMjI,KAAM,aAEhCkI,MAAO,CAAC,UACRC,SAAU,CACR,IACA,IACA,aACA,KACA,OACA,KACA,MACA,UACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,MAIA,QACA,MACA,MACA,KACA,KACA,IACA,UACA,MACA,IACA,KACA,KACA,OACA,IACA,OACA,UACA,SACA,OACA,SACA,SACA,MACA,UACA,MACA,QACA,QACA,KACA,QACA,KACA,QACA,KACA,KACA,KACA,QCcJ,IAAMC,GAAM,CAAE,EAACC,eAgDf,SAASC,GAAUC,EAAO3I,GACxB,GAAIA,GAAwB,iBAATA,EAAmB,CACpC,IAAM4I,EAA0D5I,EAIhE,OAFoC,iBAAhB4I,EAAOxI,KAAoBwI,EAAOxI,KAAO,IAG3D,IAAK,UACH,OAuCR,SAAiBuI,EAAOC,GACtB,GAAID,EAAME,OAAOC,cAAe,CAE9B,IAAM7G,EAAiC,iBAAjB2G,EAAOrI,MAAqBqI,EAAOrI,MAAQ,GAC3Df,EAAQyC,EAAOM,QAAQ,UAIvBvC,EAAO,CAACI,KAAM,UAAWG,MAHjBf,EAAQ,EAAIyC,EAASA,EAAOuC,MAAM,EAAGhF,IAOnD,OAFAuJ,GAAM/I,EAAM4I,GAEL5I,CACR,CACH,CArDegJ,CAAQL,EAAOC,GAGxB,IAAK,UACH,OA6DR,SAAiBD,EAAOC,GACtB,GAAID,EAAME,OAAOI,cAAe,CAE9B,IAAMjJ,EAAO,CAACI,KAAM,WAIpB,OAFA2I,GAAM/I,EAAM4I,GAEL5I,CACR,CACH,CAtEekJ,CAAQP,EAAOC,GAGxB,IAAK,UACH,OA8ER,SAAiBD,EAAOC,GACtB,IAAMlH,EAAiC,iBAAnBkH,EAAOjH,QAAuBiH,EAAOjH,QAAU,GAEnEgH,EAAMQ,MAAM7F,KAAK5B,GAEjB,IAAM0H,EAA+CjH,GACnDwG,EACAC,EAAOzG,UAGHkH,EAAQC,GAAWX,EAAOC,EAAOU,YAEvCX,EAAMQ,MAAMI,MAEZ,IAAIC,GAAc,EAElB,GACE9H,GACS,MAATA,KACEiH,EAAME,OAAON,UAAYI,EAAME,OAAON,SAAS9D,SAAS/C,MAE1D8H,GAAc,EAIVb,EAAME,OAAOzC,WAAaoC,GAAI7H,KAAKgI,EAAME,OAAOzC,UAAW1E,IAAO,CACpE,IAAM0E,EAAYuC,EAAME,OAAOzC,UAAU1E,GACrClC,GAAS,EAIb,IAFAgK,GAAc,IAELhK,EAAQ4G,EAAU3G,QACrBkJ,EAAMQ,MAAM1E,SAAS2B,EAAU5G,MACjCgK,GAAc,EAGnB,CAGH,IAAKA,EACH,OAAOb,EAAME,OAAOP,QAAUK,EAAME,OAAOP,MAAM7D,SAAS/C,GACtD0H,OACAxI,EAIN,IAAMZ,EAAO,CACXI,KAAM,UACNuB,QAASD,EACT4H,WAAYD,EACZlH,SAAUiH,GAKZ,OAFAL,GAAM/I,EAAM4I,GAEL5I,CACT,CAtIeyJ,CAAQd,EAAOC,GAGxB,IAAK,OACH,OAkNR,SAAcD,EAAOC,GACnB,IAMM5I,EAAO,CAACI,KAAM,OAAQ+B,SANsBA,GAChDwG,EACAC,EAAOzG,WAQT,OAFA4G,GAAM/I,EAAM4I,GAEL5I,CACT,CA9Ne0J,CAAKf,EAAOC,GAGrB,IAAK,OACH,OAsOR,SAAcpG,EAAGoG,GACf,IAEM5I,EAAO,CAACI,KAAM,OAAQG,MAFU,iBAAjBqI,EAAOrI,MAAqBqI,EAAOrI,MAAQ,IAMhE,OAFAwI,GAAM/I,EAAM4I,GAEL5I,CACT,CA9Oe2J,CAAKhB,EAAOC,GAGrB,IAAK,oBACL,IAAK,oBACH,OAqIR,SAA2BD,EAAOC,GAChC,IAAMlH,EAA8B,iBAAhBkH,EAAOlH,KAAoBkH,EAAOlH,KAAO,GAE7DiH,EAAMQ,MAAM7F,KAAK5B,GAEjB,IAAM0H,EAA+CjH,GACnDwG,EACAC,EAAOzG,UAGHkH,EAAQC,GAAWX,EAAOC,EAAOjC,YAEvCgC,EAAMQ,MAAMI,MAEZ,IAAIC,GAAc,EAElB,GACE9H,GACS,MAATA,KACEiH,EAAME,OAAON,UAAYI,EAAME,OAAON,SAAS9D,SAAS/C,MAE1D8H,GAAc,EAIVb,EAAME,OAAOzC,WAAaoC,GAAI7H,KAAKgI,EAAME,OAAOzC,UAAW1E,IAAO,CACpE,IAAM0E,EAAYuC,EAAME,OAAOzC,UAAU1E,GACrClC,GAAS,EAIb,IAFAgK,GAAc,IAELhK,EAAQ4G,EAAU3G,QACrBkJ,EAAMQ,MAAM1E,SAAS2B,EAAU5G,MACjCgK,GAAc,EAGnB,CAGH,IAAKA,EACH,OAAOb,EAAME,OAAOP,QAAUK,EAAME,OAAOP,MAAM7D,SAAS/C,GACtD0H,OACAxI,EAIN,IAAMZ,EAAO,CACXI,KAAM,UACNuB,QAASD,EACT4H,WAAYD,EACZlH,SAAUiH,GAKZ,OAFAL,GAAM/I,EAAM4I,GAEL5I,CACT,CA7Le4J,CAAkBjB,EAAOC,GAKrC,CACH,CA+OA,SAASzG,GAASwG,EAAOxG,GAEvB,IAAM0H,EAAU,GAEhB,GAAIzK,MAAMC,QAAQ8C,GAIhB,IAHA,IAAM2H,EAA0D3H,EAC5D3C,GAAS,IAEJA,EAAQsK,EAAgBrK,QAAQ,CACvC,IAAMc,EAAQmI,GAAUC,EAAOmB,EAAgBtK,IAE3Ce,IACEnB,MAAMC,QAAQkB,GAChBsJ,EAAQvG,KAAI3D,MAAZkK,EAAgBtJ,GAEhBsJ,EAAQvG,KAAK/C,GAGlB,CAGH,OAAOsJ,CACT,CAYA,SAASP,GAAWX,EAAOW,GACzB,IAqCIpJ,EArCEyB,EAAUgH,EAAMQ,MAAMR,EAAMQ,MAAM1J,OAAS,GAC3CkH,EAAagC,EAAME,OAAOlC,WAC1ByB,EAAWO,EAAME,OAAOT,SACxB2B,EACJpD,GAAc6B,GAAI7H,KAAKgG,EAAYhF,GAC/BgF,EAAWhF,QACXf,EACAoJ,EACJrD,GAAc6B,GAAI7H,KAAKgG,EAAY,KAAOA,EAAW,UAAO/F,EACxDyI,EACuDC,GACrC,iBAAfA,EACHlK,MAAMC,QAAQiK,GAEZA,EAAWW,OAAO,SAACC,EAAKC,GACe,IAAAC,EAcrC,MAdkB,oBAAdD,EAAK/J,OAEL8J,EAAIC,EAAKzI,MADc,oCAArB0I,OAAAA,EAAAD,EAAK5J,YAAL6J,EAAAA,EAAYhK,MACG+J,EAAK5J,MAKH,OAAf4J,EAAK5J,OAGU4J,EAAK5J,OAIrB2J,CACT,EAAG,CAAE,GACLZ,EACF,CAAA,EAGArH,EAAS,CAAE,EAIjB,IAAK/B,KAAOmJ,EACV,GAAIb,GAAI7H,KAAK0I,EAAOnJ,GAAM,CACxB,IAAM0I,EAASS,EAAMnJ,GAEjBmK,EAAOC,GACT3B,EACA4B,GAAeR,EAAU7J,GACzBA,EACA0I,GAGEyB,UACFA,EAAOC,GAAc3B,EAAO4B,GAAeP,EAAU9J,GAAMA,EAAK0I,IAG9DyB,UACFpI,EAAO/B,GAAOmK,EAEjB,CAGH,GAAIjC,GAAYI,GAAI7H,KAAKyH,EAAUzG,GAAU,CAC3C,IAAM2H,EAAalB,EAASzG,GAE5B,IAAKzB,KAAOoJ,EACNd,GAAI7H,KAAK2I,EAAYpJ,KAASsI,GAAI7H,KAAKsB,EAAQ/B,KACjD+B,EAAO/B,GAAOoJ,EAAWpJ,GAG9B,CAED,OAAO+B,CACT,CAgBA,SAASqI,GAAc3B,EAAO6B,EAAYtK,EAAKK,GAC7C,OAAOiK,EACHpL,MAAMC,QAAQkB,GAoBpB,SAA2BoI,EAAO6B,EAAYtK,EAAKuK,GAKjD,IAJA,IAAIjL,GAAS,EAEPyC,EAAS,KAENzC,EAAQiL,EAAOhL,QAAQ,CAC9B,IAAMc,EAAQmK,GAAuB/B,EAAO6B,EAAYtK,EAAKuK,EAAOjL,IAE/C,iBAAVe,GAAuC,iBAAVA,GACtC0B,EAAOqB,KAAK/C,EAEf,CAED,OAAO0B,CACT,CAjCQ0I,CAAkBhC,EAAO6B,EAAYtK,EAAKK,GAC1CmK,GAAuB/B,EAAO6B,EAAYtK,EAAKK,QACjDK,CACN,CA8CA,SAAS8J,GAAuB/B,EAAO6B,EAAYtK,EAAKK,GACtD,GAAoB,oCAAhBA,MAAAA,OAAAA,EAAAA,EAAOH,MACT,OACSsK,GAAuB/B,EAAO6B,EAAYtK,EAD/B,cAAhBK,EAAMA,WAC8CK,EAC7B,SAAhBL,EAAMA,QAEU,UAAhBA,EAAMA,WACuCK,EAEAL,EAAMA,QAIhE,IACmB,kBAAVA,GACU,iBAAVA,GACU,iBAAVA,IAsDX,SAAsBoI,EAAOzI,EAAKK,GAChC,IAAMwH,EACJY,EAAME,OAAOd,WAAaS,GAAI7H,KAAKgI,EAAME,OAAOd,UAAW7H,GACvDyI,EAAME,OAAOd,UAAU7H,QACvBU,EAGN,IAAKmH,GAAkC,IAArBA,EAAUtI,OAC1B,OAAO,EAGT,IAAMmL,EAAMC,OAAOtK,GACbuK,EAAQF,EAAIrI,QAAQ,KACpBwI,EAAeH,EAAIrI,QAAQ,KAC3ByI,EAAaJ,EAAIrI,QAAQ,KACzB0I,EAAQL,EAAIrI,QAAQ,KAE1B,GACEuI,EAAQ,GAEPG,GAAS,GAAKH,EAAQG,GACtBF,GAAgB,GAAKD,EAAQC,GAC7BC,GAAc,GAAKF,EAAQE,EAE5B,OAAO,EAKT,IAFA,IAAIxL,GAAS,IAEJA,EAAQuI,EAAUtI,QAAQ,CACjC,IAAMyL,EAAWnD,EAAUvI,GAE3B,GACEsL,IAAUI,EAASzL,QACnBmL,EAAIpG,MAAM,EAAG0G,EAASzL,UAAYyL,EAElC,OACD,CACF,CAED,OACF,CAAA,CA1FOC,CAAaxC,EAAOzI,EAAKK,GAA9B,CAMA,GAA0B,iBAAfiK,GAA2BA,EAAW/K,OAAS,EAAG,CAI3D,IAHA,IAAIP,GAAK,EACLM,EAAQ,IAEHA,EAAQgL,EAAW/K,QAAQ,CAClC,IAAM2L,EAAUZ,EAAWhL,GAG3B,GAAI4L,GAA8B,iBAAZA,GAAwB,UAAWA,GACvD,GAAIA,EAAQnM,KAAK4L,OAAOtK,IAAS,CAC/BrB,GAAK,EACL,KACD,OAGMkM,GAAAA,IAAY7K,EAAO,CAC1BrB,GAAK,EACL,KACD,CACF,CAED,IAAKA,EAAI,MACV,CAED,OAAOyJ,EAAME,OAAOhB,SAClBc,EAAME,OAAOf,eACba,EAAME,OAAOhB,QAAQpD,SAASvE,GAC5ByI,EAAME,OAAOf,cAAgBvH,EAC7BA,CAhCH,CAiCH,CAmEA,SAASwI,GAAM/I,EAAM4I,GACnB,IAAMyC,EF7uBD,SAAkBrL,GACvB,MAAMsL,EAAQxF,GAAW9F,GACnBuL,EAAM3F,GAAS5F,GAErB,GAAIsL,GAASC,EACX,MAAO,CAACD,QAAOC,MAEnB,CEsuBwBxF,CAEpB6C,GAGEA,EAAO4C,OACTxL,EAAKwL,KAAO/F,GAAgBmD,EAAO4C,OAGjCH,IAAerL,EAAK+F,SAAWsF,EACrC,CAQA,SAASd,GAAekB,EAAavL,GAEnC,IAAIwL,EACAlM,GAAS,EAEb,GAAIiM,EACF,OAASjM,EAAQiM,EAAYhM,QAAQ,CACnC,IAAMwF,EAAQwG,EAAYjM,GACpBkC,EAAwB,iBAAVuD,EAAqBA,EAAQA,EAAM,GAEvD,GAAIvD,IAASxB,EACX,OAAO+E,EAKT,GAFa,UAATvD,IAAkBgK,EAAczG,GAEvB,MAATvD,EAAc,OAAOuD,CAC1B,CAGH,GAAI/E,EAAIT,OAAS,GAAuC,SAAlCS,EAAIsE,MAAM,EAAG,GAAGmH,cACpC,OAAOD,CAEX,CCp0BA,SAASE,GAAWrL,GAClB,OAAO,IAAIsL,EAAM,CAACC,SAAU,cAAevL,MAAAA,GAC7C,CAEA,SAASwL,GAAaC,EAAaC,GACjC,ICvCqCC,ED2CrC,IACEF,EAAK/J,OAASkK,EAAaH,EAAWI,EAChCC,CAAAA,EAAAA,EACJC,CAAAA,aAAa,EAEbC,kBAAkB,EAClBC,cAAe,CACbC,EACAC,EACAC,EACAC,EAd4B,WAAA,OAAO5L,SAAAA,GACvCgL,EAAKR,KAAS,MAAIxK,CACpB,CAAC,GAeG6L,cAAe,CACbC,EACA/L,GC1D+BmL,ED2DhBtK,OAAOyC,KAAK4H,YC3DIC,IAAAA,EAA4B,IAC1D,WACL,IAAMa,EAAqBb,EAAgBjC,OAExC,SAACC,EAAK8C,GAEP,OADA9C,EAAI8C,GAAiB,CAAC,KACf9C,CACT,EAAG,CAAA,GAEGrB,EAASoE,EAAU9G,GAAe,CACtCoC,SAAU2D,EACVvF,WAAUyF,EACR,CAAA,IAAK,CAAC,aAENtF,KAAM,CAAC,CAAC,YAAa,cAAe,cAAe,kBAEhDiG,GAELjF,cAAe,KAGjB,OAAiB9G,SAAAA,GACf,IFuMmBhB,EAAM2F,EAEzBuH,EAOEC,EE9MF,OFqMmBnN,EEvMKgB,EFyMxBkM,EAAM,CAAC9M,KAAM,OAAQ+B,SAAU,KAO7BgL,EAAUzE,GAJF,CACZG,QAN2BlD,EEvMKkD,GF6MjBuD,EAAOjG,CAAAA,EAAAA,GAAkBR,GAAWQ,GACnDgD,MAAO,IAEwBnJ,MAG3BZ,MAAMC,QAAQ8N,GACO,IAAnBA,EAAQ1N,OACVyN,EAAMC,EAAQ,GAEdD,EAAI/K,SAAWgL,EAGjBD,EAAMC,GAIHD,CE3NL,CACF,GDkCM,CACEE,EACA,CACEzL,QAAS,SAGb0L,GAEFC,aAAc,MACd,OACH,CAAC,MAAOC,GACP,IAAMvJ,EACJuJ,aAAiBC,EAAeD,EAAQ,IAAIC,EAAaD,GAEtDvB,EAAKyB,SAAShJ,SAAST,IAC1BgI,EAAKyB,SAASnK,KAAKU,GAGrBA,EAAQ0J,OAAQ,CACjB,CACH,CAQA,IAAMC,GAAkB,SACtB3D,EACAiC,YAAAA,IAAAA,EAEI,CAAA,GAEJ,IAAM2B,EAAW5D,EAAS6D,MAzEdC,EAyEiC9D,EAAS6D,MAzElB,CAClCE,WAAY,CACVC,IACAC,IACAC,IACAC,EACAC,OAmE2D,GAEzDpC,EAAOJ,GAAWgC,GAIxB,OAFA7B,GAAaC,EAAMC,GAEnBG,EACKpC,CAAAA,EAAAA,EACHzJ,CAAAA,MAAOqN,EACP5B,KAAAA,GAEJ,EAEgB,SAAAqC,GACdrE,EACAsE,EACArC,QADgB,IAAhBqC,IAAAA,GAAgB,QAChBrC,IAAAA,IAAAA,EAEI,IAEJ,IAAAsC,EAA0BC,EAAS,WACjC,OAAAb,GAAgB3D,EAAUiC,EAAW,GADhCtD,EAAK4F,EAAEE,GAAAA,EAAQF,EAAA,GAqBtB,OAjBAG,EAAU,WACJJ,GACFG,EAASd,GAAgB3D,EAAUiC,GAEvC,EAAG,CAACjC,EAAUsE,IAaP,CAAC3F,EAXiBgG,EACjBC,SAAAA,OACJ,IAAM5C,EAAOJ,GAAWgD,EAAOrO,OAIJ,OAF3BwL,GAAaC,EAAMC,GAEnBwC,EAAQrC,EAAKwC,CAAAA,EAAAA,EAAQ5C,CAAAA,KAAAA,KAAM6C,QAAAC,SAC7B,CAAC,MAAAC,GAAA,OAAAF,QAAAG,OAAAD,EACD,CAAA,EAAA,CAACE,SAAS,EAAMC,UAAU,EAAMC,KAAM,MARjCC,IAYT,CEtIa,IAAAC,GAGR,SAHqBC,GAGnB,IAAA/B,EAAK+B,EAAL/B,MAAOgC,EAAkBD,EAAlBC,mBACZ,OACEC,EAACC,EAAK,CAACC,OAAO,QACZvN,SAAA,CAAAwN,EAACC,EAAY,CAAA,GACbD,EAACE,qCACDL,EAACM,EAAgB,CAAA3N,SAAA,CACfwN,kBAAMpC,EAAMvJ,UAEZ2L,EAACI,EAAO,CAAAC,QAAST,EAAkBpN,SAAA,mBAI3C,ECrBa8N,GAGR,SAH0BX,GAGxB,IACkBtD,EADlBkE,EAAKZ,EAALY,MAKL,OACEP,EAAAQ,EAAA,CAAAhO,SACG+N,EAAMxC,OAASwC,EAAME,KACpBT,EACE,MAAA,CAAAxN,SAAAwN,EAAA,OAAA,CAAAxN,UARe6J,EADNsD,EAAL3G,MASuBqD,KAP1BqE,KAAKC,UAAUtE,EAAKyB,SAAU,KAAM,QASrC,MAGV,mBCRM8C,GAA8C,SAA7BjB,OACftL,EAAU,IAAIwJ,EADqC8B,EAAL/B,OAGpD,OADAvJ,EAAQ0J,OAAQ,EAEdiC,EACE,MAAA,CAAAxN,SAAAwN,EAAA,OAAA,CAAAxN,SAAO0I,OAAO7G,MAGpB,EAQMwM,GAAiB,SAAHC,GAClB,IAAA9H,EAAK8H,EAAL9H,MACAsD,EAAUwE,EAAVxE,WAKA,IAGE,GAAiC,mBAAtBtD,EAAMqD,KAAK/J,OAEpB,MADAyO,QAAQnD,MAAM5E,GACJ,IAAAtI,MAAuC,mCAGnD,OAAOsI,EAAMqD,KAAK/J,OAAO,CACvBgK,WAAUG,GACRtF,KAAM,SAAA6J,GAA+B,IAA7BC,EAASD,EAATC,UAAcvH,EAAKwH,EAAAF,EAAAG,IACnBC,EAAQ,iBAAiBC,KAAKJ,GAAa,IACjD,OAAOG,EACLpB,EAACsB,EAAiB7E,EAAC8E,CAAAA,SAAUH,EAAM,GAAII,OAAO,OAAU9H,IAExDsG,EAAM,OAAAvD,EAAAwE,CAAAA,UAAWA,GAAevH,GAEpC,GACG4C,EACHmF,CAAAA,QAAS,SAAAC,GAAoB,IACrBC,EAAUrF,MAAAA,OAAAA,EAAAA,EAAYmF,QACtBG,EACJ5B,EAAC6B,EACC,CAAAC,EAAE,OACFC,GAAI,CACF,gBAAiB,CACfC,QAAS,0BACTC,cAAe,2BAGlBzP,SAXYkP,EAARlP,WAeT,OAAImP,EACK3B,EAAC2B,EAAS,CAAAnP,SAAAoP,IAGZA,CACT,KAGL,CAAC,MAAOhE,GACP,MAAMA,CACP,CACH,EAEasE,GAAoDC,EAAMC,KACrE,SAAAC,GAA+B,IAAAC,EAAAC,EAA7BvJ,EAAKqJ,EAALrJ,MAAOuH,EAAK8B,EAAL9B,MAAOjE,EAAU+F,EAAV/F,WACdsC,EAA8BC,EAA0B,WAAA,OACtDgC,GAAe,CAAC7H,MAAAA,EAAOsD,WAAAA,GAAY,GAD9B7C,EAAOmF,KAAE4D,EAAU5D,EAAA,GAG1B6D,EAA0B5D,EAAuB,MAA1CjB,EAAK6E,KAAEC,EAAQD,EAAA,GAmBtB,OAjBA1D,EAAU,YACO,WAAY,QAAA4D,0BACrBzD,QAAAC,QACmB0B,GAAe,CAClC7H,MAAAA,EACAsD,WAAAA,KACAsG,KAHItQ,SAAAA,GAINkQ,EAAWlQ,GACXoQ,EAAS,KAAK,4DAPSG,CAAA,EAQxB,SAAQjF,GACP8E,EAAS9E,EACV,UAAAsB,QAAAC,QAAAwD,GAAAA,EAAAC,KAAAD,EAAAC,KACH,WAAA,QAAA,EAAA,CAAC,MAAAxD,GAAA,OAAAF,QAAAG,OAAAD,EAED0D,CAAAA,CAAAA,EACF,EAAG,CAAW,OAAXR,EAACtJ,EAAMqD,WAAI,EAAViG,EAAY1R,MAAO0L,IAGrBuD,EAACkD,GAAcnC,kBAAmBlB,GAChClN,SAAA,CAAAwN,EAAA,WAAA,CAAAxN,SAAA,uDAEC+P,EAAAvJ,EAAMqD,aAANkG,EAAYjQ,SAAU0N,EAAGQ,EAAA,CAAAhO,SAAAiH,IAEzBmE,GAASoC,EAACY,IAAkBhD,MAAOA,IAEpCoC,EAACgD,GAAkB,CAAChK,MAAOA,EAAOuH,MAAOA,MAG/C,GCvGW0C,GAAUd,EAAMC,KAAuB,SAAAzC,OAAErD,EAAUqD,EAAVrD,WAAY4B,EAAKyB,EAALzB,MAYzDlF,EAAY0F,GAXFwE,EACf,WAAA,MAAO,CACLC,KAAK,EACLC,aAAa,EACbC,MAAM,EACNC,WAAW,EACXpF,MAAAA,EACD,EACD,CAACA,KAGiC,EAAM5B,GAA5BzJ,GAER0N,EAAQ2C,EAAQ,WACpB,OAAOlK,EAAMqD,KAAOkH,EAAWvK,EAAMqD,MAAS,CAAA,CAChD,EAAG,CAACrD,EAAMqD,OAOV,OACE2D,EAACkC,GAAiB,CAAAlJ,MAAOA,EAAOuH,MAAOA,EAAOjE,WAAYA,GAE9D,yDCpCakH,GAAQ,SAAH7D,GAAK,IAAA5N,EAAI4N,EAAJ5N,KAAM0R,EAAY9D,EAAZ8D,aAAcC,EAAG/D,EAAH+D,IAAQC,EAAIzC,EAAAvB,EAAAwB,IACrD,OACEnB,EAAC4D,EAAGnH,KAAKkH,EAAI,UACX3D,EAAC6D,EAAML,MAAM,CAAAzR,KAAMA,EAAM0R,aAAcA,EAAcC,IAAKA,MAGhE,EAEAF,GAAMM,aAAe,CACnB/R,KAAM,WAAA,MAAA,UAAgBgS,KAAKC,SAAW,GAAGvP,SAAS,IAAIwP,UAAU,EAAE,EAClEP,IAAK,wBACLD,aAAc,mCAGhB,IAAMS,GAAuB,CAC3B9N,SAAU,WACV+N,MAAO,YACPC,eAAgB,OAChBtC,EAAG,cACHuC,OAAQ,CACNF,MAAO,YACPG,QAAS,CACPvL,UAAW,cAGfuL,QAAS,CACP7K,QAAS,KACTrD,SAAU,WACV4L,QAAS,QACTuC,MAAO,OACPC,OAAQ,MACRC,QAAS,GACTC,KAAM,EACNC,gBAAiB,YACjB5L,UAAW,YACX6L,gBAAiB,WACjBC,WAAY,wBAIHC,GAIR,SAJYhE,OAIViE,EAAEjE,EAAFiE,GAAIvS,EAAQsO,EAARtO,SAAakH,EAAKwH,EAAAJ,EAAAkE,IACrBC,OACiBhU,IAArByI,EAAMuL,WACFvL,EAAMuL,WACNF,EAAGG,WAAW,YAAcH,EAAGG,WAAW,YAEhD,OAEIlF,EAACmF,EAAU1I,EAFXwI,EAEW,CAAC3M,KAAMyM,EAAIE,gBAOZ7R,GAAIgS,EAAYL,GAAIA,GAPOb,GAAS1R,CAAAA,SAC3CA,IAUT,EAEAsS,GAAKhB,aAAe,CAClBiB,GAAI,IACJvS,SAAU,WCrEC,IAAA6S,GAAc,CACzB5U,KAAM,OACN+B,SAAU,CACR,CACE/B,KAAM,UACN6U,MAAO,EACP9S,SAAU,CACR,CACE/B,KAAM,OACNG,MAAO,gBACPwF,SAAU,CACRuF,MAAO,CACLtF,KAAM,EACNC,OAAQ,EACRlE,OAAQ,GAEVwJ,IAAK,CACHvF,KAAM,EACNC,OAAQ,GACRlE,OAAQ,OAKhBgE,SAAU,CACRuF,MAAO,CACLtF,KAAM,EACNC,OAAQ,EACRlE,OAAQ,GAEVwJ,IAAK,CACHvF,KAAM,EACNC,OAAQ,GACRlE,OAAQ,MAId,CACE3B,KAAM,YACN+B,SAAU,CACR,CACE/B,KAAM,OACNG,MAAO,gBACPwF,SAAU,CACRuF,MAAO,CACLtF,KAAM,EACNC,OAAQ,EACRlE,OAAQ,IAEVwJ,IAAK,CACHvF,KAAM,EACNC,OAAQ,GACRlE,OAAQ,MAId,CACE3B,KAAM,SACN+B,SAAU,CACR,CACE/B,KAAM,OACNG,MAAO,OACPwF,SAAU,CACRuF,MAAO,CACLtF,KAAM,EACNC,OAAQ,GACRlE,OAAQ,IAEVwJ,IAAK,CACHvF,KAAM,EACNC,OAAQ,GACRlE,OAAQ,OAKhBgE,SAAU,CACRuF,MAAO,CACLtF,KAAM,EACNC,OAAQ,GACRlE,OAAQ,IAEVwJ,IAAK,CACHvF,KAAM,EACNC,OAAQ,GACRlE,OAAQ,MAId,CACE3B,KAAM,OACNG,MAAO,cACPwF,SAAU,CACRuF,MAAO,CACLtF,KAAM,EACNC,OAAQ,GACRlE,OAAQ,IAEVwJ,IAAK,CACHvF,KAAM,EACNC,OAAQ,GACRlE,OAAQ,OAKhBgE,SAAU,CACRuF,MAAO,CACLtF,KAAM,EACNC,OAAQ,EACRlE,OAAQ,IAEVwJ,IAAK,CACHvF,KAAM,EACNC,OAAQ,GACRlE,OAAQ,MAId,CACE3B,KAAM,YACN+B,SAAU,CACR,CACE/B,KAAM,OACNG,MAAO,cACPwF,SAAU,CACRuF,MAAO,CACLtF,KAAM,EACNC,OAAQ,EACRlE,OAAQ,IAEVwJ,IAAK,CACHvF,KAAM,EACNC,OAAQ,GACRlE,OAAQ,OAKhBgE,SAAU,CACRuF,MAAO,CACLtF,KAAM,EACNC,OAAQ,EACRlE,OAAQ,IAEVwJ,IAAK,CACHvF,KAAM,EACNC,OAAQ,GACRlE,OAAQ,MAId,CACE3B,KAAM,YACN+B,SAAU,CACR,CACE/B,KAAM,OACNG,MAAO,2DACPwF,SAAU,CACRuF,MAAO,CACLtF,KAAM,EACNC,OAAQ,EACRlE,OAAQ,IAEVwJ,IAAK,CACHvF,KAAM,EACNC,OAAQ,EACRlE,OAAQ,QAKhBgE,SAAU,CACRuF,MAAO,CACLtF,KAAM,EACNC,OAAQ,EACRlE,OAAQ,IAEVwJ,IAAK,CACHvF,KAAM,EACNC,OAAQ,EACRlE,OAAQ,QAKhBgE,SAAU,CACRuF,MAAO,CACLtF,KAAM,EACNC,OAAQ,EACRlE,OAAQ,GAEVwJ,IAAK,CACHvF,KAAM,GACNC,OAAQ,EACRlE,OAAQ,OC1LRmT,GAAiB,CACrB/B,MAAAA,GACAsB,KAAAA,GACA7N,EAAG,SAACyC,GACF,OAAOsG,EAAC8E,GAAK,CAAAC,GAAIrL,EAAMpB,KAAO9F,SAAAkH,EAAMlH,UACtC,EACAgF,IAAK,SAACkC,GACJ,IAAMlB,EAAMkB,EAAMlB,IACZkL,EAAMhK,EAAMgK,IAIlB,OAAO1D,EAACwD,GAAM,CAAAzR,KAFEyG,EAAG,IAAIkL,EAEGD,aAAcjL,EAAKkL,IAAKA,GACpD,GAOW8B,GAAWC,EACtB,SAAA9F,GAA4B,IAA1B+F,EAAS/F,EAAT+F,UAAWpJ,EAAUqD,EAAVrD,WACXqJ,EAAgCxD,EAAMtD,SACpC6G,EAAUE,aAAeP,IADpBQ,EAAQF,EAAA,GAAEG,EAAWH,EAI5B5G,GAAAA,EAAU,WACR+G,EAAYJ,EAAU9U,OAAS8U,EAAUE,aAAeP,GAC1D,EAAG,CAACK,EAAU9U,QAEd,IAAMmV,EAAqB7C,EAAQ,WACjC,OAAAzG,EAAA,CAAA,EACK8I,GACAjJ,EAEP,EAAG,CAACiJ,GAAgB7E,KAAKC,UAAUrE,KAEnC,OAAIoJ,EAAUM,UAIVhG,EAACiG,IACC3J,WAAYyJ,EACZG,cAAeR,EAAUQ,cACzBL,SAAUA,IAIP7F,EAACiD,GAAO,CAAC3G,WAAYyJ,EAAoB7H,MAAO2H,GAE3D,EACA,CACEM,UAAW,iBAIFC,GAKR,SAL4BtF,GAK1B,IAAAxE,EAAUwE,EAAVxE,WAAY4J,EAAapF,EAAboF,cAAetV,EAAKkQ,EAALlQ,MAAOoV,EAASlF,EAATkF,UACjCD,EAAqB7C,EAAQ,WACjC,OAAAzG,EACK8I,CAAAA,EAAAA,GACAjJ,EAEP,EAAG,CAACiJ,GAAgBjJ,IAEpB,OAAI0J,EAIAhG,EAACqG,EAAgB,CAAAL,UAAWA,EAASxT,SACnCwN,EAACiG,GACC,CAAA3J,WAAYyJ,EACZG,cAAeA,EACfL,SAAUjV,MAKToP,EAACiD,GAAO,CAAC3G,WAAYyJ,EAAoB7H,MAAOtN,GAE3D,EAEMqV,GAID,SAJWjF,GAIT,IAAA1E,EAAU0E,EAAV1E,WAAY4J,EAAalF,EAAbkF,cAAeL,EAAQ7E,EAAR6E,SAC1BS,EAASnE,EAAMoE,KAAI,WAAA,IAAA,OAAArH,QAAAC,QAAmBqH,OAAO,wBAAyBpH,CAAAA,MAAAA,GAAAF,OAAAA,QAAAG,OAAAD,EAAA,CAAA,GAEtEqH,EAAetE,EAAMe,QAAQ,WAAA,OAAMoD,CAAM,EAAE,IAEjD,OACEtG,EAACmC,EAAMuE,SAAQ,CAACC,SAAU3G,EAAqB,MAAA,CAAAxN,SAAA,eAAAA,SAC7CwN,EAACyG,GACCnK,WAAYA,EACZ4J,cAAeA,EACfU,KAAK,iBACL1I,MAAO2H,KAGf"}
\ No newline at end of file
diff --git a/node_modules/@atsnek/jaen-fields-mdx/dist/index.cjs b/node_modules/@atsnek/jaen-fields-mdx/dist/index.cjs
index df788df..ccf4d00 100644
--- a/node_modules/@atsnek/jaen-fields-mdx/dist/index.cjs
+++ b/node_modules/@atsnek/jaen-fields-mdx/dist/index.cjs
@@ -1,2 +1,2 @@
-var e=require("./index-c7899b5b.js");require("react/jsx-runtime"),require("@atsnek/jaen"),require("react"),require("vfile-statistics"),require("@mdx-js/mdx"),require("ahooks"),require("mdast-util-frontmatter"),require("mdast-util-gfm"),require("mdast-util-math"),require("mdast-util-mdx"),require("rehype-slug-custom-id"),require("rehype-mdx-code-props"),require("rehype-mathjax/svg"),require("mdast-util-directive"),require("remark-directive"),require("remark-frontmatter"),require("remark-gfm"),require("remark-math"),require("vfile"),require("vfile-message"),require("mdast-util-to-markdown"),require("deepmerge"),require("react-error-boundary"),require("react-syntax-highlighter"),require("@chakra-ui/react"),require("gatsby"),exports.MdxField=e.MdxField,exports.UncontrolledMdxField=e.UncontrolledMdxField;
+var e=require("./index-0b68d159.js");require("react/jsx-runtime"),require("@atsnek/jaen"),require("react"),require("vfile-statistics"),require("@mdx-js/mdx"),require("ahooks"),require("mdast-util-frontmatter"),require("mdast-util-gfm"),require("mdast-util-math"),require("mdast-util-mdx"),require("rehype-slug-custom-id"),require("rehype-mdx-code-props"),require("rehype-mathjax/svg"),require("mdast-util-directive"),require("remark-directive"),require("remark-frontmatter"),require("remark-gfm"),require("remark-math"),require("vfile"),require("vfile-message"),require("mdast-util-to-markdown"),require("deepmerge"),require("hast-util-sanitize"),require("react-error-boundary"),require("react-syntax-highlighter"),require("@chakra-ui/react"),require("gatsby"),exports.MdxField=e.MdxField,exports.UncontrolledMdxField=e.UncontrolledMdxField;
 //# sourceMappingURL=index.cjs.map
diff --git a/node_modules/@atsnek/jaen-fields-mdx/dist/index.module.js b/node_modules/@atsnek/jaen-fields-mdx/dist/index.module.js
index 2b694b9..efdddf2 100644
--- a/node_modules/@atsnek/jaen-fields-mdx/dist/index.module.js
+++ b/node_modules/@atsnek/jaen-fields-mdx/dist/index.module.js
@@ -1,2 +1,2 @@
-export{M as MdxField,U as UncontrolledMdxField}from"./index-d9e23d28.js";import"react/jsx-runtime";import"@atsnek/jaen";import"react";import"vfile-statistics";import"@mdx-js/mdx";import"ahooks";import"mdast-util-frontmatter";import"mdast-util-gfm";import"mdast-util-math";import"mdast-util-mdx";import"rehype-slug-custom-id";import"rehype-mdx-code-props";import"rehype-mathjax/svg";import"mdast-util-directive";import"remark-directive";import"remark-frontmatter";import"remark-gfm";import"remark-math";import"vfile";import"vfile-message";import"mdast-util-to-markdown";import"deepmerge";import"react-error-boundary";import"react-syntax-highlighter";import"@chakra-ui/react";import"gatsby";
+export{M as MdxField,U as UncontrolledMdxField}from"./index-aa32301e.js";import"react/jsx-runtime";import"@atsnek/jaen";import"react";import"vfile-statistics";import"@mdx-js/mdx";import"ahooks";import"mdast-util-frontmatter";import"mdast-util-gfm";import"mdast-util-math";import"mdast-util-mdx";import"rehype-slug-custom-id";import"rehype-mdx-code-props";import"rehype-mathjax/svg";import"mdast-util-directive";import"remark-directive";import"remark-frontmatter";import"remark-gfm";import"remark-math";import"vfile";import"vfile-message";import"mdast-util-to-markdown";import"deepmerge";import"hast-util-sanitize";import"react-error-boundary";import"react-syntax-highlighter";import"@chakra-ui/react";import"gatsby";
 //# sourceMappingURL=index.module.js.map
